// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _guess_edu_HH_
#define _guess_edu_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "predictive_controbkb.h"
#include "predictive_controcud.h"
#include "guess_edu_u_educaibs.h"

namespace ap_rtl {

struct guess_edu : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > U_KK_a_address0;
    sc_out< sc_logic > U_KK_a_ce0;
    sc_in< sc_lv<32> > U_KK_a_q0;
    sc_out< sc_lv<8> > V_Gen_a_cpy_address0;
    sc_out< sc_logic > V_Gen_a_cpy_ce0;
    sc_in< sc_lv<32> > V_Gen_a_cpy_q0;
    sc_out< sc_lv<4> > U_unc_kk_address0;
    sc_out< sc_logic > U_unc_kk_ce0;
    sc_in< sc_lv<32> > U_unc_kk_q0;
    sc_out< sc_lv<32> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    guess_edu(sc_module_name name);
    SC_HAS_PROCESS(guess_edu);

    ~guess_edu();

    sc_trace_file* mVcdFile;

    guess_edu_u_educaibs* u_educated_U;
    predictive_controbkb<1,4,32,32,32>* predictive_controbkb_U30;
    predictive_controcud<1,2,32,32,32>* predictive_controcud_U31;
    sc_signal< sc_lv<25> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > grp_fu_229_p2;
    sc_signal< sc_lv<32> > reg_233;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > tmp_77_reg_455;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<4> > indvarinc_fu_238_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > tmp_71_fu_261_p1;
    sc_signal< sc_lv<64> > tmp_71_reg_406;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond3_fu_255_p2;
    sc_signal< sc_lv<4> > i_3_fu_266_p2;
    sc_signal< sc_lv<4> > i_3_reg_416;
    sc_signal< sc_lv<4> > i_4_fu_278_p2;
    sc_signal< sc_lv<4> > i_4_reg_424;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond2_fu_272_p2;
    sc_signal< sc_lv<4> > row_14_fu_306_p2;
    sc_signal< sc_lv<4> > row_14_reg_437;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<9> > tmp_75_fu_336_p2;
    sc_signal< sc_lv<9> > tmp_75_reg_442;
    sc_signal< sc_lv<1> > exitcond1_fu_300_p2;
    sc_signal< sc_lv<4> > col_4_fu_352_p2;
    sc_signal< sc_lv<4> > col_4_reg_450;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > tmp_77_fu_358_p2;
    sc_signal< sc_lv<1> > exitcond_fu_346_p2;
    sc_signal< sc_lv<32> > V_Gen_a_cpy_load_reg_475;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > u_educated_q0;
    sc_signal< sc_lv<32> > u_educated_load_reg_480;
    sc_signal< sc_lv<32> > temp_value_1_fu_388_p3;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > grp_fu_221_p2;
    sc_signal< sc_lv<32> > temp_value_2_reg_495;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<4> > u_educated_address0;
    sc_signal< sc_logic > u_educated_ce0;
    sc_signal< sc_logic > u_educated_we0;
    sc_signal< sc_lv<32> > u_educated_d0;
    sc_signal< sc_lv<4> > invdar_reg_140;
    sc_signal< sc_lv<1> > tmp_s_fu_249_p2;
    sc_signal< sc_lv<4> > i_reg_151;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > i1_reg_162;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > educated_rho_reg_174;
    sc_signal< sc_lv<4> > row_reg_186;
    sc_signal< sc_lv<32> > temp_value_reg_198;
    sc_signal< sc_lv<4> > col_reg_210;
    sc_signal< sc_lv<64> > tmp_fu_244_p1;
    sc_signal< sc_lv<64> > tmp_73_fu_290_p1;
    sc_signal< sc_lv<64> > tmp_74_fu_295_p1;
    sc_signal< sc_lv<64> > tmp_79_fu_373_p1;
    sc_signal< sc_lv<64> > tmp_80_fu_378_p1;
    sc_signal< sc_lv<64> > tmp_76_fu_383_p1;
    sc_signal< sc_lv<32> > grp_fu_221_p0;
    sc_signal< sc_lv<32> > grp_fu_221_p1;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<32> > grp_fu_229_p0;
    sc_signal< sc_lv<32> > grp_fu_229_p1;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<4> > tmp_72_fu_284_p2;
    sc_signal< sc_lv<8> > p_shl_fu_312_p3;
    sc_signal< sc_lv<6> > p_shl5_fu_324_p3;
    sc_signal< sc_lv<9> > p_shl_cast_fu_320_p1;
    sc_signal< sc_lv<9> > p_shl5_cast_fu_332_p1;
    sc_signal< sc_lv<9> > col_cast2_fu_342_p1;
    sc_signal< sc_lv<9> > tmp_78_fu_364_p2;
    sc_signal< sc_lv<32> > tmp_78_cast_fu_369_p1;
    sc_signal< sc_lv<2> > grp_fu_221_opcode;
    sc_signal< sc_lv<32> > ap_return_preg;
    sc_signal< sc_lv<25> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<25> ap_ST_fsm_state1;
    static const sc_lv<25> ap_ST_fsm_state2;
    static const sc_lv<25> ap_ST_fsm_state3;
    static const sc_lv<25> ap_ST_fsm_state4;
    static const sc_lv<25> ap_ST_fsm_state5;
    static const sc_lv<25> ap_ST_fsm_state6;
    static const sc_lv<25> ap_ST_fsm_state7;
    static const sc_lv<25> ap_ST_fsm_state8;
    static const sc_lv<25> ap_ST_fsm_state9;
    static const sc_lv<25> ap_ST_fsm_state10;
    static const sc_lv<25> ap_ST_fsm_state11;
    static const sc_lv<25> ap_ST_fsm_state12;
    static const sc_lv<25> ap_ST_fsm_state13;
    static const sc_lv<25> ap_ST_fsm_state14;
    static const sc_lv<25> ap_ST_fsm_state15;
    static const sc_lv<25> ap_ST_fsm_state16;
    static const sc_lv<25> ap_ST_fsm_state17;
    static const sc_lv<25> ap_ST_fsm_state18;
    static const sc_lv<25> ap_ST_fsm_state19;
    static const sc_lv<25> ap_ST_fsm_state20;
    static const sc_lv<25> ap_ST_fsm_state21;
    static const sc_lv<25> ap_ST_fsm_state22;
    static const sc_lv<25> ap_ST_fsm_state23;
    static const sc_lv<25> ap_ST_fsm_state24;
    static const sc_lv<25> ap_ST_fsm_state25;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_U_KK_a_address0();
    void thread_U_KK_a_ce0();
    void thread_U_unc_kk_address0();
    void thread_U_unc_kk_ce0();
    void thread_V_Gen_a_cpy_address0();
    void thread_V_Gen_a_cpy_ce0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_col_4_fu_352_p2();
    void thread_col_cast2_fu_342_p1();
    void thread_exitcond1_fu_300_p2();
    void thread_exitcond2_fu_272_p2();
    void thread_exitcond3_fu_255_p2();
    void thread_exitcond_fu_346_p2();
    void thread_grp_fu_221_opcode();
    void thread_grp_fu_221_p0();
    void thread_grp_fu_221_p1();
    void thread_grp_fu_229_p0();
    void thread_grp_fu_229_p1();
    void thread_i_3_fu_266_p2();
    void thread_i_4_fu_278_p2();
    void thread_indvarinc_fu_238_p2();
    void thread_p_shl5_cast_fu_332_p1();
    void thread_p_shl5_fu_324_p3();
    void thread_p_shl_cast_fu_320_p1();
    void thread_p_shl_fu_312_p3();
    void thread_row_14_fu_306_p2();
    void thread_temp_value_1_fu_388_p3();
    void thread_tmp_71_fu_261_p1();
    void thread_tmp_72_fu_284_p2();
    void thread_tmp_73_fu_290_p1();
    void thread_tmp_74_fu_295_p1();
    void thread_tmp_75_fu_336_p2();
    void thread_tmp_76_fu_383_p1();
    void thread_tmp_77_fu_358_p2();
    void thread_tmp_78_cast_fu_369_p1();
    void thread_tmp_78_fu_364_p2();
    void thread_tmp_79_fu_373_p1();
    void thread_tmp_80_fu_378_p1();
    void thread_tmp_fu_244_p1();
    void thread_tmp_s_fu_249_p2();
    void thread_u_educated_address0();
    void thread_u_educated_ce0();
    void thread_u_educated_d0();
    void thread_u_educated_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
