// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="predictive_controller,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=11155,HLS_SYN_TPT=none,HLS_SYN_MEM=10,HLS_SYN_DSP=39,HLS_SYN_FF=10061,HLS_SYN_LUT=11461,HLS_VERSION=2018_3}" *)

module predictive_controller (
        ap_clk,
        ap_rst_n,
        m_axi_data_AWVALID,
        m_axi_data_AWREADY,
        m_axi_data_AWADDR,
        m_axi_data_AWID,
        m_axi_data_AWLEN,
        m_axi_data_AWSIZE,
        m_axi_data_AWBURST,
        m_axi_data_AWLOCK,
        m_axi_data_AWCACHE,
        m_axi_data_AWPROT,
        m_axi_data_AWQOS,
        m_axi_data_AWREGION,
        m_axi_data_AWUSER,
        m_axi_data_WVALID,
        m_axi_data_WREADY,
        m_axi_data_WDATA,
        m_axi_data_WSTRB,
        m_axi_data_WLAST,
        m_axi_data_WID,
        m_axi_data_WUSER,
        m_axi_data_ARVALID,
        m_axi_data_ARREADY,
        m_axi_data_ARADDR,
        m_axi_data_ARID,
        m_axi_data_ARLEN,
        m_axi_data_ARSIZE,
        m_axi_data_ARBURST,
        m_axi_data_ARLOCK,
        m_axi_data_ARCACHE,
        m_axi_data_ARPROT,
        m_axi_data_ARQOS,
        m_axi_data_ARREGION,
        m_axi_data_ARUSER,
        m_axi_data_RVALID,
        m_axi_data_RREADY,
        m_axi_data_RDATA,
        m_axi_data_RLAST,
        m_axi_data_RID,
        m_axi_data_RUSER,
        m_axi_data_RRESP,
        m_axi_data_BVALID,
        m_axi_data_BREADY,
        m_axi_data_BRESP,
        m_axi_data_BID,
        m_axi_data_BUSER,
        s_axi_crtl_bus_AWVALID,
        s_axi_crtl_bus_AWREADY,
        s_axi_crtl_bus_AWADDR,
        s_axi_crtl_bus_WVALID,
        s_axi_crtl_bus_WREADY,
        s_axi_crtl_bus_WDATA,
        s_axi_crtl_bus_WSTRB,
        s_axi_crtl_bus_ARVALID,
        s_axi_crtl_bus_ARREADY,
        s_axi_crtl_bus_ARADDR,
        s_axi_crtl_bus_RVALID,
        s_axi_crtl_bus_RREADY,
        s_axi_crtl_bus_RDATA,
        s_axi_crtl_bus_RRESP,
        s_axi_crtl_bus_BVALID,
        s_axi_crtl_bus_BREADY,
        s_axi_crtl_bus_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 80'd1;
parameter    ap_ST_fsm_state2 = 80'd2;
parameter    ap_ST_fsm_state3 = 80'd4;
parameter    ap_ST_fsm_state4 = 80'd8;
parameter    ap_ST_fsm_state5 = 80'd16;
parameter    ap_ST_fsm_state6 = 80'd32;
parameter    ap_ST_fsm_state7 = 80'd64;
parameter    ap_ST_fsm_state8 = 80'd128;
parameter    ap_ST_fsm_pp0_stage0 = 80'd256;
parameter    ap_ST_fsm_state11 = 80'd512;
parameter    ap_ST_fsm_state12 = 80'd1024;
parameter    ap_ST_fsm_state13 = 80'd2048;
parameter    ap_ST_fsm_state14 = 80'd4096;
parameter    ap_ST_fsm_state15 = 80'd8192;
parameter    ap_ST_fsm_state16 = 80'd16384;
parameter    ap_ST_fsm_state17 = 80'd32768;
parameter    ap_ST_fsm_pp1_stage0 = 80'd65536;
parameter    ap_ST_fsm_state21 = 80'd131072;
parameter    ap_ST_fsm_state22 = 80'd262144;
parameter    ap_ST_fsm_state23 = 80'd524288;
parameter    ap_ST_fsm_state24 = 80'd1048576;
parameter    ap_ST_fsm_state25 = 80'd2097152;
parameter    ap_ST_fsm_state26 = 80'd4194304;
parameter    ap_ST_fsm_state27 = 80'd8388608;
parameter    ap_ST_fsm_pp2_stage0 = 80'd16777216;
parameter    ap_ST_fsm_state31 = 80'd33554432;
parameter    ap_ST_fsm_state32 = 80'd67108864;
parameter    ap_ST_fsm_state33 = 80'd134217728;
parameter    ap_ST_fsm_state34 = 80'd268435456;
parameter    ap_ST_fsm_state35 = 80'd536870912;
parameter    ap_ST_fsm_state36 = 80'd1073741824;
parameter    ap_ST_fsm_state37 = 80'd2147483648;
parameter    ap_ST_fsm_pp3_stage0 = 80'd4294967296;
parameter    ap_ST_fsm_state41 = 80'd8589934592;
parameter    ap_ST_fsm_state42 = 80'd17179869184;
parameter    ap_ST_fsm_state43 = 80'd34359738368;
parameter    ap_ST_fsm_state44 = 80'd68719476736;
parameter    ap_ST_fsm_state45 = 80'd137438953472;
parameter    ap_ST_fsm_state46 = 80'd274877906944;
parameter    ap_ST_fsm_state47 = 80'd549755813888;
parameter    ap_ST_fsm_pp4_stage0 = 80'd1099511627776;
parameter    ap_ST_fsm_state51 = 80'd2199023255552;
parameter    ap_ST_fsm_state52 = 80'd4398046511104;
parameter    ap_ST_fsm_state53 = 80'd8796093022208;
parameter    ap_ST_fsm_state54 = 80'd17592186044416;
parameter    ap_ST_fsm_state55 = 80'd35184372088832;
parameter    ap_ST_fsm_state56 = 80'd70368744177664;
parameter    ap_ST_fsm_state57 = 80'd140737488355328;
parameter    ap_ST_fsm_pp5_stage0 = 80'd281474976710656;
parameter    ap_ST_fsm_state61 = 80'd562949953421312;
parameter    ap_ST_fsm_state62 = 80'd1125899906842624;
parameter    ap_ST_fsm_state63 = 80'd2251799813685248;
parameter    ap_ST_fsm_state64 = 80'd4503599627370496;
parameter    ap_ST_fsm_state65 = 80'd9007199254740992;
parameter    ap_ST_fsm_state66 = 80'd18014398509481984;
parameter    ap_ST_fsm_state67 = 80'd36028797018963968;
parameter    ap_ST_fsm_pp6_stage0 = 80'd72057594037927936;
parameter    ap_ST_fsm_state71 = 80'd144115188075855872;
parameter    ap_ST_fsm_state72 = 80'd288230376151711744;
parameter    ap_ST_fsm_state73 = 80'd576460752303423488;
parameter    ap_ST_fsm_state74 = 80'd1152921504606846976;
parameter    ap_ST_fsm_state75 = 80'd2305843009213693952;
parameter    ap_ST_fsm_state76 = 80'd4611686018427387904;
parameter    ap_ST_fsm_state77 = 80'd9223372036854775808;
parameter    ap_ST_fsm_pp7_stage0 = 80'd18446744073709551616;
parameter    ap_ST_fsm_state81 = 80'd36893488147419103232;
parameter    ap_ST_fsm_state82 = 80'd73786976294838206464;
parameter    ap_ST_fsm_state83 = 80'd147573952589676412928;
parameter    ap_ST_fsm_state84 = 80'd295147905179352825856;
parameter    ap_ST_fsm_state85 = 80'd590295810358705651712;
parameter    ap_ST_fsm_state86 = 80'd1180591620717411303424;
parameter    ap_ST_fsm_state87 = 80'd2361183241434822606848;
parameter    ap_ST_fsm_state88 = 80'd4722366482869645213696;
parameter    ap_ST_fsm_state89 = 80'd9444732965739290427392;
parameter    ap_ST_fsm_pp8_stage0 = 80'd18889465931478580854784;
parameter    ap_ST_fsm_state93 = 80'd37778931862957161709568;
parameter    ap_ST_fsm_state94 = 80'd75557863725914323419136;
parameter    ap_ST_fsm_state95 = 80'd151115727451828646838272;
parameter    ap_ST_fsm_state96 = 80'd302231454903657293676544;
parameter    ap_ST_fsm_state97 = 80'd604462909807314587353088;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_USER_VALUE = 0;
parameter    C_M_AXI_DATA_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_data_AWVALID;
input   m_axi_data_AWREADY;
output  [C_M_AXI_DATA_ADDR_WIDTH - 1:0] m_axi_data_AWADDR;
output  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_AWID;
output  [7:0] m_axi_data_AWLEN;
output  [2:0] m_axi_data_AWSIZE;
output  [1:0] m_axi_data_AWBURST;
output  [1:0] m_axi_data_AWLOCK;
output  [3:0] m_axi_data_AWCACHE;
output  [2:0] m_axi_data_AWPROT;
output  [3:0] m_axi_data_AWQOS;
output  [3:0] m_axi_data_AWREGION;
output  [C_M_AXI_DATA_AWUSER_WIDTH - 1:0] m_axi_data_AWUSER;
output   m_axi_data_WVALID;
input   m_axi_data_WREADY;
output  [C_M_AXI_DATA_DATA_WIDTH - 1:0] m_axi_data_WDATA;
output  [C_M_AXI_DATA_WSTRB_WIDTH - 1:0] m_axi_data_WSTRB;
output   m_axi_data_WLAST;
output  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_WID;
output  [C_M_AXI_DATA_WUSER_WIDTH - 1:0] m_axi_data_WUSER;
output   m_axi_data_ARVALID;
input   m_axi_data_ARREADY;
output  [C_M_AXI_DATA_ADDR_WIDTH - 1:0] m_axi_data_ARADDR;
output  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_ARID;
output  [7:0] m_axi_data_ARLEN;
output  [2:0] m_axi_data_ARSIZE;
output  [1:0] m_axi_data_ARBURST;
output  [1:0] m_axi_data_ARLOCK;
output  [3:0] m_axi_data_ARCACHE;
output  [2:0] m_axi_data_ARPROT;
output  [3:0] m_axi_data_ARQOS;
output  [3:0] m_axi_data_ARREGION;
output  [C_M_AXI_DATA_ARUSER_WIDTH - 1:0] m_axi_data_ARUSER;
input   m_axi_data_RVALID;
output   m_axi_data_RREADY;
input  [C_M_AXI_DATA_DATA_WIDTH - 1:0] m_axi_data_RDATA;
input   m_axi_data_RLAST;
input  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_RID;
input  [C_M_AXI_DATA_RUSER_WIDTH - 1:0] m_axi_data_RUSER;
input  [1:0] m_axi_data_RRESP;
input   m_axi_data_BVALID;
output   m_axi_data_BREADY;
input  [1:0] m_axi_data_BRESP;
input  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_BID;
input  [C_M_AXI_DATA_BUSER_WIDTH - 1:0] m_axi_data_BUSER;
input   s_axi_crtl_bus_AWVALID;
output   s_axi_crtl_bus_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_crtl_bus_AWADDR;
input   s_axi_crtl_bus_WVALID;
output   s_axi_crtl_bus_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_crtl_bus_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] s_axi_crtl_bus_WSTRB;
input   s_axi_crtl_bus_ARVALID;
output   s_axi_crtl_bus_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_crtl_bus_ARADDR;
output   s_axi_crtl_bus_RVALID;
input   s_axi_crtl_bus_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_crtl_bus_RDATA;
output  [1:0] s_axi_crtl_bus_RRESP;
output   s_axi_crtl_bus_BVALID;
input   s_axi_crtl_bus_BREADY;
output  [1:0] s_axi_crtl_bus_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [79:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] X_KK_src;
wire   [31:0] Y_REF_KK_src;
wire   [31:0] U_KK_src;
wire   [31:0] Y_HAT_src;
wire   [31:0] R_HAT_src;
wire   [31:0] V_MUL_H_INV_src;
wire   [31:0] V_GEN_src;
wire   [31:0] H_HAT_INV_src;
wire   [31:0] out_r;
reg    data_blk_n_AW;
wire    ap_CS_fsm_state89;
reg    data_blk_n_W;
reg    ap_enable_reg_pp8_iter2;
wire    ap_block_pp8_stage0;
reg   [0:0] exitcond10_reg_1548;
reg   [0:0] exitcond10_reg_1548_pp8_iter1_reg;
reg    data_blk_n_B;
wire    ap_CS_fsm_state97;
reg    data_blk_n_AR;
wire    ap_CS_fsm_state71;
reg    data_blk_n_R;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter1;
wire    ap_block_pp7_stage0;
reg   [0:0] exitcond2_reg_1473;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter1;
wire    ap_block_pp6_stage0;
reg   [0:0] exitcond3_reg_1459;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp5_stage0;
reg   [0:0] exitcond4_reg_1445;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage0;
reg   [0:0] exitcond5_reg_1431;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] exitcond6_reg_1417;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] exitcond7_reg_1403;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond8_reg_1389;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    data_AWVALID;
wire    data_AWREADY;
reg    data_WVALID;
wire    data_WREADY;
reg    data_ARVALID;
wire    data_ARREADY;
reg   [31:0] data_ARADDR;
reg   [31:0] data_ARLEN;
wire    data_RVALID;
reg    data_RREADY;
wire   [31:0] data_RDATA;
wire    data_RLAST;
wire   [0:0] data_RID;
wire   [0:0] data_RUSER;
wire   [1:0] data_RRESP;
wire    data_BVALID;
reg    data_BREADY;
wire   [1:0] data_BRESP;
wire   [0:0] data_BID;
wire   [0:0] data_BUSER;
reg   [2:0] row_reg_595;
reg   [3:0] row1_reg_606;
reg   [3:0] row1_reg_606_pp1_iter1_reg;
wire    ap_block_state18_pp1_stage0_iter0;
reg    ap_block_state19_pp1_stage0_iter1;
wire    ap_block_state20_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
reg   [3:0] row2_reg_618;
reg   [3:0] row2_reg_618_pp2_iter1_reg;
wire    ap_block_state28_pp2_stage0_iter0;
reg    ap_block_state29_pp2_stage0_iter1;
wire    ap_block_state30_pp2_stage0_iter2;
reg    ap_block_pp2_stage0_11001;
reg   [6:0] row3_reg_630;
reg   [6:0] row3_reg_630_pp3_iter1_reg;
wire    ap_block_state38_pp3_stage0_iter0;
reg    ap_block_state39_pp3_stage0_iter1;
wire    ap_block_state40_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
reg   [5:0] row4_reg_642;
reg   [5:0] row4_reg_642_pp4_iter1_reg;
wire    ap_block_state48_pp4_stage0_iter0;
reg    ap_block_state49_pp4_stage0_iter1;
wire    ap_block_state50_pp4_stage0_iter2;
reg    ap_block_pp4_stage0_11001;
reg   [7:0] row5_reg_654;
reg   [7:0] row5_reg_654_pp5_iter1_reg;
wire    ap_block_state58_pp5_stage0_iter0;
reg    ap_block_state59_pp5_stage0_iter1;
wire    ap_block_state60_pp5_stage0_iter2;
reg    ap_block_pp5_stage0_11001;
reg   [7:0] row6_reg_666;
reg   [7:0] row6_reg_666_pp6_iter1_reg;
wire    ap_block_state68_pp6_stage0_iter0;
reg    ap_block_state69_pp6_stage0_iter1;
wire    ap_block_state70_pp6_stage0_iter2;
reg    ap_block_pp6_stage0_11001;
reg   [7:0] row7_reg_678;
reg   [7:0] row7_reg_678_pp7_iter1_reg;
wire    ap_block_state78_pp7_stage0_iter0;
reg    ap_block_state79_pp7_stage0_iter1;
wire    ap_block_state80_pp7_stage0_iter2;
reg    ap_block_pp7_stage0_11001;
reg   [3:0] indvar_reg_712;
reg   [29:0] out1_reg_1277;
reg   [29:0] H_HAT_INV_src1_reg_1282;
reg   [29:0] V_GEN_src1_reg_1287;
reg   [29:0] V_MUL_H_INV_src1_reg_1292;
reg   [29:0] R_HAT_src9_reg_1297;
reg   [29:0] Y_HAT_src7_reg_1302;
reg   [29:0] U_KK_src5_reg_1307;
reg   [29:0] Y_REF_KK_src3_reg_1312;
reg   [29:0] X_KK_src1_reg_1317;
reg    ap_sig_ioackin_data_ARREADY;
reg   [31:0] data_addr_reg_1328;
wire    ap_CS_fsm_state8;
reg   [31:0] data_addr_1_reg_1334;
reg   [31:0] data_addr_2_reg_1340;
reg   [31:0] data_addr_3_reg_1346;
reg   [31:0] data_addr_4_reg_1352;
reg   [31:0] data_addr_5_reg_1358;
reg   [31:0] data_addr_6_reg_1364;
reg   [31:0] data_addr_7_reg_1370;
wire   [0:0] exitcond9_fu_939_p2;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] row_4_fu_945_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] tmp_fu_951_p1;
reg   [1:0] tmp_reg_1385;
wire   [0:0] exitcond8_fu_975_p2;
reg   [0:0] exitcond8_reg_1389_pp1_iter1_reg;
wire   [3:0] row_5_fu_981_p2;
reg   [3:0] row_5_reg_1393;
reg    ap_enable_reg_pp1_iter0;
reg   [31:0] data_addr_7_read_reg_1398;
wire   [0:0] exitcond7_fu_992_p2;
reg   [0:0] exitcond7_reg_1403_pp2_iter1_reg;
wire   [3:0] row_6_fu_998_p2;
reg   [3:0] row_6_reg_1407;
reg    ap_enable_reg_pp2_iter0;
reg   [31:0] data_addr_6_read_reg_1412;
wire   [0:0] exitcond6_fu_1009_p2;
reg   [0:0] exitcond6_reg_1417_pp3_iter1_reg;
wire   [6:0] row_7_fu_1015_p2;
reg   [6:0] row_7_reg_1421;
reg    ap_enable_reg_pp3_iter0;
reg   [31:0] data_addr_5_read_reg_1426;
wire   [0:0] exitcond5_fu_1026_p2;
reg   [0:0] exitcond5_reg_1431_pp4_iter1_reg;
wire   [5:0] row_8_fu_1032_p2;
reg   [5:0] row_8_reg_1435;
reg    ap_enable_reg_pp4_iter0;
reg   [31:0] data_addr_4_read_reg_1440;
wire   [0:0] exitcond4_fu_1043_p2;
reg   [0:0] exitcond4_reg_1445_pp5_iter1_reg;
wire   [7:0] row_9_fu_1049_p2;
reg   [7:0] row_9_reg_1449;
reg    ap_enable_reg_pp5_iter0;
reg   [31:0] data_addr_3_read_reg_1454;
wire   [0:0] exitcond3_fu_1060_p2;
reg   [0:0] exitcond3_reg_1459_pp6_iter1_reg;
wire   [7:0] row_10_fu_1066_p2;
reg   [7:0] row_10_reg_1463;
reg    ap_enable_reg_pp6_iter0;
reg   [31:0] data_addr_2_read_reg_1468;
wire   [0:0] exitcond2_fu_1077_p2;
reg   [0:0] exitcond2_reg_1473_pp7_iter1_reg;
wire   [7:0] row_11_fu_1083_p2;
reg   [7:0] row_11_reg_1477;
reg    ap_enable_reg_pp7_iter0;
reg   [31:0] data_addr_1_read_reg_1482;
wire    ap_CS_fsm_state81;
wire   [3:0] row_12_fu_1116_p2;
reg   [3:0] row_12_reg_1510;
wire    ap_CS_fsm_state83;
wire   [63:0] tmp_68_fu_1122_p1;
reg   [63:0] tmp_68_reg_1515;
wire   [0:0] exitcond1_fu_1110_p2;
wire   [7:0] row_13_fu_1133_p2;
reg   [7:0] row_13_reg_1528;
wire    ap_CS_fsm_state85;
wire   [63:0] tmp_70_fu_1139_p1;
reg   [63:0] tmp_70_reg_1533;
wire   [0:0] exitcond_fu_1127_p2;
wire   [31:0] roh_1_fu_1228_p3;
reg   [31:0] roh_1_reg_1543;
wire    ap_CS_fsm_state87;
wire    grp_guess_edu_fu_754_ap_ready;
wire    grp_guess_edu_fu_754_ap_done;
wire    grp_guess_babay_fu_746_ap_ready;
wire    grp_guess_babay_fu_746_ap_done;
reg    ap_block_state87_on_subcall_done;
wire   [0:0] exitcond10_fu_1236_p2;
wire    ap_CS_fsm_pp8_stage0;
wire    ap_block_state90_pp8_stage0_iter0;
wire    ap_block_state91_pp8_stage0_iter1;
wire    ap_block_state92_pp8_stage0_iter2;
reg    ap_sig_ioackin_data_WREADY;
reg    ap_block_state92_io;
reg    ap_block_pp8_stage0_11001;
wire   [3:0] indvar_next_fu_1242_p2;
reg    ap_enable_reg_pp8_iter0;
wire   [31:0] U_opt_q0;
reg   [31:0] U_opt_load_reg_1562;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
wire    ap_CS_fsm_state17;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state18;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state27;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state28;
reg    ap_enable_reg_pp2_iter2;
wire    ap_CS_fsm_state37;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state38;
reg    ap_enable_reg_pp3_iter2;
wire    ap_CS_fsm_state47;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state48;
reg    ap_enable_reg_pp4_iter2;
wire    ap_CS_fsm_state57;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state58;
reg    ap_enable_reg_pp5_iter2;
wire    ap_CS_fsm_state67;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state68;
reg    ap_enable_reg_pp6_iter2;
wire    ap_CS_fsm_state77;
reg    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state78;
reg    ap_enable_reg_pp7_iter2;
reg    ap_sig_ioackin_data_AWREADY;
wire    grp_sph_dec_fu_738_ap_ready;
wire    grp_sph_dec_fu_738_ap_done;
reg    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_exit_iter0_state90;
reg    ap_enable_reg_pp8_iter1;
reg   [2:0] Y_Ref_KK_a_address0;
reg    Y_Ref_KK_a_ce0;
reg    Y_Ref_KK_a_we0;
wire   [31:0] Y_Ref_KK_a_q0;
reg   [3:0] U_KK_a_address0;
reg    U_KK_a_ce0;
reg    U_KK_a_we0;
wire   [31:0] U_KK_a_q0;
reg   [6:0] Y_Hat_a_address0;
reg    Y_Hat_a_ce0;
reg    Y_Hat_a_we0;
wire   [31:0] Y_Hat_a_q0;
reg   [4:0] R_Hat_a_address0;
reg    R_Hat_a_ce0;
reg    R_Hat_a_we0;
wire   [31:0] R_Hat_a_q0;
reg   [7:0] V_Mul_H_Inv_a_address0;
reg    V_Mul_H_Inv_a_ce0;
reg    V_Mul_H_Inv_a_we0;
wire   [31:0] V_Mul_H_Inv_a_q0;
reg   [7:0] V_Gen_a_address0;
reg    V_Gen_a_ce0;
reg    V_Gen_a_we0;
wire   [31:0] V_Gen_a_q0;
reg   [7:0] V_Gen_a_cpy_address0;
reg    V_Gen_a_cpy_ce0;
reg    V_Gen_a_cpy_we0;
wire   [31:0] V_Gen_a_cpy_q0;
reg   [7:0] H_Hat_Inv_a_address0;
reg    H_Hat_Inv_a_ce0;
reg    H_Hat_Inv_a_we0;
wire   [31:0] H_Hat_Inv_a_q0;
reg   [3:0] U_unc_kk_address0;
reg    U_unc_kk_ce0;
reg    U_unc_kk_we0;
wire   [31:0] U_unc_kk_q0;
reg   [3:0] U_unc_kk_cpy_address0;
reg    U_unc_kk_cpy_ce0;
reg    U_unc_kk_cpy_we0;
wire   [31:0] U_unc_kk_cpy_q0;
reg   [3:0] theta_kk_address0;
reg    theta_kk_ce0;
reg    theta_kk_we0;
wire   [31:0] theta_kk_q0;
reg   [3:0] U_opt_address0;
reg    U_opt_ce0;
reg    U_opt_we0;
wire    grp_unconstrained_fu_723_ap_start;
wire    grp_unconstrained_fu_723_ap_done;
wire    grp_unconstrained_fu_723_ap_idle;
wire    grp_unconstrained_fu_723_ap_ready;
wire   [4:0] grp_unconstrained_fu_723_R_Hat_a_address0;
wire    grp_unconstrained_fu_723_R_Hat_a_ce0;
wire   [6:0] grp_unconstrained_fu_723_Y_Hat_a_address0;
wire    grp_unconstrained_fu_723_Y_Hat_a_ce0;
wire   [2:0] grp_unconstrained_fu_723_Y_Ref_KK_a_address0;
wire    grp_unconstrained_fu_723_Y_Ref_KK_a_ce0;
wire   [3:0] grp_unconstrained_fu_723_U_KK_a_address0;
wire    grp_unconstrained_fu_723_U_KK_a_ce0;
wire   [7:0] grp_unconstrained_fu_723_V_Mul_H_Inv_a_address0;
wire    grp_unconstrained_fu_723_V_Mul_H_Inv_a_ce0;
wire   [3:0] grp_unconstrained_fu_723_unconstrained_r_address0;
wire    grp_unconstrained_fu_723_unconstrained_r_ce0;
wire    grp_unconstrained_fu_723_unconstrained_r_we0;
wire   [31:0] grp_unconstrained_fu_723_unconstrained_r_d0;
wire   [3:0] grp_unconstrained_fu_723_theta_kk_address0;
wire    grp_unconstrained_fu_723_theta_kk_ce0;
wire    grp_unconstrained_fu_723_theta_kk_we0;
wire   [31:0] grp_unconstrained_fu_723_theta_kk_d0;
wire    grp_sph_dec_fu_738_ap_start;
wire    grp_sph_dec_fu_738_ap_idle;
wire   [7:0] grp_sph_dec_fu_738_V_Gen_a_address0;
wire    grp_sph_dec_fu_738_V_Gen_a_ce0;
wire   [3:0] grp_sph_dec_fu_738_U_unc_address0;
wire    grp_sph_dec_fu_738_U_unc_ce0;
wire   [3:0] grp_sph_dec_fu_738_U_opt_address0;
wire    grp_sph_dec_fu_738_U_opt_ce0;
wire    grp_sph_dec_fu_738_U_opt_we0;
wire   [31:0] grp_sph_dec_fu_738_U_opt_d0;
wire    grp_guess_babay_fu_746_ap_start;
wire    grp_guess_babay_fu_746_ap_idle;
wire   [7:0] grp_guess_babay_fu_746_V_Gen_a_address0;
wire    grp_guess_babay_fu_746_V_Gen_a_ce0;
wire   [7:0] grp_guess_babay_fu_746_H_Hat_Inv_a_address0;
wire    grp_guess_babay_fu_746_H_Hat_Inv_a_ce0;
wire   [3:0] grp_guess_babay_fu_746_U_unc_kk_address0;
wire    grp_guess_babay_fu_746_U_unc_kk_ce0;
wire   [3:0] grp_guess_babay_fu_746_theta_kk_address0;
wire    grp_guess_babay_fu_746_theta_kk_ce0;
wire   [31:0] grp_guess_babay_fu_746_ap_return;
wire    grp_guess_edu_fu_754_ap_start;
wire    grp_guess_edu_fu_754_ap_idle;
wire   [3:0] grp_guess_edu_fu_754_U_KK_a_address0;
wire    grp_guess_edu_fu_754_U_KK_a_ce0;
wire   [7:0] grp_guess_edu_fu_754_V_Gen_a_cpy_address0;
wire    grp_guess_edu_fu_754_V_Gen_a_cpy_ce0;
wire   [3:0] grp_guess_edu_fu_754_U_unc_kk_address0;
wire    grp_guess_edu_fu_754_U_unc_kk_ce0;
wire   [31:0] grp_guess_edu_fu_754_ap_return;
reg   [3:0] ap_phi_mux_row1_phi_fu_610_p4;
reg   [3:0] ap_phi_mux_row2_phi_fu_622_p4;
reg   [6:0] ap_phi_mux_row3_phi_fu_634_p4;
reg   [5:0] ap_phi_mux_row4_phi_fu_646_p4;
reg   [7:0] ap_phi_mux_row5_phi_fu_658_p4;
reg   [7:0] ap_phi_mux_row6_phi_fu_670_p4;
reg   [7:0] ap_phi_mux_row7_phi_fu_682_p4;
reg   [3:0] row8_reg_690;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state84;
reg   [7:0] row9_reg_701;
wire    ap_CS_fsm_state86;
reg    grp_unconstrained_fu_723_ap_start_reg;
reg    grp_sph_dec_fu_738_ap_start_reg;
wire    ap_CS_fsm_state88;
reg    grp_guess_babay_fu_746_ap_start_reg;
reg    grp_guess_edu_fu_754_ap_start_reg;
wire   [63:0] tmp_s_fu_987_p1;
wire   [63:0] tmp_62_fu_1004_p1;
wire   [63:0] tmp_63_fu_1021_p1;
wire   [63:0] tmp_64_fu_1038_p1;
wire   [63:0] tmp_65_fu_1055_p1;
wire   [63:0] tmp_66_fu_1072_p1;
wire   [63:0] tmp_67_fu_1089_p1;
wire   [63:0] indvar1_fu_1248_p1;
wire   [63:0] tmp_87_fu_857_p1;
wire   [63:0] tmp_79_fu_867_p1;
wire   [63:0] tmp_80_fu_876_p1;
wire   [63:0] tmp_81_fu_885_p1;
wire   [63:0] tmp_82_fu_894_p1;
wire   [63:0] tmp_83_fu_903_p1;
wire   [63:0] tmp_84_fu_912_p1;
wire   [63:0] tmp_85_fu_921_p1;
wire   [63:0] tmp_86_fu_930_p1;
reg    ap_reg_ioackin_data_ARREADY;
reg    ap_reg_ioackin_data_AWREADY;
reg    ap_reg_ioackin_data_WREADY;
wire    ap_block_pp8_stage0_01001;
reg   [31:0] X_KK_a_3_fu_224;
reg   [31:0] X_KK_a_3_1_fu_228;
reg   [31:0] X_KK_a_3_2_fu_232;
reg   [31:0] X_KK_a_3_3_fu_236;
wire   [31:0] roh_2_to_int_fu_1144_p1;
wire   [31:0] roh_babay_to_int_fu_1162_p1;
wire   [7:0] tmp_78_fu_1148_p4;
wire   [22:0] tmp_88_fu_1158_p1;
wire   [0:0] notrhs_fu_1186_p2;
wire   [0:0] notlhs_fu_1180_p2;
wire   [7:0] tmp_89_fu_1166_p4;
wire   [22:0] tmp_90_fu_1176_p1;
wire   [0:0] notrhs2_fu_1204_p2;
wire   [0:0] notlhs2_fu_1198_p2;
wire   [0:0] tmp_91_fu_1192_p2;
wire   [0:0] tmp_92_fu_1210_p2;
wire   [0:0] tmp_93_fu_1216_p2;
wire   [0:0] tmp_94_fu_761_p2;
wire   [0:0] tmp_95_fu_1222_p2;
reg   [79:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;

// power-on initialization
initial begin
#0 ap_CS_fsm = 80'd1;
#0 ap_enable_reg_pp8_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
#0 grp_unconstrained_fu_723_ap_start_reg = 1'b0;
#0 grp_sph_dec_fu_738_ap_start_reg = 1'b0;
#0 grp_guess_babay_fu_746_ap_start_reg = 1'b0;
#0 grp_guess_edu_fu_754_ap_start_reg = 1'b0;
#0 ap_reg_ioackin_data_ARREADY = 1'b0;
#0 ap_reg_ioackin_data_AWREADY = 1'b0;
#0 ap_reg_ioackin_data_WREADY = 1'b0;
end

predictive_controller_crtl_bus_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
predictive_controller_crtl_bus_s_axi_U(
    .AWVALID(s_axi_crtl_bus_AWVALID),
    .AWREADY(s_axi_crtl_bus_AWREADY),
    .AWADDR(s_axi_crtl_bus_AWADDR),
    .WVALID(s_axi_crtl_bus_WVALID),
    .WREADY(s_axi_crtl_bus_WREADY),
    .WDATA(s_axi_crtl_bus_WDATA),
    .WSTRB(s_axi_crtl_bus_WSTRB),
    .ARVALID(s_axi_crtl_bus_ARVALID),
    .ARREADY(s_axi_crtl_bus_ARREADY),
    .ARADDR(s_axi_crtl_bus_ARADDR),
    .RVALID(s_axi_crtl_bus_RVALID),
    .RREADY(s_axi_crtl_bus_RREADY),
    .RDATA(s_axi_crtl_bus_RDATA),
    .RRESP(s_axi_crtl_bus_RRESP),
    .BVALID(s_axi_crtl_bus_BVALID),
    .BREADY(s_axi_crtl_bus_BREADY),
    .BRESP(s_axi_crtl_bus_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .X_KK_src(X_KK_src),
    .Y_REF_KK_src(Y_REF_KK_src),
    .U_KK_src(U_KK_src),
    .Y_HAT_src(Y_HAT_src),
    .R_HAT_src(R_HAT_src),
    .V_MUL_H_INV_src(V_MUL_H_INV_src),
    .V_GEN_src(V_GEN_src),
    .H_HAT_INV_src(H_HAT_INV_src),
    .out_r(out_r)
);

predictive_controller_data_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_CACHE_VALUE ))
predictive_controller_data_m_axi_U(
    .AWVALID(m_axi_data_AWVALID),
    .AWREADY(m_axi_data_AWREADY),
    .AWADDR(m_axi_data_AWADDR),
    .AWID(m_axi_data_AWID),
    .AWLEN(m_axi_data_AWLEN),
    .AWSIZE(m_axi_data_AWSIZE),
    .AWBURST(m_axi_data_AWBURST),
    .AWLOCK(m_axi_data_AWLOCK),
    .AWCACHE(m_axi_data_AWCACHE),
    .AWPROT(m_axi_data_AWPROT),
    .AWQOS(m_axi_data_AWQOS),
    .AWREGION(m_axi_data_AWREGION),
    .AWUSER(m_axi_data_AWUSER),
    .WVALID(m_axi_data_WVALID),
    .WREADY(m_axi_data_WREADY),
    .WDATA(m_axi_data_WDATA),
    .WSTRB(m_axi_data_WSTRB),
    .WLAST(m_axi_data_WLAST),
    .WID(m_axi_data_WID),
    .WUSER(m_axi_data_WUSER),
    .ARVALID(m_axi_data_ARVALID),
    .ARREADY(m_axi_data_ARREADY),
    .ARADDR(m_axi_data_ARADDR),
    .ARID(m_axi_data_ARID),
    .ARLEN(m_axi_data_ARLEN),
    .ARSIZE(m_axi_data_ARSIZE),
    .ARBURST(m_axi_data_ARBURST),
    .ARLOCK(m_axi_data_ARLOCK),
    .ARCACHE(m_axi_data_ARCACHE),
    .ARPROT(m_axi_data_ARPROT),
    .ARQOS(m_axi_data_ARQOS),
    .ARREGION(m_axi_data_ARREGION),
    .ARUSER(m_axi_data_ARUSER),
    .RVALID(m_axi_data_RVALID),
    .RREADY(m_axi_data_RREADY),
    .RDATA(m_axi_data_RDATA),
    .RLAST(m_axi_data_RLAST),
    .RID(m_axi_data_RID),
    .RUSER(m_axi_data_RUSER),
    .RRESP(m_axi_data_RRESP),
    .BVALID(m_axi_data_BVALID),
    .BREADY(m_axi_data_BREADY),
    .BRESP(m_axi_data_BRESP),
    .BID(m_axi_data_BID),
    .BUSER(m_axi_data_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(data_ARVALID),
    .I_ARREADY(data_ARREADY),
    .I_ARADDR(data_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(data_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(data_RVALID),
    .I_RREADY(data_RREADY),
    .I_RDATA(data_RDATA),
    .I_RID(data_RID),
    .I_RUSER(data_RUSER),
    .I_RRESP(data_RRESP),
    .I_RLAST(data_RLAST),
    .I_AWVALID(data_AWVALID),
    .I_AWREADY(data_AWREADY),
    .I_AWADDR(data_addr_reg_1328),
    .I_AWID(1'd0),
    .I_AWLEN(32'd12),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(data_WVALID),
    .I_WREADY(data_WREADY),
    .I_WDATA(U_opt_load_reg_1562),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(data_BVALID),
    .I_BREADY(data_BREADY),
    .I_BRESP(data_BRESP),
    .I_BID(data_BID),
    .I_BUSER(data_BUSER)
);

unconstrained_temp #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
Y_Ref_KK_a_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Y_Ref_KK_a_address0),
    .ce0(Y_Ref_KK_a_ce0),
    .we0(Y_Ref_KK_a_we0),
    .d0(data_addr_7_read_reg_1398),
    .q0(Y_Ref_KK_a_q0)
);

guess_edu_u_educaibs #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
U_KK_a_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(U_KK_a_address0),
    .ce0(U_KK_a_ce0),
    .we0(U_KK_a_we0),
    .d0(data_addr_6_read_reg_1412),
    .q0(U_KK_a_q0)
);

predictive_controrcU #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
Y_Hat_a_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Y_Hat_a_address0),
    .ce0(Y_Hat_a_ce0),
    .we0(Y_Hat_a_we0),
    .d0(data_addr_5_read_reg_1426),
    .q0(Y_Hat_a_q0)
);

predictive_controsc4 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
R_Hat_a_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(R_Hat_a_address0),
    .ce0(R_Hat_a_ce0),
    .we0(R_Hat_a_we0),
    .d0(data_addr_4_read_reg_1440),
    .q0(R_Hat_a_q0)
);

predictive_controtde #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
V_Mul_H_Inv_a_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(V_Mul_H_Inv_a_address0),
    .ce0(V_Mul_H_Inv_a_ce0),
    .we0(V_Mul_H_Inv_a_we0),
    .d0(data_addr_3_read_reg_1454),
    .q0(V_Mul_H_Inv_a_q0)
);

predictive_controtde #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
V_Gen_a_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(V_Gen_a_address0),
    .ce0(V_Gen_a_ce0),
    .we0(V_Gen_a_we0),
    .d0(data_addr_2_read_reg_1468),
    .q0(V_Gen_a_q0)
);

predictive_controtde #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
V_Gen_a_cpy_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(V_Gen_a_cpy_address0),
    .ce0(V_Gen_a_cpy_ce0),
    .we0(V_Gen_a_cpy_we0),
    .d0(V_Gen_a_q0),
    .q0(V_Gen_a_cpy_q0)
);

predictive_controtde #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
H_Hat_Inv_a_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(H_Hat_Inv_a_address0),
    .ce0(H_Hat_Inv_a_ce0),
    .we0(H_Hat_Inv_a_we0),
    .d0(data_addr_1_read_reg_1482),
    .q0(H_Hat_Inv_a_q0)
);

guess_edu_u_educaibs #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
U_unc_kk_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(U_unc_kk_address0),
    .ce0(U_unc_kk_ce0),
    .we0(U_unc_kk_we0),
    .d0(grp_unconstrained_fu_723_unconstrained_r_d0),
    .q0(U_unc_kk_q0)
);

guess_edu_u_educaibs #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
U_unc_kk_cpy_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(U_unc_kk_cpy_address0),
    .ce0(U_unc_kk_cpy_ce0),
    .we0(U_unc_kk_cpy_we0),
    .d0(U_unc_kk_q0),
    .q0(U_unc_kk_cpy_q0)
);

guess_edu_u_educaibs #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
theta_kk_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(theta_kk_address0),
    .ce0(theta_kk_ce0),
    .we0(theta_kk_we0),
    .d0(grp_unconstrained_fu_723_theta_kk_d0),
    .q0(theta_kk_q0)
);

guess_edu_u_educaibs #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
U_opt_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(U_opt_address0),
    .ce0(U_opt_ce0),
    .we0(U_opt_we0),
    .d0(grp_sph_dec_fu_738_U_opt_d0),
    .q0(U_opt_q0)
);

unconstrained grp_unconstrained_fu_723(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_unconstrained_fu_723_ap_start),
    .ap_done(grp_unconstrained_fu_723_ap_done),
    .ap_idle(grp_unconstrained_fu_723_ap_idle),
    .ap_ready(grp_unconstrained_fu_723_ap_ready),
    .R_Hat_a_address0(grp_unconstrained_fu_723_R_Hat_a_address0),
    .R_Hat_a_ce0(grp_unconstrained_fu_723_R_Hat_a_ce0),
    .R_Hat_a_q0(R_Hat_a_q0),
    .X_KK_a_0_read(X_KK_a_3_fu_224),
    .X_KK_a_1_read(X_KK_a_3_1_fu_228),
    .X_KK_a_2_read(X_KK_a_3_2_fu_232),
    .X_KK_a_3_read(X_KK_a_3_3_fu_236),
    .Y_Hat_a_address0(grp_unconstrained_fu_723_Y_Hat_a_address0),
    .Y_Hat_a_ce0(grp_unconstrained_fu_723_Y_Hat_a_ce0),
    .Y_Hat_a_q0(Y_Hat_a_q0),
    .Y_Ref_KK_a_address0(grp_unconstrained_fu_723_Y_Ref_KK_a_address0),
    .Y_Ref_KK_a_ce0(grp_unconstrained_fu_723_Y_Ref_KK_a_ce0),
    .Y_Ref_KK_a_q0(Y_Ref_KK_a_q0),
    .U_KK_a_address0(grp_unconstrained_fu_723_U_KK_a_address0),
    .U_KK_a_ce0(grp_unconstrained_fu_723_U_KK_a_ce0),
    .U_KK_a_q0(U_KK_a_q0),
    .V_Mul_H_Inv_a_address0(grp_unconstrained_fu_723_V_Mul_H_Inv_a_address0),
    .V_Mul_H_Inv_a_ce0(grp_unconstrained_fu_723_V_Mul_H_Inv_a_ce0),
    .V_Mul_H_Inv_a_q0(V_Mul_H_Inv_a_q0),
    .unconstrained_r_address0(grp_unconstrained_fu_723_unconstrained_r_address0),
    .unconstrained_r_ce0(grp_unconstrained_fu_723_unconstrained_r_ce0),
    .unconstrained_r_we0(grp_unconstrained_fu_723_unconstrained_r_we0),
    .unconstrained_r_d0(grp_unconstrained_fu_723_unconstrained_r_d0),
    .theta_kk_address0(grp_unconstrained_fu_723_theta_kk_address0),
    .theta_kk_ce0(grp_unconstrained_fu_723_theta_kk_ce0),
    .theta_kk_we0(grp_unconstrained_fu_723_theta_kk_we0),
    .theta_kk_d0(grp_unconstrained_fu_723_theta_kk_d0),
    .theta_kk_q0(theta_kk_q0)
);

sph_dec grp_sph_dec_fu_738(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_sph_dec_fu_738_ap_start),
    .ap_done(grp_sph_dec_fu_738_ap_done),
    .ap_idle(grp_sph_dec_fu_738_ap_idle),
    .ap_ready(grp_sph_dec_fu_738_ap_ready),
    .V_Gen_a_address0(grp_sph_dec_fu_738_V_Gen_a_address0),
    .V_Gen_a_ce0(grp_sph_dec_fu_738_V_Gen_a_ce0),
    .V_Gen_a_q0(V_Gen_a_q0),
    .roh(roh_1_reg_1543),
    .U_unc_address0(grp_sph_dec_fu_738_U_unc_address0),
    .U_unc_ce0(grp_sph_dec_fu_738_U_unc_ce0),
    .U_unc_q0(U_unc_kk_q0),
    .U_opt_address0(grp_sph_dec_fu_738_U_opt_address0),
    .U_opt_ce0(grp_sph_dec_fu_738_U_opt_ce0),
    .U_opt_we0(grp_sph_dec_fu_738_U_opt_we0),
    .U_opt_d0(grp_sph_dec_fu_738_U_opt_d0)
);

guess_babay grp_guess_babay_fu_746(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_guess_babay_fu_746_ap_start),
    .ap_done(grp_guess_babay_fu_746_ap_done),
    .ap_idle(grp_guess_babay_fu_746_ap_idle),
    .ap_ready(grp_guess_babay_fu_746_ap_ready),
    .V_Gen_a_address0(grp_guess_babay_fu_746_V_Gen_a_address0),
    .V_Gen_a_ce0(grp_guess_babay_fu_746_V_Gen_a_ce0),
    .V_Gen_a_q0(V_Gen_a_q0),
    .H_Hat_Inv_a_address0(grp_guess_babay_fu_746_H_Hat_Inv_a_address0),
    .H_Hat_Inv_a_ce0(grp_guess_babay_fu_746_H_Hat_Inv_a_ce0),
    .H_Hat_Inv_a_q0(H_Hat_Inv_a_q0),
    .U_unc_kk_address0(grp_guess_babay_fu_746_U_unc_kk_address0),
    .U_unc_kk_ce0(grp_guess_babay_fu_746_U_unc_kk_ce0),
    .U_unc_kk_q0(U_unc_kk_q0),
    .theta_kk_address0(grp_guess_babay_fu_746_theta_kk_address0),
    .theta_kk_ce0(grp_guess_babay_fu_746_theta_kk_ce0),
    .theta_kk_q0(theta_kk_q0),
    .ap_return(grp_guess_babay_fu_746_ap_return)
);

guess_edu grp_guess_edu_fu_754(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_guess_edu_fu_754_ap_start),
    .ap_done(grp_guess_edu_fu_754_ap_done),
    .ap_idle(grp_guess_edu_fu_754_ap_idle),
    .ap_ready(grp_guess_edu_fu_754_ap_ready),
    .U_KK_a_address0(grp_guess_edu_fu_754_U_KK_a_address0),
    .U_KK_a_ce0(grp_guess_edu_fu_754_U_KK_a_ce0),
    .U_KK_a_q0(U_KK_a_q0),
    .V_Gen_a_cpy_address0(grp_guess_edu_fu_754_V_Gen_a_cpy_address0),
    .V_Gen_a_cpy_ce0(grp_guess_edu_fu_754_V_Gen_a_cpy_ce0),
    .V_Gen_a_cpy_q0(V_Gen_a_cpy_q0),
    .U_unc_kk_address0(grp_guess_edu_fu_754_U_unc_kk_address0),
    .U_unc_kk_ce0(grp_guess_edu_fu_754_U_unc_kk_ce0),
    .U_unc_kk_q0(U_unc_kk_cpy_q0),
    .ap_return(grp_guess_edu_fu_754_ap_return)
);

predictive_controjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
predictive_controjbC_U63(
    .din0(grp_guess_edu_fu_754_ap_return),
    .din1(grp_guess_babay_fu_746_ap_return),
    .opcode(5'd4),
    .dout(tmp_94_fu_761_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state18)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state18);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state28) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state28)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state38) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state38)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state38);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state48) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state48)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state48);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state58) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state57)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state58)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state58);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if ((1'b1 == ap_CS_fsm_state57)) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state68) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state68)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state68);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp6_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_condition_pp7_exit_iter0_state78) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state77)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state78)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state78);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end else if ((1'b1 == ap_CS_fsm_state77)) begin
            ap_enable_reg_pp7_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage0_subdone) & (1'b1 == ap_condition_pp8_exit_iter0_state90) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if ((~((grp_sph_dec_fu_738_ap_done == 1'b0) | (ap_sig_ioackin_data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state89))) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp8_exit_iter0_state90)) begin
                ap_enable_reg_pp8_iter1 <= (1'b1 ^ ap_condition_pp8_exit_iter0_state90);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter2 <= ap_enable_reg_pp8_iter1;
        end else if ((~((grp_sph_dec_fu_738_ap_done == 1'b0) | (ap_sig_ioackin_data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state89))) begin
            ap_enable_reg_pp8_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_data_ARREADY <= 1'b0;
    end else begin
        if ((((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state31)) | ((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state41)) | ((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51)) | ((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state61)) | ((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state71)))) begin
            ap_reg_ioackin_data_ARREADY <= 1'b0;
        end else if ((((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state31)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state41)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state61)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state71)))) begin
            ap_reg_ioackin_data_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_data_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state89)) begin
            if (~((grp_sph_dec_fu_738_ap_done == 1'b0) | (ap_sig_ioackin_data_AWREADY == 1'b0))) begin
                ap_reg_ioackin_data_AWREADY <= 1'b0;
            end else if (((grp_sph_dec_fu_738_ap_done == 1'b1) & (data_AWREADY == 1'b1))) begin
                ap_reg_ioackin_data_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_data_WREADY <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp8_iter2 == 1'b1) & (exitcond10_reg_1548_pp8_iter1_reg == 1'd0))) begin
            if ((1'b0 == ap_block_pp8_stage0_11001)) begin
                ap_reg_ioackin_data_WREADY <= 1'b0;
            end else if (((data_WREADY == 1'b1) & (1'b0 == ap_block_pp8_stage0_01001))) begin
                ap_reg_ioackin_data_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_guess_babay_fu_746_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond_fu_1127_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
            grp_guess_babay_fu_746_ap_start_reg <= 1'b1;
        end else if ((grp_guess_babay_fu_746_ap_ready == 1'b1)) begin
            grp_guess_babay_fu_746_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_guess_edu_fu_754_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond_fu_1127_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
            grp_guess_edu_fu_754_ap_start_reg <= 1'b1;
        end else if ((grp_guess_edu_fu_754_ap_ready == 1'b1)) begin
            grp_guess_edu_fu_754_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_sph_dec_fu_738_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state88)) begin
            grp_sph_dec_fu_738_ap_start_reg <= 1'b1;
        end else if ((grp_sph_dec_fu_738_ap_ready == 1'b1)) begin
            grp_sph_dec_fu_738_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_unconstrained_fu_723_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state81)) begin
            grp_unconstrained_fu_723_ap_start_reg <= 1'b1;
        end else if ((grp_unconstrained_fu_723_ap_ready == 1'b1)) begin
            grp_unconstrained_fu_723_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (exitcond10_fu_1236_p2 == 1'd0))) begin
        indvar_reg_712 <= indvar_next_fu_1242_p2;
    end else if ((~((grp_sph_dec_fu_738_ap_done == 1'b0) | (ap_sig_ioackin_data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state89))) begin
        indvar_reg_712 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        row1_reg_606 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond8_reg_1389 == 1'd0))) begin
        row1_reg_606 <= row_5_reg_1393;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        row2_reg_618 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond7_reg_1403 == 1'd0))) begin
        row2_reg_618 <= row_6_reg_1407;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        row3_reg_630 <= 7'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond6_reg_1417 == 1'd0))) begin
        row3_reg_630 <= row_7_reg_1421;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        row4_reg_642 <= 6'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond5_reg_1431 == 1'd0))) begin
        row4_reg_642 <= row_8_reg_1435;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        row5_reg_654 <= 8'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond4_reg_1445 == 1'd0))) begin
        row5_reg_654 <= row_9_reg_1449;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        row6_reg_666 <= 8'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (exitcond3_reg_1459 == 1'd0))) begin
        row6_reg_666 <= row_10_reg_1463;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        row7_reg_678 <= 8'd0;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (exitcond2_reg_1473 == 1'd0))) begin
        row7_reg_678 <= row_11_reg_1477;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        row8_reg_690 <= row_12_reg_1510;
    end else if (((1'b1 == ap_CS_fsm_state82) & (grp_unconstrained_fu_723_ap_done == 1'b1))) begin
        row8_reg_690 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1110_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state83))) begin
        row9_reg_701 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        row9_reg_701 <= row_13_reg_1528;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond9_fu_939_p2 == 1'd0))) begin
        row_reg_595 <= row_4_fu_945_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        row_reg_595 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        H_HAT_INV_src1_reg_1282 <= {{H_HAT_INV_src[31:2]}};
        R_HAT_src9_reg_1297 <= {{R_HAT_src[31:2]}};
        U_KK_src5_reg_1307 <= {{U_KK_src[31:2]}};
        V_GEN_src1_reg_1287 <= {{V_GEN_src[31:2]}};
        V_MUL_H_INV_src1_reg_1292 <= {{V_MUL_H_INV_src[31:2]}};
        X_KK_src1_reg_1317 <= {{X_KK_src[31:2]}};
        Y_HAT_src7_reg_1302 <= {{Y_HAT_src[31:2]}};
        Y_REF_KK_src3_reg_1312 <= {{Y_REF_KK_src[31:2]}};
        out1_reg_1277 <= {{out_r[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (exitcond10_reg_1548 == 1'd0))) begin
        U_opt_load_reg_1562 <= U_opt_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1385 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_KK_a_3_1_fu_228 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1385 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_KK_a_3_2_fu_232 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1385 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_KK_a_3_3_fu_236 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1385 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_KK_a_3_fu_224 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (exitcond2_reg_1473 == 1'd0))) begin
        data_addr_1_read_reg_1482 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        data_addr_1_reg_1334[29 : 0] <= tmp_80_fu_876_p1[29 : 0];
        data_addr_2_reg_1340[29 : 0] <= tmp_81_fu_885_p1[29 : 0];
        data_addr_3_reg_1346[29 : 0] <= tmp_82_fu_894_p1[29 : 0];
        data_addr_4_reg_1352[29 : 0] <= tmp_83_fu_903_p1[29 : 0];
        data_addr_5_reg_1358[29 : 0] <= tmp_84_fu_912_p1[29 : 0];
        data_addr_6_reg_1364[29 : 0] <= tmp_85_fu_921_p1[29 : 0];
        data_addr_7_reg_1370[29 : 0] <= tmp_86_fu_930_p1[29 : 0];
        data_addr_reg_1328[29 : 0] <= tmp_79_fu_867_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (exitcond3_reg_1459 == 1'd0))) begin
        data_addr_2_read_reg_1468 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond4_reg_1445 == 1'd0))) begin
        data_addr_3_read_reg_1454 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond5_reg_1431 == 1'd0))) begin
        data_addr_4_read_reg_1440 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond6_reg_1417 == 1'd0))) begin
        data_addr_5_read_reg_1426 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond7_reg_1403 == 1'd0))) begin
        data_addr_6_read_reg_1412 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond8_reg_1389 == 1'd0))) begin
        data_addr_7_read_reg_1398 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        exitcond10_reg_1548 <= exitcond10_fu_1236_p2;
        exitcond10_reg_1548_pp8_iter1_reg <= exitcond10_reg_1548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        exitcond2_reg_1473 <= exitcond2_fu_1077_p2;
        exitcond2_reg_1473_pp7_iter1_reg <= exitcond2_reg_1473;
        row7_reg_678_pp7_iter1_reg <= row7_reg_678;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        exitcond3_reg_1459 <= exitcond3_fu_1060_p2;
        exitcond3_reg_1459_pp6_iter1_reg <= exitcond3_reg_1459;
        row6_reg_666_pp6_iter1_reg <= row6_reg_666;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        exitcond4_reg_1445 <= exitcond4_fu_1043_p2;
        exitcond4_reg_1445_pp5_iter1_reg <= exitcond4_reg_1445;
        row5_reg_654_pp5_iter1_reg <= row5_reg_654;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond5_reg_1431 <= exitcond5_fu_1026_p2;
        exitcond5_reg_1431_pp4_iter1_reg <= exitcond5_reg_1431;
        row4_reg_642_pp4_iter1_reg <= row4_reg_642;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond6_reg_1417 <= exitcond6_fu_1009_p2;
        exitcond6_reg_1417_pp3_iter1_reg <= exitcond6_reg_1417;
        row3_reg_630_pp3_iter1_reg <= row3_reg_630;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond7_reg_1403 <= exitcond7_fu_992_p2;
        exitcond7_reg_1403_pp2_iter1_reg <= exitcond7_reg_1403;
        row2_reg_618_pp2_iter1_reg <= row2_reg_618;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond8_reg_1389 <= exitcond8_fu_975_p2;
        exitcond8_reg_1389_pp1_iter1_reg <= exitcond8_reg_1389;
        row1_reg_606_pp1_iter1_reg <= row1_reg_606;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state87_on_subcall_done) & (1'b1 == ap_CS_fsm_state87))) begin
        roh_1_reg_1543 <= roh_1_fu_1228_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        row_10_reg_1463 <= row_10_fu_1066_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        row_11_reg_1477 <= row_11_fu_1083_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        row_12_reg_1510 <= row_12_fu_1116_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        row_13_reg_1528 <= row_13_fu_1133_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        row_5_reg_1393 <= row_5_fu_981_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        row_6_reg_1407 <= row_6_fu_998_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        row_7_reg_1421 <= row_7_fu_1015_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        row_8_reg_1435 <= row_8_fu_1032_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        row_9_reg_1449 <= row_9_fu_1049_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state83) & (exitcond1_fu_1110_p2 == 1'd0))) begin
        tmp_68_reg_1515[3 : 0] <= tmp_68_fu_1122_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state85) & (exitcond_fu_1127_p2 == 1'd0))) begin
        tmp_70_reg_1533[7 : 0] <= tmp_70_fu_1139_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond9_fu_939_p2 == 1'd0))) begin
        tmp_reg_1385 <= tmp_fu_951_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter2 == 1'b1))) begin
        H_Hat_Inv_a_address0 = tmp_67_fu_1089_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        H_Hat_Inv_a_address0 = grp_guess_babay_fu_746_H_Hat_Inv_a_address0;
    end else begin
        H_Hat_Inv_a_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter2 == 1'b1))) begin
        H_Hat_Inv_a_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        H_Hat_Inv_a_ce0 = grp_guess_babay_fu_746_H_Hat_Inv_a_ce0;
    end else begin
        H_Hat_Inv_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter2 == 1'b1) & (exitcond2_reg_1473_pp7_iter1_reg == 1'd0))) begin
        H_Hat_Inv_a_we0 = 1'b1;
    end else begin
        H_Hat_Inv_a_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        R_Hat_a_address0 = tmp_64_fu_1038_p1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        R_Hat_a_address0 = grp_unconstrained_fu_723_R_Hat_a_address0;
    end else begin
        R_Hat_a_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        R_Hat_a_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        R_Hat_a_ce0 = grp_unconstrained_fu_723_R_Hat_a_ce0;
    end else begin
        R_Hat_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (exitcond5_reg_1431_pp4_iter1_reg == 1'd0))) begin
        R_Hat_a_we0 = 1'b1;
    end else begin
        R_Hat_a_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        U_KK_a_address0 = tmp_62_fu_1004_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        U_KK_a_address0 = grp_guess_edu_fu_754_U_KK_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        U_KK_a_address0 = grp_unconstrained_fu_723_U_KK_a_address0;
    end else begin
        U_KK_a_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        U_KK_a_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        U_KK_a_ce0 = grp_guess_edu_fu_754_U_KK_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        U_KK_a_ce0 = grp_unconstrained_fu_723_U_KK_a_ce0;
    end else begin
        U_KK_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (exitcond7_reg_1403_pp2_iter1_reg == 1'd0))) begin
        U_KK_a_we0 = 1'b1;
    end else begin
        U_KK_a_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0))) begin
        U_opt_address0 = indvar1_fu_1248_p1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        U_opt_address0 = grp_sph_dec_fu_738_U_opt_address0;
    end else begin
        U_opt_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        U_opt_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        U_opt_ce0 = grp_sph_dec_fu_738_U_opt_ce0;
    end else begin
        U_opt_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        U_opt_we0 = grp_sph_dec_fu_738_U_opt_we0;
    end else begin
        U_opt_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        U_unc_kk_address0 = tmp_68_fu_1122_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        U_unc_kk_address0 = grp_guess_babay_fu_746_U_unc_kk_address0;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        U_unc_kk_address0 = grp_sph_dec_fu_738_U_unc_address0;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        U_unc_kk_address0 = grp_unconstrained_fu_723_unconstrained_r_address0;
    end else begin
        U_unc_kk_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        U_unc_kk_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        U_unc_kk_ce0 = grp_guess_babay_fu_746_U_unc_kk_ce0;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        U_unc_kk_ce0 = grp_sph_dec_fu_738_U_unc_ce0;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        U_unc_kk_ce0 = grp_unconstrained_fu_723_unconstrained_r_ce0;
    end else begin
        U_unc_kk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        U_unc_kk_cpy_address0 = tmp_68_reg_1515;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        U_unc_kk_cpy_address0 = grp_guess_edu_fu_754_U_unc_kk_address0;
    end else begin
        U_unc_kk_cpy_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        U_unc_kk_cpy_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        U_unc_kk_cpy_ce0 = grp_guess_edu_fu_754_U_unc_kk_ce0;
    end else begin
        U_unc_kk_cpy_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        U_unc_kk_cpy_we0 = 1'b1;
    end else begin
        U_unc_kk_cpy_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        U_unc_kk_we0 = grp_unconstrained_fu_723_unconstrained_r_we0;
    end else begin
        U_unc_kk_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) & (exitcond_fu_1127_p2 == 1'd0))) begin
        V_Gen_a_address0 = tmp_70_fu_1139_p1;
    end else if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter2 == 1'b1))) begin
        V_Gen_a_address0 = tmp_66_fu_1072_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        V_Gen_a_address0 = grp_guess_babay_fu_746_V_Gen_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        V_Gen_a_address0 = grp_sph_dec_fu_738_V_Gen_a_address0;
    end else begin
        V_Gen_a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state85) & (exitcond_fu_1127_p2 == 1'd0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter2 == 1'b1)))) begin
        V_Gen_a_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        V_Gen_a_ce0 = grp_guess_babay_fu_746_V_Gen_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        V_Gen_a_ce0 = grp_sph_dec_fu_738_V_Gen_a_ce0;
    end else begin
        V_Gen_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        V_Gen_a_cpy_address0 = tmp_70_reg_1533;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        V_Gen_a_cpy_address0 = grp_guess_edu_fu_754_V_Gen_a_cpy_address0;
    end else begin
        V_Gen_a_cpy_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        V_Gen_a_cpy_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        V_Gen_a_cpy_ce0 = grp_guess_edu_fu_754_V_Gen_a_cpy_ce0;
    end else begin
        V_Gen_a_cpy_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        V_Gen_a_cpy_we0 = 1'b1;
    end else begin
        V_Gen_a_cpy_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter2 == 1'b1) & (exitcond3_reg_1459_pp6_iter1_reg == 1'd0))) begin
        V_Gen_a_we0 = 1'b1;
    end else begin
        V_Gen_a_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        V_Mul_H_Inv_a_address0 = tmp_65_fu_1055_p1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        V_Mul_H_Inv_a_address0 = grp_unconstrained_fu_723_V_Mul_H_Inv_a_address0;
    end else begin
        V_Mul_H_Inv_a_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        V_Mul_H_Inv_a_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        V_Mul_H_Inv_a_ce0 = grp_unconstrained_fu_723_V_Mul_H_Inv_a_ce0;
    end else begin
        V_Mul_H_Inv_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1) & (exitcond4_reg_1445_pp5_iter1_reg == 1'd0))) begin
        V_Mul_H_Inv_a_we0 = 1'b1;
    end else begin
        V_Mul_H_Inv_a_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        Y_Hat_a_address0 = tmp_63_fu_1021_p1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        Y_Hat_a_address0 = grp_unconstrained_fu_723_Y_Hat_a_address0;
    end else begin
        Y_Hat_a_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        Y_Hat_a_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        Y_Hat_a_ce0 = grp_unconstrained_fu_723_Y_Hat_a_ce0;
    end else begin
        Y_Hat_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (exitcond6_reg_1417_pp3_iter1_reg == 1'd0))) begin
        Y_Hat_a_we0 = 1'b1;
    end else begin
        Y_Hat_a_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        Y_Ref_KK_a_address0 = tmp_s_fu_987_p1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        Y_Ref_KK_a_address0 = grp_unconstrained_fu_723_Y_Ref_KK_a_address0;
    end else begin
        Y_Ref_KK_a_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        Y_Ref_KK_a_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        Y_Ref_KK_a_ce0 = grp_unconstrained_fu_723_Y_Ref_KK_a_ce0;
    end else begin
        Y_Ref_KK_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (exitcond8_reg_1389_pp1_iter1_reg == 1'd0))) begin
        Y_Ref_KK_a_we0 = 1'b1;
    end else begin
        Y_Ref_KK_a_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond9_fu_939_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond8_fu_975_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond7_fu_992_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond6_fu_1009_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state38 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state38 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond5_fu_1026_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state48 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state48 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_1043_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state58 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state58 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_1060_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state68 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state68 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_1077_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state78 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state78 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond10_fu_1236_p2 == 1'd1)) begin
        ap_condition_pp8_exit_iter0_state90 = 1'b1;
    end else begin
        ap_condition_pp8_exit_iter0_state90 = 1'b0;
    end
end

always @ (*) begin
    if (((data_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state97))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b0) & (ap_enable_reg_pp8_iter2 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond8_reg_1389 == 1'd0))) begin
        ap_phi_mux_row1_phi_fu_610_p4 = row_5_reg_1393;
    end else begin
        ap_phi_mux_row1_phi_fu_610_p4 = row1_reg_606;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond7_reg_1403 == 1'd0))) begin
        ap_phi_mux_row2_phi_fu_622_p4 = row_6_reg_1407;
    end else begin
        ap_phi_mux_row2_phi_fu_622_p4 = row2_reg_618;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond6_reg_1417 == 1'd0))) begin
        ap_phi_mux_row3_phi_fu_634_p4 = row_7_reg_1421;
    end else begin
        ap_phi_mux_row3_phi_fu_634_p4 = row3_reg_630;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond5_reg_1431 == 1'd0))) begin
        ap_phi_mux_row4_phi_fu_646_p4 = row_8_reg_1435;
    end else begin
        ap_phi_mux_row4_phi_fu_646_p4 = row4_reg_642;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond4_reg_1445 == 1'd0))) begin
        ap_phi_mux_row5_phi_fu_658_p4 = row_9_reg_1449;
    end else begin
        ap_phi_mux_row5_phi_fu_658_p4 = row5_reg_654;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (exitcond3_reg_1459 == 1'd0))) begin
        ap_phi_mux_row6_phi_fu_670_p4 = row_10_reg_1463;
    end else begin
        ap_phi_mux_row6_phi_fu_670_p4 = row6_reg_666;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (exitcond2_reg_1473 == 1'd0))) begin
        ap_phi_mux_row7_phi_fu_682_p4 = row_11_reg_1477;
    end else begin
        ap_phi_mux_row7_phi_fu_682_p4 = row7_reg_678;
    end
end

always @ (*) begin
    if (((data_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state97))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_data_ARREADY == 1'b0)) begin
        ap_sig_ioackin_data_ARREADY = data_ARREADY;
    end else begin
        ap_sig_ioackin_data_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_data_AWREADY == 1'b0)) begin
        ap_sig_ioackin_data_AWREADY = data_AWREADY;
    end else begin
        ap_sig_ioackin_data_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_data_WREADY == 1'b0)) begin
        ap_sig_ioackin_data_WREADY = data_WREADY;
    end else begin
        ap_sig_ioackin_data_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_data_ARREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state71)) begin
            data_ARADDR = data_addr_1_reg_1334;
        end else if ((1'b1 == ap_CS_fsm_state61)) begin
            data_ARADDR = data_addr_2_reg_1340;
        end else if ((1'b1 == ap_CS_fsm_state51)) begin
            data_ARADDR = data_addr_3_reg_1346;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            data_ARADDR = data_addr_4_reg_1352;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            data_ARADDR = data_addr_5_reg_1358;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            data_ARADDR = data_addr_6_reg_1364;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            data_ARADDR = data_addr_7_reg_1370;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            data_ARADDR = tmp_87_fu_857_p1;
        end else begin
            data_ARADDR = 'bx;
        end
    end else begin
        data_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state51)) | ((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state61)) | ((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state71)))) begin
        data_ARLEN = 32'd144;
    end else if (((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state41))) begin
        data_ARLEN = 32'd32;
    end else if (((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state31))) begin
        data_ARLEN = 32'd96;
    end else if (((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state21))) begin
        data_ARLEN = 32'd12;
    end else if (((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state11))) begin
        data_ARLEN = 32'd8;
    end else if (((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state2))) begin
        data_ARLEN = 32'd4;
    end else begin
        data_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state2)) | ((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state11)) | ((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state21)) | ((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state31)) | ((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state41)) | ((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state51)) | ((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state61)) | ((ap_reg_ioackin_data_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state71)))) begin
        data_ARVALID = 1'b1;
    end else begin
        data_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((grp_sph_dec_fu_738_ap_done == 1'b1) & (ap_reg_ioackin_data_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state89))) begin
        data_AWVALID = 1'b1;
    end else begin
        data_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((data_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state97))) begin
        data_BREADY = 1'b1;
    end else begin
        data_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond8_reg_1389 == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond7_reg_1403 == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond6_reg_1417 == 1'd0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond5_reg_1431 == 1'd0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond4_reg_1445 == 1'd0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (exitcond3_reg_1459 == 1'd0)) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (exitcond2_reg_1473 == 1'd0)))) begin
        data_RREADY = 1'b1;
    end else begin
        data_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_data_WREADY == 1'b0) & (ap_enable_reg_pp8_iter2 == 1'b1) & (exitcond10_reg_1548_pp8_iter1_reg == 1'd0) & (1'b0 == ap_block_pp8_stage0_01001))) begin
        data_WVALID = 1'b1;
    end else begin
        data_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state71))) begin
        data_blk_n_AR = m_axi_data_ARREADY;
    end else begin
        data_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        data_blk_n_AW = m_axi_data_AWREADY;
    end else begin
        data_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        data_blk_n_B = m_axi_data_BVALID;
    end else begin
        data_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond8_reg_1389 == 1'd0)) | ((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond7_reg_1403 == 1'd0)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond6_reg_1417 == 1'd0)) | ((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond5_reg_1431 == 1'd0)) | ((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond4_reg_1445 == 1'd0)) | ((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (exitcond3_reg_1459 == 1'd0)) | ((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (exitcond2_reg_1473 == 1'd0)))) begin
        data_blk_n_R = m_axi_data_RVALID;
    end else begin
        data_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter2 == 1'b1) & (exitcond10_reg_1548_pp8_iter1_reg == 1'd0) & (1'b0 == ap_block_pp8_stage0))) begin
        data_blk_n_W = m_axi_data_WREADY;
    end else begin
        data_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        theta_kk_address0 = grp_guess_babay_fu_746_theta_kk_address0;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        theta_kk_address0 = grp_unconstrained_fu_723_theta_kk_address0;
    end else begin
        theta_kk_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        theta_kk_ce0 = grp_guess_babay_fu_746_theta_kk_ce0;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        theta_kk_ce0 = grp_unconstrained_fu_723_theta_kk_ce0;
    end else begin
        theta_kk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        theta_kk_we0 = grp_unconstrained_fu_723_theta_kk_we0;
    end else begin
        theta_kk_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond9_fu_939_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond9_fu_939_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond8_fu_975_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond8_fu_975_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (exitcond7_fu_992_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (exitcond7_fu_992_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (exitcond6_fu_1009_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (exitcond6_fu_1009_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (exitcond5_fu_1026_p2 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_subdone) & (exitcond5_fu_1026_p2 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((1'b0 == ap_block_pp5_stage0_subdone) & (exitcond4_fu_1043_p2 == 1'd1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_subdone) & (exitcond4_fu_1043_p2 == 1'd1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state61 : begin
            if (((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((1'b0 == ap_block_pp6_stage0_subdone) & (exitcond3_fu_1060_p2 == 1'd1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_subdone) & (exitcond3_fu_1060_p2 == 1'd1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state71 : begin
            if (((ap_sig_ioackin_data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state71))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((1'b0 == ap_block_pp7_stage0_subdone) & (exitcond2_fu_1077_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (ap_enable_reg_pp7_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter2 == 1'b1) & (ap_enable_reg_pp7_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter2 == 1'b1) & (ap_enable_reg_pp7_iter1 == 1'b0)) | ((1'b0 == ap_block_pp7_stage0_subdone) & (exitcond2_fu_1077_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (ap_enable_reg_pp7_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((1'b1 == ap_CS_fsm_state82) & (grp_unconstrained_fu_723_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state83 : begin
            if (((exitcond1_fu_1110_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state83))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state85 : begin
            if (((exitcond_fu_1127_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state87 : begin
            if (((1'b0 == ap_block_state87_on_subcall_done) & (1'b1 == ap_CS_fsm_state87))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            if ((~((grp_sph_dec_fu_738_ap_done == 1'b0) | (ap_sig_ioackin_data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state89))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_pp8_stage0 : begin
            if ((~((ap_enable_reg_pp8_iter1 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (exitcond10_fu_1236_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1)) & ~((ap_enable_reg_pp8_iter1 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else if ((((ap_enable_reg_pp8_iter1 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (exitcond10_fu_1236_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1)) | ((ap_enable_reg_pp8_iter1 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            if (((data_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state97))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd79];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((data_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((data_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((data_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond8_reg_1389 == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((data_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond8_reg_1389 == 1'd0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((data_RVALID == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (exitcond7_reg_1403 == 1'd0));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((data_RVALID == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (exitcond7_reg_1403 == 1'd0));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((data_RVALID == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond6_reg_1417 == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((data_RVALID == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond6_reg_1417 == 1'd0));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_11001 = ((data_RVALID == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (exitcond5_reg_1431 == 1'd0));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = ((data_RVALID == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (exitcond5_reg_1431 == 1'd0));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((data_RVALID == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (exitcond4_reg_1445 == 1'd0));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((data_RVALID == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (exitcond4_reg_1445 == 1'd0));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((data_RVALID == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (exitcond3_reg_1459 == 1'd0));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((data_RVALID == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (exitcond3_reg_1459 == 1'd0));
end

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp7_stage0_11001 = ((data_RVALID == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (exitcond2_reg_1473 == 1'd0));
end

always @ (*) begin
    ap_block_pp7_stage0_subdone = ((data_RVALID == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (exitcond2_reg_1473 == 1'd0));
end

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8_stage0_11001 = ((1'b1 == ap_block_state92_io) & (ap_enable_reg_pp8_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp8_stage0_subdone = ((1'b1 == ap_block_state92_io) & (ap_enable_reg_pp8_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = (data_RVALID == 1'b0);
end

assign ap_block_state18_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp1_stage0_iter1 = ((data_RVALID == 1'b0) & (exitcond8_reg_1389 == 1'd0));
end

assign ap_block_state20_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp2_stage0_iter1 = ((data_RVALID == 1'b0) & (exitcond7_reg_1403 == 1'd0));
end

assign ap_block_state30_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state39_pp3_stage0_iter1 = ((data_RVALID == 1'b0) & (exitcond6_reg_1417 == 1'd0));
end

assign ap_block_state40_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state49_pp4_stage0_iter1 = ((data_RVALID == 1'b0) & (exitcond5_reg_1431 == 1'd0));
end

assign ap_block_state50_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state59_pp5_stage0_iter1 = ((data_RVALID == 1'b0) & (exitcond4_reg_1445 == 1'd0));
end

assign ap_block_state60_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state69_pp6_stage0_iter1 = ((data_RVALID == 1'b0) & (exitcond3_reg_1459 == 1'd0));
end

assign ap_block_state70_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state79_pp7_stage0_iter1 = ((data_RVALID == 1'b0) & (exitcond2_reg_1473 == 1'd0));
end

assign ap_block_state80_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state87_on_subcall_done = ((grp_guess_babay_fu_746_ap_done == 1'b0) | (grp_guess_edu_fu_754_ap_done == 1'b0));
end

assign ap_block_state90_pp8_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state92_io = ((ap_sig_ioackin_data_WREADY == 1'b0) & (exitcond10_reg_1548_pp8_iter1_reg == 1'd0));
end

assign ap_block_state92_pp8_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign exitcond10_fu_1236_p2 = ((indvar_reg_712 == 4'd12) ? 1'b1 : 1'b0);

assign exitcond1_fu_1110_p2 = ((row8_reg_690 == 4'd12) ? 1'b1 : 1'b0);

assign exitcond2_fu_1077_p2 = ((ap_phi_mux_row7_phi_fu_682_p4 == 8'd144) ? 1'b1 : 1'b0);

assign exitcond3_fu_1060_p2 = ((ap_phi_mux_row6_phi_fu_670_p4 == 8'd144) ? 1'b1 : 1'b0);

assign exitcond4_fu_1043_p2 = ((ap_phi_mux_row5_phi_fu_658_p4 == 8'd144) ? 1'b1 : 1'b0);

assign exitcond5_fu_1026_p2 = ((ap_phi_mux_row4_phi_fu_646_p4 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond6_fu_1009_p2 = ((ap_phi_mux_row3_phi_fu_634_p4 == 7'd96) ? 1'b1 : 1'b0);

assign exitcond7_fu_992_p2 = ((ap_phi_mux_row2_phi_fu_622_p4 == 4'd12) ? 1'b1 : 1'b0);

assign exitcond8_fu_975_p2 = ((ap_phi_mux_row1_phi_fu_610_p4 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond9_fu_939_p2 = ((row_reg_595 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond_fu_1127_p2 = ((row9_reg_701 == 8'd144) ? 1'b1 : 1'b0);

assign grp_guess_babay_fu_746_ap_start = grp_guess_babay_fu_746_ap_start_reg;

assign grp_guess_edu_fu_754_ap_start = grp_guess_edu_fu_754_ap_start_reg;

assign grp_sph_dec_fu_738_ap_start = grp_sph_dec_fu_738_ap_start_reg;

assign grp_unconstrained_fu_723_ap_start = grp_unconstrained_fu_723_ap_start_reg;

assign indvar1_fu_1248_p1 = indvar_reg_712;

assign indvar_next_fu_1242_p2 = (indvar_reg_712 + 4'd1);

assign notlhs2_fu_1198_p2 = ((tmp_89_fu_1166_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_1180_p2 = ((tmp_78_fu_1148_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs2_fu_1204_p2 = ((tmp_90_fu_1176_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_1186_p2 = ((tmp_88_fu_1158_p1 == 23'd0) ? 1'b1 : 1'b0);

assign roh_1_fu_1228_p3 = ((tmp_95_fu_1222_p2[0:0] === 1'b1) ? grp_guess_edu_fu_754_ap_return : grp_guess_babay_fu_746_ap_return);

assign roh_2_to_int_fu_1144_p1 = grp_guess_edu_fu_754_ap_return;

assign roh_babay_to_int_fu_1162_p1 = grp_guess_babay_fu_746_ap_return;

assign row_10_fu_1066_p2 = (ap_phi_mux_row6_phi_fu_670_p4 + 8'd1);

assign row_11_fu_1083_p2 = (ap_phi_mux_row7_phi_fu_682_p4 + 8'd1);

assign row_12_fu_1116_p2 = (row8_reg_690 + 4'd1);

assign row_13_fu_1133_p2 = (row9_reg_701 + 8'd1);

assign row_4_fu_945_p2 = (row_reg_595 + 3'd1);

assign row_5_fu_981_p2 = (ap_phi_mux_row1_phi_fu_610_p4 + 4'd1);

assign row_6_fu_998_p2 = (ap_phi_mux_row2_phi_fu_622_p4 + 4'd1);

assign row_7_fu_1015_p2 = (ap_phi_mux_row3_phi_fu_634_p4 + 7'd1);

assign row_8_fu_1032_p2 = (ap_phi_mux_row4_phi_fu_646_p4 + 6'd1);

assign row_9_fu_1049_p2 = (ap_phi_mux_row5_phi_fu_658_p4 + 8'd1);

assign tmp_62_fu_1004_p1 = row2_reg_618_pp2_iter1_reg;

assign tmp_63_fu_1021_p1 = row3_reg_630_pp3_iter1_reg;

assign tmp_64_fu_1038_p1 = row4_reg_642_pp4_iter1_reg;

assign tmp_65_fu_1055_p1 = row5_reg_654_pp5_iter1_reg;

assign tmp_66_fu_1072_p1 = row6_reg_666_pp6_iter1_reg;

assign tmp_67_fu_1089_p1 = row7_reg_678_pp7_iter1_reg;

assign tmp_68_fu_1122_p1 = row8_reg_690;

assign tmp_70_fu_1139_p1 = row9_reg_701;

assign tmp_78_fu_1148_p4 = {{roh_2_to_int_fu_1144_p1[30:23]}};

assign tmp_79_fu_867_p1 = out1_reg_1277;

assign tmp_80_fu_876_p1 = H_HAT_INV_src1_reg_1282;

assign tmp_81_fu_885_p1 = V_GEN_src1_reg_1287;

assign tmp_82_fu_894_p1 = V_MUL_H_INV_src1_reg_1292;

assign tmp_83_fu_903_p1 = R_HAT_src9_reg_1297;

assign tmp_84_fu_912_p1 = Y_HAT_src7_reg_1302;

assign tmp_85_fu_921_p1 = U_KK_src5_reg_1307;

assign tmp_86_fu_930_p1 = Y_REF_KK_src3_reg_1312;

assign tmp_87_fu_857_p1 = X_KK_src1_reg_1317;

assign tmp_88_fu_1158_p1 = roh_2_to_int_fu_1144_p1[22:0];

assign tmp_89_fu_1166_p4 = {{roh_babay_to_int_fu_1162_p1[30:23]}};

assign tmp_90_fu_1176_p1 = roh_babay_to_int_fu_1162_p1[22:0];

assign tmp_91_fu_1192_p2 = (notrhs_fu_1186_p2 | notlhs_fu_1180_p2);

assign tmp_92_fu_1210_p2 = (notrhs2_fu_1204_p2 | notlhs2_fu_1198_p2);

assign tmp_93_fu_1216_p2 = (tmp_92_fu_1210_p2 & tmp_91_fu_1192_p2);

assign tmp_95_fu_1222_p2 = (tmp_94_fu_761_p2 & tmp_93_fu_1216_p2);

assign tmp_fu_951_p1 = row_reg_595[1:0];

assign tmp_s_fu_987_p1 = row1_reg_606_pp1_iter1_reg;

always @ (posedge ap_clk) begin
    data_addr_reg_1328[31:30] <= 2'b00;
    data_addr_1_reg_1334[31:30] <= 2'b00;
    data_addr_2_reg_1340[31:30] <= 2'b00;
    data_addr_3_reg_1346[31:30] <= 2'b00;
    data_addr_4_reg_1352[31:30] <= 2'b00;
    data_addr_5_reg_1358[31:30] <= 2'b00;
    data_addr_6_reg_1364[31:30] <= 2'b00;
    data_addr_7_reg_1370[31:30] <= 2'b00;
    tmp_68_reg_1515[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_70_reg_1533[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //predictive_controller
