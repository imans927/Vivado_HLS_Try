// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sph_dec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        V_Gen_a_address0,
        V_Gen_a_ce0,
        V_Gen_a_q0,
        roh,
        U_unc_address0,
        U_unc_ce0,
        U_unc_q0,
        U_opt_address0,
        U_opt_ce0,
        U_opt_we0,
        U_opt_d0
);

parameter    ap_ST_fsm_state1 = 29'd1;
parameter    ap_ST_fsm_state2 = 29'd2;
parameter    ap_ST_fsm_state3 = 29'd4;
parameter    ap_ST_fsm_state4 = 29'd8;
parameter    ap_ST_fsm_state5 = 29'd16;
parameter    ap_ST_fsm_state6 = 29'd32;
parameter    ap_ST_fsm_state7 = 29'd64;
parameter    ap_ST_fsm_state8 = 29'd128;
parameter    ap_ST_fsm_state9 = 29'd256;
parameter    ap_ST_fsm_state10 = 29'd512;
parameter    ap_ST_fsm_state11 = 29'd1024;
parameter    ap_ST_fsm_state12 = 29'd2048;
parameter    ap_ST_fsm_state13 = 29'd4096;
parameter    ap_ST_fsm_state14 = 29'd8192;
parameter    ap_ST_fsm_state15 = 29'd16384;
parameter    ap_ST_fsm_state16 = 29'd32768;
parameter    ap_ST_fsm_state17 = 29'd65536;
parameter    ap_ST_fsm_state18 = 29'd131072;
parameter    ap_ST_fsm_state19 = 29'd262144;
parameter    ap_ST_fsm_state20 = 29'd524288;
parameter    ap_ST_fsm_state21 = 29'd1048576;
parameter    ap_ST_fsm_state22 = 29'd2097152;
parameter    ap_ST_fsm_state23 = 29'd4194304;
parameter    ap_ST_fsm_state24 = 29'd8388608;
parameter    ap_ST_fsm_state25 = 29'd16777216;
parameter    ap_ST_fsm_state26 = 29'd33554432;
parameter    ap_ST_fsm_state27 = 29'd67108864;
parameter    ap_ST_fsm_state28 = 29'd134217728;
parameter    ap_ST_fsm_state29 = 29'd268435456;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] V_Gen_a_address0;
output   V_Gen_a_ce0;
input  [31:0] V_Gen_a_q0;
input  [31:0] roh;
output  [3:0] U_unc_address0;
output   U_unc_ce0;
input  [31:0] U_unc_q0;
output  [3:0] U_opt_address0;
output   U_opt_ce0;
output   U_opt_we0;
output  [31:0] U_opt_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg V_Gen_a_ce0;
reg U_unc_ce0;
reg U_opt_ce0;
reg U_opt_we0;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_379_p2;
reg   [31:0] reg_422;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state20;
wire   [3:0] indvarinc_fu_430_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] ll_1_fu_453_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond3_fu_447_p2;
wire   [5:0] i_fu_474_p2;
reg   [5:0] i_reg_818;
wire    ap_CS_fsm_state4;
wire  signed [63:0] tmp_36_fu_480_p1;
reg  signed [63:0] tmp_36_reg_823;
wire   [0:0] exitcond2_fu_468_p2;
reg   [3:0] switch_point_addr_2_reg_830;
wire   [31:0] switch_point_q0;
reg   [31:0] switch_point_load_reg_835;
wire    ap_CS_fsm_state5;
wire   [31:0] tmp_37_fu_497_p2;
reg   [31:0] tmp_37_reg_840;
wire   [3:0] ii_1_fu_513_p2;
reg   [3:0] ii_1_reg_848;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_43_fu_519_p2;
reg   [0:0] tmp_43_reg_853;
wire   [0:0] exitcond1_fu_507_p2;
wire   [0:0] tmp_47_fu_540_p2;
reg   [0:0] tmp_47_reg_880;
wire    ap_CS_fsm_state7;
wire   [0:0] tmp_51_fu_546_p2;
reg   [0:0] tmp_51_reg_892;
wire   [31:0] dist_matmul_3_fu_593_p3;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire   [31:0] dist_array_q0;
reg   [31:0] dist_array_load_reg_907;
wire   [31:0] grp_fu_393_p2;
reg   [31:0] tmp_38_reg_912;
wire    ap_CS_fsm_state16;
wire   [63:0] grp_fu_402_p1;
wire   [63:0] grp_fu_405_p2;
reg   [63:0] tmp_41_reg_922;
wire   [0:0] tmp_67_fu_681_p2;
reg   [0:0] tmp_67_reg_928;
wire    ap_CS_fsm_state21;
wire   [0:0] tmp_45_fu_693_p2;
reg   [0:0] tmp_45_reg_932;
wire  signed [31:0] level_1_fu_699_p2;
wire   [3:0] jj_1_fu_716_p2;
reg   [3:0] jj_1_reg_944;
wire    ap_CS_fsm_state22;
wire   [63:0] tmp_55_fu_722_p1;
reg   [63:0] tmp_55_reg_949;
wire   [0:0] exitcond_fu_710_p2;
wire   [31:0] U_q0;
wire    ap_CS_fsm_state23;
reg   [3:0] switch_point_addr_3_reg_967;
wire    ap_CS_fsm_state27;
wire   [0:0] tmp_57_fu_739_p2;
wire   [0:0] icmp_fu_760_p2;
reg   [0:0] icmp_reg_972;
wire    ap_CS_fsm_state28;
wire   [3:0] grp_fu_416_p2;
reg   [3:0] level_2_reg_976;
reg   [3:0] switch_point_addr_4_reg_981;
wire    ap_CS_fsm_state29;
reg   [3:0] dist_array_address0;
reg    dist_array_ce0;
reg    dist_array_we0;
reg   [31:0] dist_array_d0;
reg   [3:0] switch_point_address0;
reg    switch_point_ce0;
reg    switch_point_we0;
reg   [31:0] switch_point_d0;
reg   [3:0] switch_point_address1;
reg    switch_point_ce1;
reg    switch_point_we1;
wire   [31:0] switch_point_d1;
wire   [31:0] switch_point_q1;
reg   [3:0] U_address0;
reg    U_ce0;
reg    U_we0;
reg   [3:0] invdar_reg_250;
wire   [0:0] tmp_s_fu_441_p2;
reg   [3:0] ll_reg_261;
reg  signed [31:0] level_reg_272;
reg   [5:0] i1_reg_284;
reg   [3:0] ii_reg_295;
reg   [31:0] dist_matmul_reg_306;
reg   [3:0] jj_reg_318;
wire    ap_CS_fsm_state25;
reg   [31:0] ap_phi_mux_level_3_ph_phi_fu_332_p6;
reg   [31:0] level_3_ph_reg_329;
wire    ap_CS_fsm_state26;
reg   [31:0] ap_phi_mux_level_4_phi_fu_371_p4;
reg   [31:0] level_3_reg_343;
reg   [3:0] kk_reg_355;
wire   [31:0] level_5_cast_fu_771_p1;
reg   [31:0] level_4_reg_367;
wire   [63:0] tmp_fu_436_p1;
wire   [63:0] tmp_34_fu_459_p1;
wire   [63:0] tmp_46_fu_525_p1;
wire  signed [63:0] tmp_50_fu_535_p1;
wire  signed [63:0] tmp_48_fu_705_p1;
wire   [63:0] tmp_58_fu_745_p1;
wire   [63:0] tmp_60_fu_766_p1;
reg   [31:0] p_0_fu_102;
wire   [31:0] tmp_44_fu_687_p2;
wire   [31:0] tmp_52_fu_732_p2;
wire   [31:0] grp_fu_397_p1;
reg   [31:0] grp_fu_379_p0;
reg   [31:0] grp_fu_379_p1;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state15;
reg   [31:0] grp_fu_402_p0;
wire   [31:0] tmp_53_fu_485_p2;
wire   [31:0] tmp_59_fu_491_p2;
wire   [31:0] ii_cast_fu_503_p1;
wire   [31:0] tmp_49_fu_530_p2;
wire   [0:0] sel_tmp_fu_552_p2;
wire   [0:0] sel_tmp1_fu_557_p2;
wire   [0:0] sel_tmp5_demorgan_fu_570_p2;
wire   [0:0] sel_tmp5_fu_574_p2;
wire   [0:0] sel_tmp6_fu_580_p2;
wire   [31:0] grp_fu_385_p2;
wire   [31:0] dist_matmul_4_fu_562_p3;
wire   [31:0] dist_matmul_5_fu_585_p3;
wire   [63:0] tmp_39_to_int_fu_604_p1;
wire   [63:0] tmp_41_to_int_fu_622_p1;
wire   [10:0] tmp_42_fu_608_p4;
wire   [51:0] tmp_62_fu_618_p1;
wire   [0:0] notrhs_fu_645_p2;
wire   [0:0] notlhs_fu_639_p2;
wire   [10:0] tmp_54_fu_625_p4;
wire   [51:0] tmp_68_fu_635_p1;
wire   [0:0] notrhs1_fu_663_p2;
wire   [0:0] notlhs1_fu_657_p2;
wire   [0:0] tmp_63_fu_651_p2;
wire   [0:0] tmp_64_fu_669_p2;
wire   [0:0] tmp_65_fu_675_p2;
wire   [0:0] tmp_66_fu_411_p2;
wire   [30:0] tmp_69_fu_750_p4;
reg   [1:0] grp_fu_379_opcode;
reg   [28:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'd1;
end

guess_edu_u_educaibs #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
dist_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dist_array_address0),
    .ce0(dist_array_ce0),
    .we0(dist_array_we0),
    .d0(dist_array_d0),
    .q0(dist_array_q0)
);

sph_dec_switch_pokbM #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
switch_point_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(switch_point_address0),
    .ce0(switch_point_ce0),
    .we0(switch_point_we0),
    .d0(switch_point_d0),
    .q0(switch_point_q0),
    .address1(switch_point_address1),
    .ce1(switch_point_ce1),
    .we1(switch_point_we1),
    .d1(switch_point_d1),
    .q1(switch_point_q1)
);

guess_edu_u_educaibs #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
U_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(U_address0),
    .ce0(U_ce0),
    .we0(U_we0),
    .d0(switch_point_q0),
    .q0(U_q0)
);

predictive_controbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
predictive_controbkb_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_379_p0),
    .din1(grp_fu_379_p1),
    .opcode(grp_fu_379_opcode),
    .ce(1'b1),
    .dout(grp_fu_379_p2)
);

predictive_controlbW #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
predictive_controlbW_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dist_matmul_reg_306),
    .din1(V_Gen_a_q0),
    .ce(1'b1),
    .dout(grp_fu_385_p2)
);

predictive_controcud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
predictive_controcud_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_422),
    .din1(reg_422),
    .ce(1'b1),
    .dout(grp_fu_393_p2)
);

predictive_contromb6 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
predictive_contromb6_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(U_q0),
    .ce(1'b1),
    .dout(grp_fu_397_p1)
);

predictive_controeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
predictive_controeOg_U51(
    .din0(grp_fu_402_p0),
    .dout(grp_fu_402_p1)
);

predictive_controncg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
predictive_controncg_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_402_p1),
    .din1(64'd4517329193108106637),
    .ce(1'b1),
    .dout(grp_fu_405_p2)
);

predictive_controocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
predictive_controocq_U53(
    .din0(grp_fu_402_p1),
    .din1(tmp_41_reg_922),
    .opcode(5'd5),
    .dout(tmp_66_fu_411_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        dist_matmul_reg_306 <= dist_matmul_3_fu_593_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dist_matmul_reg_306 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond3_fu_447_p2 == 1'd1))) begin
        i1_reg_284 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (tmp_57_fu_739_p2 == 1'd1))) begin
        i1_reg_284 <= i_reg_818;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ii_reg_295 <= ii_1_reg_848;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ii_reg_295 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_441_p2 == 1'd0))) begin
        invdar_reg_250 <= indvarinc_fu_430_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        invdar_reg_250 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (tmp_45_fu_693_p2 == 1'd1) & (tmp_67_fu_681_p2 == 1'd1))) begin
        jj_reg_318 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        jj_reg_318 <= jj_1_reg_944;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        kk_reg_355 <= 4'd11;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        kk_reg_355 <= grp_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (tmp_67_fu_681_p2 == 1'd0))) begin
        level_3_ph_reg_329 <= level_reg_272;
    end else if (((1'b1 == ap_CS_fsm_state21) & (tmp_45_fu_693_p2 == 1'd0) & (tmp_67_fu_681_p2 == 1'd1))) begin
        level_3_ph_reg_329 <= level_1_fu_699_p2;
    end else if (((1'b1 == ap_CS_fsm_state26) & (tmp_45_reg_932 == 1'd1) & (tmp_67_reg_928 == 1'd1))) begin
        level_3_ph_reg_329 <= 32'd11;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        level_3_reg_343 <= ap_phi_mux_level_3_ph_phi_fu_332_p6;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        level_3_reg_343 <= ap_phi_mux_level_4_phi_fu_371_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_fu_760_p2 == 1'd0))) begin
        level_4_reg_367 <= level_3_reg_343;
    end else if (((1'b1 == ap_CS_fsm_state29) & (icmp_reg_972 == 1'd1))) begin
        level_4_reg_367 <= level_5_cast_fu_771_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond3_fu_447_p2 == 1'd1))) begin
        level_reg_272 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (tmp_57_fu_739_p2 == 1'd1))) begin
        level_reg_272 <= level_3_reg_343;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_441_p2 == 1'd1))) begin
        ll_reg_261 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (exitcond3_fu_447_p2 == 1'd0))) begin
        ll_reg_261 <= ll_1_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (exitcond_fu_710_p2 == 1'd1))) begin
        p_0_fu_102 <= reg_422;
    end else if (((1'b1 == ap_CS_fsm_state3) & (exitcond3_fu_447_p2 == 1'd1))) begin
        p_0_fu_102 <= roh;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        dist_array_load_reg_907 <= dist_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_818 <= i_fu_474_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        icmp_reg_972 <= icmp_fu_760_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ii_1_reg_848 <= ii_1_fu_513_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        jj_1_reg_944 <= jj_1_fu_716_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_fu_760_p2 == 1'd1))) begin
        level_2_reg_976 <= grp_fu_416_p2;
        switch_point_addr_4_reg_981 <= tmp_60_fu_766_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_422 <= grp_fu_379_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_468_p2 == 1'd0))) begin
        switch_point_addr_2_reg_830 <= tmp_36_fu_480_p1;
        tmp_36_reg_823 <= tmp_36_fu_480_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (tmp_57_fu_739_p2 == 1'd0))) begin
        switch_point_addr_3_reg_967 <= tmp_58_fu_745_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        switch_point_load_reg_835 <= switch_point_q0;
        tmp_37_reg_840[31 : 2] <= tmp_37_fu_497_p2[31 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_38_reg_912 <= grp_fu_393_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_41_reg_922 <= grp_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond1_fu_507_p2 == 1'd0))) begin
        tmp_43_reg_853 <= tmp_43_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (tmp_67_fu_681_p2 == 1'd1))) begin
        tmp_45_reg_932 <= tmp_45_fu_693_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (tmp_43_reg_853 == 1'd0))) begin
        tmp_47_reg_880 <= tmp_47_fu_540_p2;
        tmp_51_reg_892 <= tmp_51_fu_546_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (exitcond_fu_710_p2 == 1'd0))) begin
        tmp_55_reg_949[3 : 0] <= tmp_55_fu_722_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_67_reg_928 <= tmp_67_fu_681_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        U_address0 = tmp_55_fu_722_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        U_address0 = tmp_46_fu_525_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        U_address0 = tmp_36_reg_823;
    end else begin
        U_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        U_ce0 = 1'b1;
    end else begin
        U_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        U_opt_ce0 = 1'b1;
    end else begin
        U_opt_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        U_opt_we0 = 1'b1;
    end else begin
        U_opt_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        U_unc_ce0 = 1'b1;
    end else begin
        U_unc_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        U_we0 = 1'b1;
    end else begin
        U_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        V_Gen_a_ce0 = 1'b1;
    end else begin
        V_Gen_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_468_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (tmp_45_reg_932 == 1'd1) & (tmp_67_reg_928 == 1'd1))) begin
        ap_phi_mux_level_3_ph_phi_fu_332_p6 = 32'd11;
    end else begin
        ap_phi_mux_level_3_ph_phi_fu_332_p6 = level_3_ph_reg_329;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_reg_972 == 1'd1))) begin
        ap_phi_mux_level_4_phi_fu_371_p4 = level_5_cast_fu_771_p1;
    end else begin
        ap_phi_mux_level_4_phi_fu_371_p4 = level_4_reg_367;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_468_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        dist_array_address0 = tmp_48_fu_705_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dist_array_address0 = tmp_36_reg_823;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dist_array_address0 = tmp_fu_436_p1;
    end else begin
        dist_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state6))) begin
        dist_array_ce0 = 1'b1;
    end else begin
        dist_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        dist_array_d0 = reg_422;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dist_array_d0 = 32'd0;
    end else begin
        dist_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state21) & (tmp_45_fu_693_p2 == 1'd0) & (tmp_67_fu_681_p2 == 1'd1)))) begin
        dist_array_we0 = 1'b1;
    end else begin
        dist_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_379_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state7) & (tmp_43_reg_853 == 1'd0)))) begin
        grp_fu_379_opcode = 2'd0;
    end else begin
        grp_fu_379_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_379_p0 = tmp_38_reg_912;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_379_p0 = U_unc_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_379_p0 = dist_matmul_reg_306;
    end else begin
        grp_fu_379_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_379_p1 = dist_array_load_reg_907;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_379_p1 = dist_matmul_reg_306;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_379_p1 = V_Gen_a_q0;
    end else begin
        grp_fu_379_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_402_p0 = reg_422;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_402_p0 = p_0_fu_102;
    end else begin
        grp_fu_402_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        switch_point_address0 = switch_point_addr_3_reg_967;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        switch_point_address0 = tmp_58_fu_745_p1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state22))) begin
        switch_point_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        switch_point_address0 = switch_point_addr_2_reg_830;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        switch_point_address0 = tmp_36_fu_480_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        switch_point_address0 = tmp_34_fu_459_p1;
    end else begin
        switch_point_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        switch_point_address1 = switch_point_addr_4_reg_981;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        switch_point_address1 = tmp_60_fu_766_p1;
    end else begin
        switch_point_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state4))) begin
        switch_point_ce0 = 1'b1;
    end else begin
        switch_point_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        switch_point_ce1 = 1'b1;
    end else begin
        switch_point_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        switch_point_d0 = tmp_52_fu_732_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        switch_point_d0 = tmp_44_fu_687_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state28))) begin
        switch_point_d0 = 32'd4294967295;
    end else begin
        switch_point_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (exitcond3_fu_447_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state26) & (tmp_45_reg_932 == 1'd1) & (tmp_67_reg_928 == 1'd1)) | ((1'b1 == ap_CS_fsm_state28) & (icmp_fu_760_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state21) & (tmp_67_fu_681_p2 == 1'd0)))) begin
        switch_point_we0 = 1'b1;
    end else begin
        switch_point_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_reg_972 == 1'd1))) begin
        switch_point_we1 = 1'b1;
    end else begin
        switch_point_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_441_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond3_fu_447_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_468_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond1_fu_507_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (tmp_45_fu_693_p2 == 1'd1) & (tmp_67_fu_681_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (exitcond_fu_710_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (tmp_57_fu_739_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign U_opt_address0 = tmp_55_reg_949;

assign U_opt_d0 = grp_fu_397_p1;

assign U_unc_address0 = tmp_36_reg_823;

assign V_Gen_a_address0 = tmp_50_fu_535_p1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign dist_matmul_3_fu_593_p3 = ((tmp_43_reg_853[0:0] === 1'b1) ? dist_matmul_reg_306 : dist_matmul_5_fu_585_p3);

assign dist_matmul_4_fu_562_p3 = ((sel_tmp1_fu_557_p2[0:0] === 1'b1) ? grp_fu_379_p2 : dist_matmul_reg_306);

assign dist_matmul_5_fu_585_p3 = ((sel_tmp6_fu_580_p2[0:0] === 1'b1) ? grp_fu_385_p2 : dist_matmul_4_fu_562_p3);

assign exitcond1_fu_507_p2 = ((ii_reg_295 == 4'd12) ? 1'b1 : 1'b0);

assign exitcond2_fu_468_p2 = ((i1_reg_284 == 6'd35) ? 1'b1 : 1'b0);

assign exitcond3_fu_447_p2 = ((ll_reg_261 == 4'd12) ? 1'b1 : 1'b0);

assign exitcond_fu_710_p2 = ((jj_reg_318 == 4'd12) ? 1'b1 : 1'b0);

assign grp_fu_416_p2 = ($signed(kk_reg_355) + $signed(4'd15));

assign i_fu_474_p2 = (i1_reg_284 + 6'd1);

assign icmp_fu_760_p2 = (($signed(tmp_69_fu_750_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign ii_1_fu_513_p2 = (ii_reg_295 + 4'd1);

assign ii_cast_fu_503_p1 = ii_reg_295;

assign indvarinc_fu_430_p2 = (invdar_reg_250 + 4'd1);

assign jj_1_fu_716_p2 = (jj_reg_318 + 4'd1);

assign level_1_fu_699_p2 = ($signed(level_reg_272) + $signed(32'd1));

assign level_5_cast_fu_771_p1 = level_2_reg_976;

assign ll_1_fu_453_p2 = (ll_reg_261 + 4'd1);

assign notlhs1_fu_657_p2 = ((tmp_54_fu_625_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs_fu_639_p2 = ((tmp_42_fu_608_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notrhs1_fu_663_p2 = ((tmp_68_fu_635_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_645_p2 = ((tmp_62_fu_618_p1 == 52'd0) ? 1'b1 : 1'b0);

assign sel_tmp1_fu_557_p2 = (tmp_47_reg_880 & sel_tmp_fu_552_p2);

assign sel_tmp5_demorgan_fu_570_p2 = (tmp_47_reg_880 | tmp_43_reg_853);

assign sel_tmp5_fu_574_p2 = (sel_tmp5_demorgan_fu_570_p2 ^ 1'd1);

assign sel_tmp6_fu_580_p2 = (tmp_51_reg_892 & sel_tmp5_fu_574_p2);

assign sel_tmp_fu_552_p2 = (tmp_43_reg_853 ^ 1'd1);

assign switch_point_d1 = (switch_point_q1 + 32'd1);

assign tmp_34_fu_459_p1 = ll_reg_261;

assign tmp_36_fu_480_p1 = level_reg_272;

assign tmp_37_fu_497_p2 = (tmp_53_fu_485_p2 - tmp_59_fu_491_p2);

assign tmp_39_to_int_fu_604_p1 = grp_fu_402_p1;

assign tmp_41_to_int_fu_622_p1 = tmp_41_reg_922;

assign tmp_42_fu_608_p4 = {{tmp_39_to_int_fu_604_p1[62:52]}};

assign tmp_43_fu_519_p2 = (($signed(ii_cast_fu_503_p1) > $signed(level_reg_272)) ? 1'b1 : 1'b0);

assign tmp_44_fu_687_p2 = (switch_point_load_reg_835 + 32'd1);

assign tmp_45_fu_693_p2 = ((level_reg_272 == 32'd11) ? 1'b1 : 1'b0);

assign tmp_46_fu_525_p1 = ii_reg_295;

assign tmp_47_fu_540_p2 = ((U_q0 == 32'd1) ? 1'b1 : 1'b0);

assign tmp_48_fu_705_p1 = level_1_fu_699_p2;

assign tmp_49_fu_530_p2 = (ii_cast_fu_503_p1 + tmp_37_reg_840);

assign tmp_50_fu_535_p1 = $signed(tmp_49_fu_530_p2);

assign tmp_51_fu_546_p2 = ((U_q0 == 32'd4294967295) ? 1'b1 : 1'b0);

assign tmp_52_fu_732_p2 = (switch_point_q0 + 32'd1);

assign tmp_53_fu_485_p2 = level_reg_272 << 32'd4;

assign tmp_54_fu_625_p4 = {{tmp_41_to_int_fu_622_p1[62:52]}};

assign tmp_55_fu_722_p1 = jj_reg_318;

assign tmp_57_fu_739_p2 = ((kk_reg_355 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_58_fu_745_p1 = kk_reg_355;

assign tmp_59_fu_491_p2 = level_reg_272 << 32'd2;

assign tmp_60_fu_766_p1 = grp_fu_416_p2;

assign tmp_62_fu_618_p1 = tmp_39_to_int_fu_604_p1[51:0];

assign tmp_63_fu_651_p2 = (notrhs_fu_645_p2 | notlhs_fu_639_p2);

assign tmp_64_fu_669_p2 = (notrhs1_fu_663_p2 | notlhs1_fu_657_p2);

assign tmp_65_fu_675_p2 = (tmp_64_fu_669_p2 & tmp_63_fu_651_p2);

assign tmp_67_fu_681_p2 = (tmp_66_fu_411_p2 & tmp_65_fu_675_p2);

assign tmp_68_fu_635_p1 = tmp_41_to_int_fu_622_p1[51:0];

assign tmp_69_fu_750_p4 = {{switch_point_q0[31:1]}};

assign tmp_fu_436_p1 = invdar_reg_250;

assign tmp_s_fu_441_p2 = ((invdar_reg_250 == 4'd11) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_37_reg_840[1:0] <= 2'b00;
    tmp_55_reg_949[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //sph_dec
