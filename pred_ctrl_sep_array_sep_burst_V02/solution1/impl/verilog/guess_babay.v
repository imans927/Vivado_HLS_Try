// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module guess_babay (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        V_Gen_a_address0,
        V_Gen_a_ce0,
        V_Gen_a_q0,
        H_Hat_Inv_a_address0,
        H_Hat_Inv_a_ce0,
        H_Hat_Inv_a_q0,
        U_unc_kk_address0,
        U_unc_kk_ce0,
        U_unc_kk_q0,
        theta_kk_address0,
        theta_kk_ce0,
        theta_kk_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 29'd1;
parameter    ap_ST_fsm_state2 = 29'd2;
parameter    ap_ST_fsm_state3 = 29'd4;
parameter    ap_ST_fsm_state4 = 29'd8;
parameter    ap_ST_fsm_state5 = 29'd16;
parameter    ap_ST_fsm_state6 = 29'd32;
parameter    ap_ST_fsm_state7 = 29'd64;
parameter    ap_ST_fsm_state8 = 29'd128;
parameter    ap_ST_fsm_state9 = 29'd256;
parameter    ap_ST_fsm_state10 = 29'd512;
parameter    ap_ST_fsm_state11 = 29'd1024;
parameter    ap_ST_fsm_state12 = 29'd2048;
parameter    ap_ST_fsm_state13 = 29'd4096;
parameter    ap_ST_fsm_state14 = 29'd8192;
parameter    ap_ST_fsm_state15 = 29'd16384;
parameter    ap_ST_fsm_state16 = 29'd32768;
parameter    ap_ST_fsm_state17 = 29'd65536;
parameter    ap_ST_fsm_state18 = 29'd131072;
parameter    ap_ST_fsm_state19 = 29'd262144;
parameter    ap_ST_fsm_state20 = 29'd524288;
parameter    ap_ST_fsm_state21 = 29'd1048576;
parameter    ap_ST_fsm_state22 = 29'd2097152;
parameter    ap_ST_fsm_state23 = 29'd4194304;
parameter    ap_ST_fsm_state24 = 29'd8388608;
parameter    ap_ST_fsm_state25 = 29'd16777216;
parameter    ap_ST_fsm_state26 = 29'd33554432;
parameter    ap_ST_fsm_state27 = 29'd67108864;
parameter    ap_ST_fsm_state28 = 29'd134217728;
parameter    ap_ST_fsm_state29 = 29'd268435456;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] V_Gen_a_address0;
output   V_Gen_a_ce0;
input  [31:0] V_Gen_a_q0;
output  [7:0] H_Hat_Inv_a_address0;
output   H_Hat_Inv_a_ce0;
input  [31:0] H_Hat_Inv_a_q0;
output  [3:0] U_unc_kk_address0;
output   U_unc_kk_ce0;
input  [31:0] U_unc_kk_q0;
output  [3:0] theta_kk_address0;
output   theta_kk_ce0;
input  [31:0] theta_kk_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg V_Gen_a_ce0;
reg H_Hat_Inv_a_ce0;
reg U_unc_kk_ce0;
reg theta_kk_ce0;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_237_p2;
reg   [31:0] reg_265;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state15;
reg   [0:0] tmp_94_reg_609;
wire    ap_CS_fsm_state25;
wire   [31:0] grp_fu_227_p2;
reg   [31:0] reg_270;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state23;
wire   [3:0] row_15_fu_283_p2;
reg   [3:0] row_15_reg_531;
wire    ap_CS_fsm_state2;
reg   [3:0] U_babay_addr_reg_536;
wire   [0:0] exitcond3_fu_277_p2;
wire   [8:0] tmp_s_fu_318_p2;
reg   [8:0] tmp_s_reg_541;
wire   [3:0] col_5_fu_334_p2;
reg   [3:0] col_5_reg_549;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond2_fu_328_p2;
wire   [31:0] tmp_88_neg_fu_423_p2;
reg   [31:0] tmp_88_neg_reg_573;
wire    ap_CS_fsm_state4;
reg   [31:0] theta_kk_load_reg_578;
wire   [31:0] tmp_87_fu_429_p1;
wire    ap_CS_fsm_state5;
wire   [3:0] row_1_fu_439_p2;
reg   [3:0] row_1_reg_591;
wire    ap_CS_fsm_state11;
wire   [8:0] tmp_82_fu_469_p2;
reg   [8:0] tmp_82_reg_596;
wire   [0:0] exitcond1_fu_433_p2;
wire   [3:0] col_6_fu_485_p2;
reg   [3:0] col_6_reg_604;
wire    ap_CS_fsm_state12;
wire   [0:0] tmp_94_fu_491_p2;
wire   [0:0] exitcond_fu_479_p2;
reg   [31:0] V_Gen_a_load_reg_629;
wire    ap_CS_fsm_state13;
wire   [31:0] U_babay_q0;
reg   [31:0] U_babay_load_reg_634;
wire   [31:0] temp_value_1_fu_521_p3;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state29;
reg   [3:0] U_babay_address0;
reg    U_babay_ce0;
reg    U_babay_we0;
reg   [31:0] U_babay_d0;
reg   [3:0] row_reg_146;
reg   [31:0] tmp_83_reg_157;
reg   [3:0] col_reg_169;
reg   [31:0] babay_rho_reg_180;
reg   [3:0] row1_reg_192;
reg   [31:0] temp_value_reg_204;
reg   [3:0] col2_reg_216;
wire   [63:0] tmp_fu_289_p1;
wire   [63:0] tmp_86_fu_349_p1;
wire   [63:0] tmp_88_fu_354_p1;
wire   [63:0] tmp_96_fu_506_p1;
wire   [63:0] tmp_97_fu_511_p1;
wire   [63:0] tmp_91_fu_516_p1;
wire   [0:0] tmp_103_fu_395_p2;
wire   [0:0] tmp_93_fu_407_p2;
wire   [0:0] tmp_108_fu_413_p2;
reg   [31:0] grp_fu_227_p0;
reg   [31:0] grp_fu_227_p1;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state26;
reg   [31:0] grp_fu_237_p0;
reg   [31:0] grp_fu_237_p1;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state24;
wire   [7:0] p_shl_fu_294_p3;
wire   [5:0] p_shl6_fu_306_p3;
wire   [8:0] p_shl_cast_fu_302_p1;
wire   [8:0] p_shl6_cast_fu_314_p1;
wire   [8:0] col_cast7_fu_324_p1;
wire   [8:0] tmp_85_fu_340_p2;
wire  signed [31:0] tmp_85_cast_fu_345_p1;
wire   [31:0] tmp_83_to_int_fu_359_p1;
wire   [7:0] tmp_99_fu_363_p4;
wire   [22:0] tmp_100_fu_373_p1;
wire   [0:0] notrhs_fu_383_p2;
wire   [0:0] notlhs_fu_377_p2;
wire   [0:0] tmp_101_fu_389_p2;
wire   [0:0] tmp_102_fu_241_p2;
wire   [0:0] tmp_104_fu_247_p2;
wire   [0:0] tmp_105_fu_401_p2;
wire   [0:0] tmp_106_fu_253_p2;
wire   [0:0] tmp_107_fu_259_p2;
wire   [31:0] tmp_88_to_int_fu_419_p1;
wire   [7:0] p_shl7_fu_445_p3;
wire   [5:0] p_shl8_fu_457_p3;
wire   [8:0] p_shl7_cast_fu_453_p1;
wire   [8:0] p_shl8_cast_fu_465_p1;
wire   [8:0] col2_cast2_fu_475_p1;
wire   [8:0] tmp_95_fu_497_p2;
wire  signed [31:0] tmp_96_cast_fu_502_p1;
reg   [1:0] grp_fu_227_opcode;
reg   [31:0] ap_return_preg;
reg   [28:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'd1;
#0 ap_return_preg = 32'd0;
end

guess_edu_u_educaibs #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
U_babay_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(U_babay_address0),
    .ce0(U_babay_ce0),
    .we0(U_babay_we0),
    .d0(U_babay_d0),
    .q0(U_babay_q0)
);

predictive_controbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
predictive_controbkb_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_227_p0),
    .din1(grp_fu_227_p1),
    .opcode(grp_fu_227_opcode),
    .ce(1'b1),
    .dout(grp_fu_227_p2)
);

predictive_controcud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
predictive_controcud_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_237_p0),
    .din1(grp_fu_237_p1),
    .ce(1'b1),
    .dout(grp_fu_237_p2)
);

predictive_controjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
predictive_controjbC_U38(
    .din0(tmp_83_reg_157),
    .din1(32'd1056964608),
    .opcode(5'd3),
    .dout(tmp_102_fu_241_p2)
);

predictive_controjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
predictive_controjbC_U39(
    .din0(tmp_83_reg_157),
    .din1(32'd1056964608),
    .opcode(5'd4),
    .dout(tmp_104_fu_247_p2)
);

predictive_controjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
predictive_controjbC_U40(
    .din0(tmp_83_reg_157),
    .din1(32'd3204448256),
    .opcode(5'd3),
    .dout(tmp_106_fu_253_p2)
);

predictive_controjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
predictive_controjbC_U41(
    .din0(tmp_83_reg_157),
    .din1(32'd3204448256),
    .opcode(5'd4),
    .dout(tmp_107_fu_259_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (exitcond1_fu_433_p2 == 1'd1))) begin
            ap_return_preg <= babay_rho_reg_180;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_277_p2 == 1'd1))) begin
        babay_rho_reg_180 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        babay_rho_reg_180 <= grp_fu_227_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        col2_reg_216 <= col_6_reg_604;
    end else if (((exitcond1_fu_433_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        col2_reg_216 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        col_reg_169 <= col_5_reg_549;
    end else if (((exitcond3_fu_277_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        col_reg_169 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_277_p2 == 1'd1))) begin
        row1_reg_192 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        row1_reg_192 <= row_1_reg_591;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond2_fu_328_p2 == 1'd1))) begin
        row_reg_146 <= row_15_reg_531;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        row_reg_146 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        temp_value_reg_204 <= temp_value_1_fu_521_p3;
    end else if (((exitcond1_fu_433_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        temp_value_reg_204 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_83_reg_157 <= grp_fu_227_p2;
    end else if (((exitcond3_fu_277_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_83_reg_157 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_277_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        U_babay_addr_reg_536 <= tmp_fu_289_p1;
        tmp_s_reg_541[8 : 2] <= tmp_s_fu_318_p2[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        U_babay_load_reg_634 <= U_babay_q0;
        V_Gen_a_load_reg_629 <= V_Gen_a_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        col_5_reg_549 <= col_5_fu_334_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        col_6_reg_604 <= col_6_fu_485_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state6) | ((tmp_94_reg_609 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        reg_265 <= grp_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_270 <= grp_fu_227_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        row_15_reg_531 <= row_15_fu_283_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        row_1_reg_591 <= row_1_fu_439_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        theta_kk_load_reg_578 <= theta_kk_q0;
        tmp_88_neg_reg_573 <= tmp_88_neg_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_433_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        tmp_82_reg_596[8 : 2] <= tmp_82_fu_469_p2[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_479_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        tmp_94_reg_609 <= tmp_94_fu_491_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        H_Hat_Inv_a_ce0 = 1'b1;
    end else begin
        H_Hat_Inv_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        U_babay_address0 = tmp_97_fu_511_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state3) & (tmp_103_fu_395_p2 == 1'd1) & (exitcond2_fu_328_p2 == 1'd1)) | ((tmp_103_fu_395_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_93_fu_407_p2 == 1'd1) & (exitcond2_fu_328_p2 == 1'd1)) | ((tmp_93_fu_407_p2 == 1'd0) & (tmp_103_fu_395_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_108_fu_413_p2 == 1'd1) & (exitcond2_fu_328_p2 == 1'd1)))) begin
        U_babay_address0 = U_babay_addr_reg_536;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        U_babay_address0 = tmp_fu_289_p1;
    end else begin
        U_babay_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state3) & (tmp_103_fu_395_p2 == 1'd1) & (exitcond2_fu_328_p2 == 1'd1)) | ((tmp_103_fu_395_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_93_fu_407_p2 == 1'd1) & (exitcond2_fu_328_p2 == 1'd1)) | ((tmp_93_fu_407_p2 == 1'd0) & (tmp_103_fu_395_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_108_fu_413_p2 == 1'd1) & (exitcond2_fu_328_p2 == 1'd1)))) begin
        U_babay_ce0 = 1'b1;
    end else begin
        U_babay_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        U_babay_d0 = grp_fu_227_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_103_fu_395_p2 == 1'd1) & (exitcond2_fu_328_p2 == 1'd1))) begin
        U_babay_d0 = 32'd1065353216;
    end else if (((tmp_93_fu_407_p2 == 1'd0) & (tmp_103_fu_395_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_108_fu_413_p2 == 1'd1) & (exitcond2_fu_328_p2 == 1'd1))) begin
        U_babay_d0 = 32'd3212836864;
    end else if (((1'b1 == ap_CS_fsm_state2) | ((tmp_103_fu_395_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_93_fu_407_p2 == 1'd1) & (exitcond2_fu_328_p2 == 1'd1)))) begin
        U_babay_d0 = 32'd0;
    end else begin
        U_babay_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state3) & (tmp_103_fu_395_p2 == 1'd1) & (exitcond2_fu_328_p2 == 1'd1)) | ((tmp_103_fu_395_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_93_fu_407_p2 == 1'd1) & (exitcond2_fu_328_p2 == 1'd1)) | ((tmp_93_fu_407_p2 == 1'd0) & (tmp_103_fu_395_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_108_fu_413_p2 == 1'd1) & (exitcond2_fu_328_p2 == 1'd1)) | ((exitcond3_fu_277_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        U_babay_we0 = 1'b1;
    end else begin
        U_babay_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        U_unc_kk_ce0 = 1'b1;
    end else begin
        U_unc_kk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        V_Gen_a_ce0 = 1'b1;
    end else begin
        V_Gen_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state11) & (exitcond1_fu_433_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (exitcond1_fu_433_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (exitcond1_fu_433_p2 == 1'd1))) begin
        ap_return = babay_rho_reg_180;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_227_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state7) | ((tmp_94_reg_609 == 1'd0) & (1'b1 == ap_CS_fsm_state16)))) begin
        grp_fu_227_opcode = 2'd0;
    end else begin
        grp_fu_227_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_227_p0 = babay_rho_reg_180;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_227_p0 = U_unc_kk_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_227_p0 = temp_value_reg_204;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_227_p0 = tmp_83_reg_157;
    end else begin
        grp_fu_227_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_227_p1 = temp_value_reg_204;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_227_p1 = reg_265;
    end else begin
        grp_fu_227_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_237_p0 = reg_270;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_237_p0 = V_Gen_a_load_reg_629;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_237_p0 = tmp_87_fu_429_p1;
    end else begin
        grp_fu_237_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_237_p1 = reg_270;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_237_p1 = U_babay_load_reg_634;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_237_p1 = theta_kk_load_reg_578;
    end else begin
        grp_fu_237_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        theta_kk_ce0 = 1'b1;
    end else begin
        theta_kk_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_277_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond2_fu_328_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (exitcond1_fu_433_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (exitcond_fu_479_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign H_Hat_Inv_a_address0 = tmp_86_fu_349_p1;

assign U_unc_kk_address0 = tmp_91_fu_516_p1;

assign V_Gen_a_address0 = tmp_96_fu_506_p1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign col2_cast2_fu_475_p1 = col2_reg_216;

assign col_5_fu_334_p2 = (col_reg_169 + 4'd1);

assign col_6_fu_485_p2 = (col2_reg_216 + 4'd1);

assign col_cast7_fu_324_p1 = col_reg_169;

assign exitcond1_fu_433_p2 = ((row1_reg_192 == 4'd12) ? 1'b1 : 1'b0);

assign exitcond2_fu_328_p2 = ((col_reg_169 == 4'd12) ? 1'b1 : 1'b0);

assign exitcond3_fu_277_p2 = ((row_reg_146 == 4'd12) ? 1'b1 : 1'b0);

assign exitcond_fu_479_p2 = ((col2_reg_216 == 4'd13) ? 1'b1 : 1'b0);

assign notlhs_fu_377_p2 = ((tmp_99_fu_363_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs_fu_383_p2 = ((tmp_100_fu_373_p1 == 23'd0) ? 1'b1 : 1'b0);

assign p_shl6_cast_fu_314_p1 = p_shl6_fu_306_p3;

assign p_shl6_fu_306_p3 = {{row_reg_146}, {2'd0}};

assign p_shl7_cast_fu_453_p1 = p_shl7_fu_445_p3;

assign p_shl7_fu_445_p3 = {{row1_reg_192}, {4'd0}};

assign p_shl8_cast_fu_465_p1 = p_shl8_fu_457_p3;

assign p_shl8_fu_457_p3 = {{row1_reg_192}, {2'd0}};

assign p_shl_cast_fu_302_p1 = p_shl_fu_294_p3;

assign p_shl_fu_294_p3 = {{row_reg_146}, {4'd0}};

assign row_15_fu_283_p2 = (row_reg_146 + 4'd1);

assign row_1_fu_439_p2 = (row1_reg_192 + 4'd1);

assign temp_value_1_fu_521_p3 = ((tmp_94_reg_609[0:0] === 1'b1) ? temp_value_reg_204 : grp_fu_227_p2);

assign theta_kk_address0 = tmp_88_fu_354_p1;

assign tmp_100_fu_373_p1 = tmp_83_to_int_fu_359_p1[22:0];

assign tmp_101_fu_389_p2 = (notrhs_fu_383_p2 | notlhs_fu_377_p2);

assign tmp_103_fu_395_p2 = (tmp_102_fu_241_p2 & tmp_101_fu_389_p2);

assign tmp_105_fu_401_p2 = (tmp_104_fu_247_p2 & tmp_101_fu_389_p2);

assign tmp_108_fu_413_p2 = (tmp_107_fu_259_p2 & tmp_101_fu_389_p2);

assign tmp_82_fu_469_p2 = (p_shl7_cast_fu_453_p1 - p_shl8_cast_fu_465_p1);

assign tmp_83_to_int_fu_359_p1 = tmp_83_reg_157;

assign tmp_85_cast_fu_345_p1 = $signed(tmp_85_fu_340_p2);

assign tmp_85_fu_340_p2 = (col_cast7_fu_324_p1 + tmp_s_reg_541);

assign tmp_86_fu_349_p1 = $unsigned(tmp_85_cast_fu_345_p1);

assign tmp_87_fu_429_p1 = tmp_88_neg_reg_573;

assign tmp_88_fu_354_p1 = col_reg_169;

assign tmp_88_neg_fu_423_p2 = (tmp_88_to_int_fu_419_p1 ^ 32'd2147483648);

assign tmp_88_to_int_fu_419_p1 = H_Hat_Inv_a_q0;

assign tmp_91_fu_516_p1 = row1_reg_192;

assign tmp_93_fu_407_p2 = (tmp_106_fu_253_p2 & tmp_105_fu_401_p2);

assign tmp_94_fu_491_p2 = ((col2_reg_216 > row1_reg_192) ? 1'b1 : 1'b0);

assign tmp_95_fu_497_p2 = (tmp_82_reg_596 + col2_cast2_fu_475_p1);

assign tmp_96_cast_fu_502_p1 = $signed(tmp_95_fu_497_p2);

assign tmp_96_fu_506_p1 = $unsigned(tmp_96_cast_fu_502_p1);

assign tmp_97_fu_511_p1 = col2_reg_216;

assign tmp_99_fu_363_p4 = {{tmp_83_to_int_fu_359_p1[30:23]}};

assign tmp_fu_289_p1 = row_reg_146;

assign tmp_s_fu_318_p2 = (p_shl_cast_fu_302_p1 - p_shl6_cast_fu_314_p1);

always @ (posedge ap_clk) begin
    tmp_s_reg_541[1:0] <= 2'b00;
    tmp_82_reg_596[1:0] <= 2'b00;
end

endmodule //guess_babay
