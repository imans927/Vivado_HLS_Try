// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module unconstrained (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        R_Hat_a_address0,
        R_Hat_a_ce0,
        R_Hat_a_q0,
        X_KK_a_0_read,
        X_KK_a_1_read,
        X_KK_a_2_read,
        X_KK_a_3_read,
        Y_Hat_a_address0,
        Y_Hat_a_ce0,
        Y_Hat_a_q0,
        Y_Ref_KK_a_address0,
        Y_Ref_KK_a_ce0,
        Y_Ref_KK_a_q0,
        U_KK_a_address0,
        U_KK_a_ce0,
        U_KK_a_q0,
        V_Mul_H_Inv_a_address0,
        V_Mul_H_Inv_a_ce0,
        V_Mul_H_Inv_a_q0,
        unconstrained_r_address0,
        unconstrained_r_ce0,
        unconstrained_r_we0,
        unconstrained_r_d0,
        theta_kk_address0,
        theta_kk_ce0,
        theta_kk_we0,
        theta_kk_d0,
        theta_kk_q0
);

parameter    ap_ST_fsm_state1 = 54'd1;
parameter    ap_ST_fsm_state2 = 54'd2;
parameter    ap_ST_fsm_state3 = 54'd4;
parameter    ap_ST_fsm_state4 = 54'd8;
parameter    ap_ST_fsm_state5 = 54'd16;
parameter    ap_ST_fsm_state6 = 54'd32;
parameter    ap_ST_fsm_state7 = 54'd64;
parameter    ap_ST_fsm_state8 = 54'd128;
parameter    ap_ST_fsm_state9 = 54'd256;
parameter    ap_ST_fsm_state10 = 54'd512;
parameter    ap_ST_fsm_state11 = 54'd1024;
parameter    ap_ST_fsm_state12 = 54'd2048;
parameter    ap_ST_fsm_state13 = 54'd4096;
parameter    ap_ST_fsm_state14 = 54'd8192;
parameter    ap_ST_fsm_state15 = 54'd16384;
parameter    ap_ST_fsm_state16 = 54'd32768;
parameter    ap_ST_fsm_state17 = 54'd65536;
parameter    ap_ST_fsm_state18 = 54'd131072;
parameter    ap_ST_fsm_state19 = 54'd262144;
parameter    ap_ST_fsm_state20 = 54'd524288;
parameter    ap_ST_fsm_state21 = 54'd1048576;
parameter    ap_ST_fsm_state22 = 54'd2097152;
parameter    ap_ST_fsm_state23 = 54'd4194304;
parameter    ap_ST_fsm_state24 = 54'd8388608;
parameter    ap_ST_fsm_state25 = 54'd16777216;
parameter    ap_ST_fsm_state26 = 54'd33554432;
parameter    ap_ST_fsm_state27 = 54'd67108864;
parameter    ap_ST_fsm_state28 = 54'd134217728;
parameter    ap_ST_fsm_state29 = 54'd268435456;
parameter    ap_ST_fsm_state30 = 54'd536870912;
parameter    ap_ST_fsm_state31 = 54'd1073741824;
parameter    ap_ST_fsm_state32 = 54'd2147483648;
parameter    ap_ST_fsm_state33 = 54'd4294967296;
parameter    ap_ST_fsm_state34 = 54'd8589934592;
parameter    ap_ST_fsm_state35 = 54'd17179869184;
parameter    ap_ST_fsm_state36 = 54'd34359738368;
parameter    ap_ST_fsm_state37 = 54'd68719476736;
parameter    ap_ST_fsm_state38 = 54'd137438953472;
parameter    ap_ST_fsm_state39 = 54'd274877906944;
parameter    ap_ST_fsm_state40 = 54'd549755813888;
parameter    ap_ST_fsm_state41 = 54'd1099511627776;
parameter    ap_ST_fsm_state42 = 54'd2199023255552;
parameter    ap_ST_fsm_state43 = 54'd4398046511104;
parameter    ap_ST_fsm_state44 = 54'd8796093022208;
parameter    ap_ST_fsm_state45 = 54'd17592186044416;
parameter    ap_ST_fsm_state46 = 54'd35184372088832;
parameter    ap_ST_fsm_state47 = 54'd70368744177664;
parameter    ap_ST_fsm_state48 = 54'd140737488355328;
parameter    ap_ST_fsm_state49 = 54'd281474976710656;
parameter    ap_ST_fsm_state50 = 54'd562949953421312;
parameter    ap_ST_fsm_state51 = 54'd1125899906842624;
parameter    ap_ST_fsm_state52 = 54'd2251799813685248;
parameter    ap_ST_fsm_state53 = 54'd4503599627370496;
parameter    ap_ST_fsm_state54 = 54'd9007199254740992;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] R_Hat_a_address0;
output   R_Hat_a_ce0;
input  [31:0] R_Hat_a_q0;
input  [31:0] X_KK_a_0_read;
input  [31:0] X_KK_a_1_read;
input  [31:0] X_KK_a_2_read;
input  [31:0] X_KK_a_3_read;
output  [6:0] Y_Hat_a_address0;
output   Y_Hat_a_ce0;
input  [31:0] Y_Hat_a_q0;
output  [2:0] Y_Ref_KK_a_address0;
output   Y_Ref_KK_a_ce0;
input  [31:0] Y_Ref_KK_a_q0;
output  [3:0] U_KK_a_address0;
output   U_KK_a_ce0;
input  [31:0] U_KK_a_q0;
output  [7:0] V_Mul_H_Inv_a_address0;
output   V_Mul_H_Inv_a_ce0;
input  [31:0] V_Mul_H_Inv_a_q0;
output  [3:0] unconstrained_r_address0;
output   unconstrained_r_ce0;
output   unconstrained_r_we0;
output  [31:0] unconstrained_r_d0;
output  [3:0] theta_kk_address0;
output   theta_kk_ce0;
output   theta_kk_we0;
output  [31:0] theta_kk_d0;
input  [31:0] theta_kk_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg R_Hat_a_ce0;
reg Y_Hat_a_ce0;
reg Y_Ref_KK_a_ce0;
reg U_KK_a_ce0;
reg V_Mul_H_Inv_a_ce0;
reg unconstrained_r_ce0;
reg unconstrained_r_we0;
reg[3:0] theta_kk_address0;
reg theta_kk_ce0;
reg theta_kk_we0;
reg[31:0] theta_kk_d0;

(* fsm_encoding = "none" *) reg   [53:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_1047_p2;
reg   [31:0] reg_1070;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state44;
wire   [31:0] grp_fu_1038_p2;
reg   [31:0] reg_1079;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state48;
reg   [31:0] reg_1089;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state53;
wire   [63:0] grp_fu_1054_p1;
reg   [63:0] reg_1095;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state33;
wire   [1:0] indvarinc_fu_1113_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] accu_3_1_fu_1153_p3;
wire   [31:0] accu_2_1_fu_1177_p3;
wire   [31:0] accu_1_1_fu_1193_p3;
wire   [31:0] accu_0_1_fu_1201_p3;
wire   [3:0] row_1_fu_1241_p2;
reg   [3:0] row_1_reg_1669;
wire    ap_CS_fsm_state3;
reg   [2:0] temp_addr_reg_1674;
wire   [0:0] exitcond7_fu_1235_p2;
wire   [4:0] tmp_3_fu_1256_p3;
reg   [4:0] tmp_3_reg_1679;
wire   [2:0] col_1_fu_1274_p2;
reg   [2:0] col_1_reg_1687;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond6_fu_1268_p2;
wire   [1:0] tmp_36_fu_1290_p1;
reg   [1:0] tmp_36_reg_1697;
wire   [31:0] tmp_8_fu_1294_p6;
reg   [31:0] tmp_8_reg_1701;
reg   [31:0] R_Hat_a_load_reg_1706;
wire    ap_CS_fsm_state5;
wire   [2:0] i_1_fu_1310_p2;
reg   [2:0] i_1_reg_1714;
wire    ap_CS_fsm_state10;
wire   [1:0] tmp_38_fu_1316_p1;
reg   [1:0] tmp_38_reg_1719;
wire   [0:0] exitcond5_fu_1304_p2;
wire   [31:0] tmp_19_fu_1320_p6;
wire   [7:0] row1_cast_fu_1335_p1;
reg   [7:0] row1_cast_reg_1728;
wire    ap_CS_fsm_state15;
wire   [3:0] row_2_fu_1345_p2;
reg   [3:0] row_2_reg_1736;
wire   [63:0] tmp_4_fu_1351_p1;
reg   [63:0] tmp_4_reg_1741;
wire   [0:0] exitcond4_fu_1339_p2;
reg   [3:0] theta_kk_addr_reg_1746;
wire   [3:0] col_2_fu_1362_p2;
reg   [3:0] col_2_reg_1754;
wire    ap_CS_fsm_state16;
wire   [7:0] tmp_13_fu_1402_p2;
reg   [7:0] tmp_13_reg_1759;
wire   [0:0] exitcond3_fu_1356_p2;
wire   [0:0] tmp_11_fu_1413_p2;
reg   [0:0] tmp_11_reg_1774;
wire   [31:0] temp_q0;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
reg   [31:0] Y_Hat_a_load_reg_1798;
wire   [63:0] grp_fu_1065_p2;
reg   [63:0] tmp_23_reg_1803;
wire    ap_CS_fsm_state32;
wire   [31:0] tmp_25_fu_1051_p1;
reg   [31:0] tmp_25_reg_1808;
wire    ap_CS_fsm_state37;
wire   [3:0] row_3_fu_1433_p2;
reg   [3:0] row_3_reg_1816;
wire    ap_CS_fsm_state39;
reg   [3:0] unconstrained_addr_reg_1821;
wire   [0:0] exitcond2_fu_1427_p2;
wire   [8:0] tmp_10_fu_1468_p2;
reg   [8:0] tmp_10_reg_1826;
wire   [2:0] col_s_1_fu_1490_p2;
reg   [2:0] col_s_1_reg_1837;
wire    ap_CS_fsm_state41;
wire   [0:0] exitcond1_fu_1484_p2;
wire   [1:0] tmp_40_fu_1525_p1;
reg   [1:0] tmp_40_reg_1852;
wire   [3:0] col_3_fu_1529_p2;
wire   [31:0] tmp_29_neg_fu_1539_p2;
reg   [31:0] tmp_29_neg_reg_1862;
wire    ap_CS_fsm_state42;
reg   [31:0] theta_kk_load_reg_1867;
wire   [31:0] tmp_29_fu_1545_p1;
wire    ap_CS_fsm_state43;
wire   [31:0] tmp_34_fu_1549_p6;
wire    ap_CS_fsm_state45;
wire   [2:0] i_2_fu_1569_p2;
reg   [2:0] i_2_reg_1885;
wire    ap_CS_fsm_state50;
wire   [1:0] tmp_39_fu_1575_p1;
reg   [1:0] tmp_39_reg_1890;
wire   [0:0] exitcond_fu_1563_p2;
wire   [31:0] tmp_33_fu_1579_p6;
reg   [2:0] temp_address0;
reg    temp_ce0;
reg    temp_we0;
reg   [1:0] invdar_reg_267;
wire   [0:0] tmp_1_fu_1209_p2;
reg   [31:0] accu_3_2_reg_278;
reg   [31:0] accu_2_2_reg_288;
reg   [31:0] accu_1_2_reg_298;
reg   [31:0] accu_0_2_reg_308;
reg   [3:0] row_reg_318;
reg   [31:0] accu_3_3_reg_329;
wire    ap_CS_fsm_state9;
reg   [31:0] accu_2_3_reg_340;
reg   [31:0] accu_1_3_reg_351;
reg   [31:0] accu_0_s_reg_362;
reg   [2:0] col_reg_373;
reg   [31:0] accu_3_3_be_reg_384;
wire    ap_CS_fsm_state8;
reg   [31:0] accu_2_3_be_reg_402;
reg   [31:0] accu_1_3_be_reg_420;
reg   [31:0] accu_0_be_reg_438;
reg   [31:0] accu_3_5_reg_456;
wire    ap_CS_fsm_state14;
reg   [31:0] accu_2_5_reg_468;
reg   [31:0] accu_1_5_reg_480;
reg   [31:0] accu_0_5_reg_492;
reg   [31:0] accu_value_1_reg_504;
reg   [2:0] i_reg_517;
reg   [31:0] accu_3_5_be_reg_528;
reg   [31:0] accu_2_5_be_reg_548;
reg   [31:0] accu_1_5_be_reg_568;
reg   [31:0] accu_0_5_be_reg_588;
reg   [3:0] row1_reg_608;
wire    ap_CS_fsm_state38;
reg   [31:0] storemerge_reg_620;
reg   [3:0] col2_reg_633;
reg   [31:0] accu_3_7_reg_644;
reg   [31:0] accu_2_7_reg_655;
reg   [31:0] accu_1_7_reg_666;
reg   [31:0] accu_0_7_reg_677;
reg   [3:0] row3_reg_688;
reg   [31:0] accu_3_8_reg_699;
reg   [31:0] accu_2_8_reg_710;
reg   [31:0] accu_1_8_reg_721;
reg   [31:0] accu_0_8_reg_732;
reg   [3:0] col4_reg_743;
reg   [31:0] accu_3_9_reg_755;
wire    ap_CS_fsm_state40;
wire   [0:0] tmp_20_fu_1474_p2;
wire    ap_CS_fsm_state49;
reg   [31:0] accu_2_9_reg_767;
reg   [31:0] accu_1_9_reg_779;
reg   [31:0] accu_0_9_reg_791;
reg   [2:0] col_s_reg_803;
reg   [31:0] accu_3_9_be_reg_814;
reg   [31:0] accu_2_9_be_reg_832;
reg   [31:0] accu_1_9_be_reg_850;
reg   [31:0] accu_0_9_be_reg_868;
reg   [31:0] accu_3_s_reg_886;
wire    ap_CS_fsm_state54;
reg   [31:0] accu_2_s_reg_898;
reg   [31:0] accu_1_s_reg_910;
reg   [31:0] accu_0_4_reg_922;
reg   [31:0] accu_value_3_reg_934;
reg   [2:0] i5_reg_947;
reg   [31:0] accu_3_be_reg_958;
reg   [31:0] accu_2_be_reg_978;
reg   [31:0] accu_1_be_reg_998;
reg   [31:0] accu_0_11_be_reg_1018;
wire   [63:0] tmp_2_fu_1247_p1;
wire   [63:0] tmp_6_fu_1285_p1;
wire   [63:0] tmp_15_fu_1407_p1;
wire   [63:0] tmp_14_fu_1422_p1;
wire   [63:0] tmp_9_fu_1439_p1;
wire   [63:0] tmp_28_fu_1515_p1;
wire   [63:0] tmp_31_fu_1520_p1;
reg   [31:0] accu_0_fu_108;
reg   [31:0] accu_1_fu_112;
reg   [31:0] accu_2_fu_116;
reg   [31:0] accu_3_fu_120;
reg   [31:0] grp_fu_1038_p0;
reg   [31:0] grp_fu_1038_p1;
wire    ap_CS_fsm_state23;
reg   [31:0] grp_fu_1047_p0;
reg   [31:0] grp_fu_1047_p1;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state21;
wire   [63:0] grp_fu_1059_p2;
reg   [31:0] grp_fu_1054_p0;
wire    ap_CS_fsm_state28;
wire   [0:0] sel_tmp_fu_1119_p2;
wire   [0:0] sel_tmp4_fu_1133_p2;
wire   [31:0] sel_tmp3_fu_1125_p3;
wire   [0:0] sel_tmp6_fu_1147_p2;
wire   [31:0] sel_tmp5_fu_1139_p3;
wire   [31:0] sel_tmp9_fu_1161_p3;
wire   [31:0] sel_tmp1_fu_1169_p3;
wire   [31:0] sel_tmp2_fu_1185_p3;
wire   [2:0] tmp_30_fu_1252_p1;
wire   [4:0] col_cast_fu_1264_p1;
wire   [4:0] tmp_5_fu_1280_p2;
wire   [1:0] tmp_8_fu_1294_p5;
wire   [1:0] tmp_19_fu_1320_p5;
wire   [2:0] tmp_37_fu_1368_p1;
wire   [6:0] p_shl_fu_1372_p3;
wire   [4:0] p_shl3_fu_1384_p3;
wire   [7:0] p_shl_cast_fu_1380_p1;
wire   [7:0] p_shl3_cast_fu_1392_p1;
wire   [7:0] tmp_12_fu_1396_p2;
wire  signed [31:0] tmp_13_cast_fu_1419_p1;
wire   [7:0] p_shl1_fu_1444_p3;
wire   [5:0] p_shl2_fu_1456_p3;
wire   [8:0] p_shl1_cast_fu_1452_p1;
wire   [8:0] p_shl2_cast_fu_1464_p1;
wire   [3:0] col_s_cast_fu_1480_p1;
wire   [3:0] tmp4_fu_1496_p2;
wire   [8:0] tmp4_cast_fu_1502_p1;
wire   [8:0] tmp_27_fu_1506_p2;
wire  signed [31:0] tmp_27_cast_fu_1511_p1;
wire   [31:0] tmp_29_to_int_fu_1535_p1;
wire   [1:0] tmp_33_fu_1579_p5;
reg   [1:0] grp_fu_1038_opcode;
reg   [53:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 54'd1;
end

unconstrained_temp #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
temp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_address0),
    .ce0(temp_ce0),
    .we0(temp_we0),
    .d0(accu_value_1_reg_504),
    .q0(temp_q0)
);

predictive_controbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
predictive_controbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1038_p0),
    .din1(grp_fu_1038_p1),
    .opcode(grp_fu_1038_opcode),
    .ce(1'b1),
    .dout(grp_fu_1038_p2)
);

predictive_controcud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
predictive_controcud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1047_p0),
    .din1(grp_fu_1047_p1),
    .ce(1'b1),
    .dout(grp_fu_1047_p2)
);

predictive_controdEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
predictive_controdEe_U3(
    .din0(grp_fu_1059_p2),
    .dout(tmp_25_fu_1051_p1)
);

predictive_controeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
predictive_controeOg_U4(
    .din0(grp_fu_1054_p0),
    .dout(grp_fu_1054_p1)
);

predictive_controfYi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
predictive_controfYi_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1054_p1),
    .din1(tmp_23_reg_1803),
    .ce(1'b1),
    .dout(grp_fu_1059_p2)
);

predictive_controg8j #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
predictive_controg8j_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_1095),
    .din1(64'd4574489888385009503),
    .ce(1'b1),
    .dout(grp_fu_1065_p2)
);

predictive_controhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
predictive_controhbi_U7(
    .din0(X_KK_a_0_read),
    .din1(X_KK_a_1_read),
    .din2(X_KK_a_2_read),
    .din3(X_KK_a_3_read),
    .din4(tmp_8_fu_1294_p5),
    .dout(tmp_8_fu_1294_p6)
);

predictive_controhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
predictive_controhbi_U8(
    .din0(accu_0_5_reg_492),
    .din1(accu_1_5_reg_480),
    .din2(accu_2_5_reg_468),
    .din3(accu_3_5_reg_456),
    .din4(tmp_19_fu_1320_p5),
    .dout(tmp_19_fu_1320_p6)
);

predictive_controhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
predictive_controhbi_U9(
    .din0(accu_0_9_reg_791),
    .din1(accu_1_9_reg_779),
    .din2(accu_2_9_reg_767),
    .din3(accu_3_9_reg_755),
    .din4(tmp_40_reg_1852),
    .dout(tmp_34_fu_1549_p6)
);

predictive_controhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
predictive_controhbi_U10(
    .din0(accu_0_4_reg_922),
    .din1(accu_1_s_reg_910),
    .din2(accu_2_s_reg_898),
    .din3(accu_3_s_reg_886),
    .din4(tmp_33_fu_1579_p5),
    .dout(tmp_33_fu_1579_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_39_reg_1890 == 2'd0) & (1'b1 == ap_CS_fsm_state53))) begin
        accu_0_11_be_reg_1018 <= 32'd0;
    end else if ((((tmp_39_reg_1890 == 2'd1) & (1'b1 == ap_CS_fsm_state53)) | ((tmp_39_reg_1890 == 2'd2) & (1'b1 == ap_CS_fsm_state53)) | ((tmp_39_reg_1890 == 2'd3) & (1'b1 == ap_CS_fsm_state53)))) begin
        accu_0_11_be_reg_1018 <= accu_0_4_reg_922;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_1209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        accu_0_2_reg_308 <= accu_0_1_fu_1201_p3;
    end else if (((exitcond5_fu_1304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        accu_0_2_reg_308 <= accu_0_5_reg_492;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        accu_0_4_reg_922 <= accu_0_11_be_reg_1018;
    end else if (((tmp_20_fu_1474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        accu_0_4_reg_922 <= accu_0_8_reg_732;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_38_reg_1719 == 2'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        accu_0_5_be_reg_588 <= 32'd0;
    end else if ((((tmp_38_reg_1719 == 2'd1) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_38_reg_1719 == 2'd2) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_38_reg_1719 == 2'd3) & (1'b1 == ap_CS_fsm_state13)))) begin
        accu_0_5_be_reg_588 <= accu_0_5_reg_492;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        accu_0_5_reg_492 <= accu_0_5_be_reg_588;
    end else if (((exitcond6_fu_1268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        accu_0_5_reg_492 <= accu_0_s_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_1339_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        accu_0_7_reg_677 <= accu_0_2_reg_308;
    end else if (((exitcond_fu_1563_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        accu_0_7_reg_677 <= accu_0_4_reg_922;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1484_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        accu_0_8_reg_732 <= accu_0_9_reg_791;
    end else if (((exitcond2_fu_1427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        accu_0_8_reg_732 <= accu_0_7_reg_677;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_40_reg_1852 == 2'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        accu_0_9_be_reg_868 <= grp_fu_1038_p2;
    end else if ((((tmp_40_reg_1852 == 2'd1) & (1'b1 == ap_CS_fsm_state48)) | ((tmp_40_reg_1852 == 2'd2) & (1'b1 == ap_CS_fsm_state48)) | ((tmp_40_reg_1852 == 2'd3) & (1'b1 == ap_CS_fsm_state48)))) begin
        accu_0_9_be_reg_868 <= accu_0_9_reg_791;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        accu_0_9_reg_791 <= accu_0_9_be_reg_868;
    end else if (((tmp_20_fu_1474_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        accu_0_9_reg_791 <= accu_0_8_reg_732;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_36_reg_1697 == 2'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        accu_0_be_reg_438 <= reg_1070;
    end else if ((((tmp_36_reg_1697 == 2'd1) & (1'b1 == ap_CS_fsm_state8)) | ((tmp_36_reg_1697 == 2'd2) & (1'b1 == ap_CS_fsm_state8)) | ((tmp_36_reg_1697 == 2'd3) & (1'b1 == ap_CS_fsm_state8)))) begin
        accu_0_be_reg_438 <= accu_0_s_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        accu_0_s_reg_362 <= accu_0_be_reg_438;
    end else if (((exitcond7_fu_1235_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        accu_0_s_reg_362 <= accu_0_2_reg_308;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_1209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        accu_1_2_reg_298 <= accu_1_1_fu_1193_p3;
    end else if (((exitcond5_fu_1304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        accu_1_2_reg_298 <= accu_1_5_reg_480;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_36_reg_1697 == 2'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        accu_1_3_be_reg_420 <= reg_1070;
    end else if ((((tmp_36_reg_1697 == 2'd0) & (1'b1 == ap_CS_fsm_state8)) | ((tmp_36_reg_1697 == 2'd2) & (1'b1 == ap_CS_fsm_state8)) | ((tmp_36_reg_1697 == 2'd3) & (1'b1 == ap_CS_fsm_state8)))) begin
        accu_1_3_be_reg_420 <= accu_1_3_reg_351;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        accu_1_3_reg_351 <= accu_1_3_be_reg_420;
    end else if (((exitcond7_fu_1235_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        accu_1_3_reg_351 <= accu_1_2_reg_298;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_38_reg_1719 == 2'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        accu_1_5_be_reg_568 <= 32'd0;
    end else if ((((tmp_38_reg_1719 == 2'd0) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_38_reg_1719 == 2'd2) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_38_reg_1719 == 2'd3) & (1'b1 == ap_CS_fsm_state13)))) begin
        accu_1_5_be_reg_568 <= accu_1_5_reg_480;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        accu_1_5_reg_480 <= accu_1_5_be_reg_568;
    end else if (((exitcond6_fu_1268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        accu_1_5_reg_480 <= accu_1_3_reg_351;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_1339_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        accu_1_7_reg_666 <= accu_1_2_reg_298;
    end else if (((exitcond_fu_1563_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        accu_1_7_reg_666 <= accu_1_s_reg_910;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1484_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        accu_1_8_reg_721 <= accu_1_9_reg_779;
    end else if (((exitcond2_fu_1427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        accu_1_8_reg_721 <= accu_1_7_reg_666;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_40_reg_1852 == 2'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        accu_1_9_be_reg_850 <= grp_fu_1038_p2;
    end else if ((((tmp_40_reg_1852 == 2'd0) & (1'b1 == ap_CS_fsm_state48)) | ((tmp_40_reg_1852 == 2'd2) & (1'b1 == ap_CS_fsm_state48)) | ((tmp_40_reg_1852 == 2'd3) & (1'b1 == ap_CS_fsm_state48)))) begin
        accu_1_9_be_reg_850 <= accu_1_9_reg_779;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        accu_1_9_reg_779 <= accu_1_9_be_reg_850;
    end else if (((tmp_20_fu_1474_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        accu_1_9_reg_779 <= accu_1_8_reg_721;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_39_reg_1890 == 2'd1) & (1'b1 == ap_CS_fsm_state53))) begin
        accu_1_be_reg_998 <= 32'd0;
    end else if ((((tmp_39_reg_1890 == 2'd0) & (1'b1 == ap_CS_fsm_state53)) | ((tmp_39_reg_1890 == 2'd2) & (1'b1 == ap_CS_fsm_state53)) | ((tmp_39_reg_1890 == 2'd3) & (1'b1 == ap_CS_fsm_state53)))) begin
        accu_1_be_reg_998 <= accu_1_s_reg_910;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        accu_1_s_reg_910 <= accu_1_be_reg_998;
    end else if (((tmp_20_fu_1474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        accu_1_s_reg_910 <= accu_1_8_reg_721;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_1209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        accu_2_2_reg_288 <= accu_2_1_fu_1177_p3;
    end else if (((exitcond5_fu_1304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        accu_2_2_reg_288 <= accu_2_5_reg_468;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_36_reg_1697 == 2'd2) & (1'b1 == ap_CS_fsm_state8))) begin
        accu_2_3_be_reg_402 <= reg_1070;
    end else if ((((tmp_36_reg_1697 == 2'd0) & (1'b1 == ap_CS_fsm_state8)) | ((tmp_36_reg_1697 == 2'd1) & (1'b1 == ap_CS_fsm_state8)) | ((tmp_36_reg_1697 == 2'd3) & (1'b1 == ap_CS_fsm_state8)))) begin
        accu_2_3_be_reg_402 <= accu_2_3_reg_340;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        accu_2_3_reg_340 <= accu_2_3_be_reg_402;
    end else if (((exitcond7_fu_1235_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        accu_2_3_reg_340 <= accu_2_2_reg_288;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_38_reg_1719 == 2'd2) & (1'b1 == ap_CS_fsm_state13))) begin
        accu_2_5_be_reg_548 <= 32'd0;
    end else if ((((tmp_38_reg_1719 == 2'd0) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_38_reg_1719 == 2'd1) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_38_reg_1719 == 2'd3) & (1'b1 == ap_CS_fsm_state13)))) begin
        accu_2_5_be_reg_548 <= accu_2_5_reg_468;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        accu_2_5_reg_468 <= accu_2_5_be_reg_548;
    end else if (((exitcond6_fu_1268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        accu_2_5_reg_468 <= accu_2_3_reg_340;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_1339_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        accu_2_7_reg_655 <= accu_2_2_reg_288;
    end else if (((exitcond_fu_1563_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        accu_2_7_reg_655 <= accu_2_s_reg_898;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1484_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        accu_2_8_reg_710 <= accu_2_9_reg_767;
    end else if (((exitcond2_fu_1427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        accu_2_8_reg_710 <= accu_2_7_reg_655;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_40_reg_1852 == 2'd2) & (1'b1 == ap_CS_fsm_state48))) begin
        accu_2_9_be_reg_832 <= grp_fu_1038_p2;
    end else if ((((tmp_40_reg_1852 == 2'd0) & (1'b1 == ap_CS_fsm_state48)) | ((tmp_40_reg_1852 == 2'd1) & (1'b1 == ap_CS_fsm_state48)) | ((tmp_40_reg_1852 == 2'd3) & (1'b1 == ap_CS_fsm_state48)))) begin
        accu_2_9_be_reg_832 <= accu_2_9_reg_767;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        accu_2_9_reg_767 <= accu_2_9_be_reg_832;
    end else if (((tmp_20_fu_1474_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        accu_2_9_reg_767 <= accu_2_8_reg_710;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_39_reg_1890 == 2'd2) & (1'b1 == ap_CS_fsm_state53))) begin
        accu_2_be_reg_978 <= 32'd0;
    end else if ((((tmp_39_reg_1890 == 2'd0) & (1'b1 == ap_CS_fsm_state53)) | ((tmp_39_reg_1890 == 2'd1) & (1'b1 == ap_CS_fsm_state53)) | ((tmp_39_reg_1890 == 2'd3) & (1'b1 == ap_CS_fsm_state53)))) begin
        accu_2_be_reg_978 <= accu_2_s_reg_898;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        accu_2_s_reg_898 <= accu_2_be_reg_978;
    end else if (((tmp_20_fu_1474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        accu_2_s_reg_898 <= accu_2_8_reg_710;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_1209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        accu_3_2_reg_278 <= accu_3_1_fu_1153_p3;
    end else if (((exitcond5_fu_1304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        accu_3_2_reg_278 <= accu_3_5_reg_456;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_36_reg_1697 == 2'd0) & (1'b1 == ap_CS_fsm_state8)) | ((tmp_36_reg_1697 == 2'd1) & (1'b1 == ap_CS_fsm_state8)) | ((tmp_36_reg_1697 == 2'd2) & (1'b1 == ap_CS_fsm_state8)))) begin
        accu_3_3_be_reg_384 <= accu_3_3_reg_329;
    end else if (((tmp_36_reg_1697 == 2'd3) & (1'b1 == ap_CS_fsm_state8))) begin
        accu_3_3_be_reg_384 <= reg_1070;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        accu_3_3_reg_329 <= accu_3_3_be_reg_384;
    end else if (((exitcond7_fu_1235_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        accu_3_3_reg_329 <= accu_3_2_reg_278;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_38_reg_1719 == 2'd0) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_38_reg_1719 == 2'd1) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_38_reg_1719 == 2'd2) & (1'b1 == ap_CS_fsm_state13)))) begin
        accu_3_5_be_reg_528 <= accu_3_5_reg_456;
    end else if (((tmp_38_reg_1719 == 2'd3) & (1'b1 == ap_CS_fsm_state13))) begin
        accu_3_5_be_reg_528 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        accu_3_5_reg_456 <= accu_3_5_be_reg_528;
    end else if (((exitcond6_fu_1268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        accu_3_5_reg_456 <= accu_3_3_reg_329;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_1339_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        accu_3_7_reg_644 <= accu_3_2_reg_278;
    end else if (((exitcond_fu_1563_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        accu_3_7_reg_644 <= accu_3_s_reg_886;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1484_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        accu_3_8_reg_699 <= accu_3_9_reg_755;
    end else if (((exitcond2_fu_1427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        accu_3_8_reg_699 <= accu_3_7_reg_644;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_40_reg_1852 == 2'd0) & (1'b1 == ap_CS_fsm_state48)) | ((tmp_40_reg_1852 == 2'd1) & (1'b1 == ap_CS_fsm_state48)) | ((tmp_40_reg_1852 == 2'd2) & (1'b1 == ap_CS_fsm_state48)))) begin
        accu_3_9_be_reg_814 <= accu_3_9_reg_755;
    end else if (((tmp_40_reg_1852 == 2'd3) & (1'b1 == ap_CS_fsm_state48))) begin
        accu_3_9_be_reg_814 <= grp_fu_1038_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        accu_3_9_reg_755 <= accu_3_9_be_reg_814;
    end else if (((tmp_20_fu_1474_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        accu_3_9_reg_755 <= accu_3_8_reg_699;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_39_reg_1890 == 2'd0) & (1'b1 == ap_CS_fsm_state53)) | ((tmp_39_reg_1890 == 2'd1) & (1'b1 == ap_CS_fsm_state53)) | ((tmp_39_reg_1890 == 2'd2) & (1'b1 == ap_CS_fsm_state53)))) begin
        accu_3_be_reg_958 <= accu_3_s_reg_886;
    end else if (((tmp_39_reg_1890 == 2'd3) & (1'b1 == ap_CS_fsm_state53))) begin
        accu_3_be_reg_958 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        accu_3_s_reg_886 <= accu_3_be_reg_958;
    end else if (((tmp_20_fu_1474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        accu_3_s_reg_886 <= accu_3_8_reg_699;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        accu_value_1_reg_504 <= reg_1079;
    end else if (((exitcond6_fu_1268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        accu_value_1_reg_504 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        accu_value_3_reg_934 <= reg_1089;
    end else if (((tmp_20_fu_1474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        accu_value_3_reg_934 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        col2_reg_633 <= col_2_reg_1754;
    end else if (((exitcond4_fu_1339_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        col2_reg_633 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1484_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        col4_reg_743 <= col_3_fu_1529_p2;
    end else if (((exitcond2_fu_1427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        col4_reg_743 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        col_reg_373 <= col_1_reg_1687;
    end else if (((exitcond7_fu_1235_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        col_reg_373 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        col_s_reg_803 <= col_s_1_reg_1837;
    end else if (((tmp_20_fu_1474_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        col_s_reg_803 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        i5_reg_947 <= i_2_reg_1885;
    end else if (((tmp_20_fu_1474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        i5_reg_947 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_reg_517 <= i_1_reg_1714;
    end else if (((exitcond6_fu_1268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_reg_517 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_1209_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        invdar_reg_267 <= indvarinc_fu_1113_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        invdar_reg_267 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_1235_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        row1_reg_608 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        row1_reg_608 <= row_2_reg_1736;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_1339_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        row3_reg_688 <= 4'd0;
    end else if (((exitcond_fu_1563_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        row3_reg_688 <= row_3_reg_1816;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_1209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        row_reg_318 <= 4'd0;
    end else if (((exitcond5_fu_1304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        row_reg_318 <= row_1_reg_1669;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        storemerge_reg_620 <= grp_fu_1038_p2;
    end else if (((exitcond4_fu_1339_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        storemerge_reg_620 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        R_Hat_a_load_reg_1706 <= R_Hat_a_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        Y_Hat_a_load_reg_1798 <= Y_Hat_a_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        accu_0_fu_108 <= accu_0_1_fu_1201_p3;
        accu_1_fu_112 <= accu_1_1_fu_1193_p3;
        accu_2_fu_116 <= accu_2_1_fu_1177_p3;
        accu_3_fu_120 <= accu_3_1_fu_1153_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        col_1_reg_1687 <= col_1_fu_1274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        col_2_reg_1754 <= col_2_fu_1362_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        col_s_1_reg_1837 <= col_s_1_fu_1490_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_1_reg_1714 <= i_1_fu_1310_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        i_2_reg_1885 <= i_2_fu_1569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_1070 <= grp_fu_1047_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_1079 <= grp_fu_1038_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state26))) begin
        reg_1089 <= grp_fu_1038_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state27))) begin
        reg_1095 <= grp_fu_1054_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        row1_cast_reg_1728[3 : 0] <= row1_cast_fu_1335_p1[3 : 0];
        row_2_reg_1736 <= row_2_fu_1345_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        row_1_reg_1669 <= row_1_fu_1241_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        row_3_reg_1816 <= row_3_fu_1433_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_1235_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        temp_addr_reg_1674 <= tmp_2_fu_1247_p1;
        tmp_3_reg_1679[4 : 2] <= tmp_3_fu_1256_p3[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_1339_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        theta_kk_addr_reg_1746 <= tmp_4_fu_1351_p1;
        tmp_4_reg_1741[3 : 0] <= tmp_4_fu_1351_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        theta_kk_load_reg_1867 <= theta_kk_q0;
        tmp_29_neg_reg_1862 <= tmp_29_neg_fu_1539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_1427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        tmp_10_reg_1826[8 : 2] <= tmp_10_fu_1468_p2[8 : 2];
        unconstrained_addr_reg_1821 <= tmp_9_fu_1439_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1356_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        tmp_11_reg_1774 <= tmp_11_fu_1413_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        tmp_13_reg_1759 <= tmp_13_fu_1402_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        tmp_23_reg_1803 <= grp_fu_1065_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_25_reg_1808 <= tmp_25_fu_1051_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_1268_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_36_reg_1697 <= tmp_36_fu_1290_p1;
        tmp_8_reg_1701 <= tmp_8_fu_1294_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_1304_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        tmp_38_reg_1719 <= tmp_38_fu_1316_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1563_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
        tmp_39_reg_1890 <= tmp_39_fu_1575_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state41))) begin
        tmp_40_reg_1852 <= tmp_40_fu_1525_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        R_Hat_a_ce0 = 1'b1;
    end else begin
        R_Hat_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        U_KK_a_ce0 = 1'b1;
    end else begin
        U_KK_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        V_Mul_H_Inv_a_ce0 = 1'b1;
    end else begin
        V_Mul_H_Inv_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        Y_Hat_a_ce0 = 1'b1;
    end else begin
        Y_Hat_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        Y_Ref_KK_a_ce0 = 1'b1;
    end else begin
        Y_Ref_KK_a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond2_fu_1427_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_fu_1427_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_1038_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state45) | ((exitcond_fu_1563_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50)) | ((exitcond5_fu_1304_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_1038_opcode = 2'd0;
    end else begin
        grp_fu_1038_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_1038_p0 = accu_value_3_reg_934;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_1038_p0 = tmp_34_fu_1549_p6;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_1038_p0 = storemerge_reg_620;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_1038_p0 = temp_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_1038_p0 = accu_value_1_reg_504;
    end else begin
        grp_fu_1038_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_1038_p1 = tmp_33_fu_1579_p6;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_1038_p1 = reg_1070;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_1038_p1 = Y_Ref_KK_a_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_1038_p1 = tmp_19_fu_1320_p6;
    end else begin
        grp_fu_1038_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_1047_p0 = theta_kk_load_reg_1867;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_1047_p0 = Y_Hat_a_load_reg_1798;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_1047_p0 = R_Hat_a_load_reg_1706;
    end else begin
        grp_fu_1047_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_1047_p1 = tmp_29_fu_1545_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_1047_p1 = reg_1079;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_1047_p1 = tmp_8_reg_1701;
    end else begin
        grp_fu_1047_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_1054_p0 = storemerge_reg_620;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_1054_p0 = U_KK_a_q0;
    end else begin
        grp_fu_1054_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        temp_address0 = tmp_15_fu_1407_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_address0 = temp_addr_reg_1674;
    end else begin
        temp_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state10))) begin
        temp_ce0 = 1'b1;
    end else begin
        temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5_fu_1304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        temp_we0 = 1'b1;
    end else begin
        temp_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        theta_kk_address0 = tmp_31_fu_1520_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state16))) begin
        theta_kk_address0 = theta_kk_addr_reg_1746;
    end else begin
        theta_kk_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state16))) begin
        theta_kk_ce0 = 1'b1;
    end else begin
        theta_kk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        theta_kk_d0 = tmp_25_reg_1808;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        theta_kk_d0 = storemerge_reg_620;
    end else begin
        theta_kk_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((tmp_11_reg_1774 == 1'd1) & (1'b1 == ap_CS_fsm_state38)))) begin
        theta_kk_we0 = 1'b1;
    end else begin
        theta_kk_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        unconstrained_r_ce0 = 1'b1;
    end else begin
        unconstrained_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_1563_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        unconstrained_r_we0 = 1'b1;
    end else begin
        unconstrained_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_1_fu_1209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond7_fu_1235_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond6_fu_1268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state10 : begin
            if (((exitcond5_fu_1304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state15 : begin
            if (((exitcond4_fu_1339_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((exitcond3_fu_1356_p2 == 1'd1) & (tmp_11_fu_1413_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else if (((tmp_11_fu_1413_p2 == 1'd1) & (exitcond3_fu_1356_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state39 : begin
            if (((exitcond2_fu_1427_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((tmp_20_fu_1474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((exitcond1_fu_1484_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state50 : begin
            if (((exitcond_fu_1563_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign R_Hat_a_address0 = tmp_6_fu_1285_p1;

assign U_KK_a_address0 = tmp_4_reg_1741;

assign V_Mul_H_Inv_a_address0 = tmp_28_fu_1515_p1;

assign Y_Hat_a_address0 = tmp_14_fu_1422_p1;

assign Y_Ref_KK_a_address0 = tmp_15_fu_1407_p1;

assign accu_0_1_fu_1201_p3 = ((sel_tmp6_fu_1147_p2[0:0] === 1'b1) ? 32'd0 : accu_0_fu_108);

assign accu_1_1_fu_1193_p3 = ((sel_tmp6_fu_1147_p2[0:0] === 1'b1) ? accu_1_fu_112 : sel_tmp2_fu_1185_p3);

assign accu_2_1_fu_1177_p3 = ((sel_tmp6_fu_1147_p2[0:0] === 1'b1) ? accu_2_fu_116 : sel_tmp1_fu_1169_p3);

assign accu_3_1_fu_1153_p3 = ((sel_tmp6_fu_1147_p2[0:0] === 1'b1) ? accu_3_fu_120 : sel_tmp5_fu_1139_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign col_1_fu_1274_p2 = (col_reg_373 + 3'd1);

assign col_2_fu_1362_p2 = (col2_reg_633 + 4'd1);

assign col_3_fu_1529_p2 = (col4_reg_743 + 4'd4);

assign col_cast_fu_1264_p1 = col_reg_373;

assign col_s_1_fu_1490_p2 = (col_s_reg_803 + 3'd1);

assign col_s_cast_fu_1480_p1 = col_s_reg_803;

assign exitcond1_fu_1484_p2 = ((col_s_reg_803 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond2_fu_1427_p2 = ((row3_reg_688 == 4'd12) ? 1'b1 : 1'b0);

assign exitcond3_fu_1356_p2 = ((col2_reg_633 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond4_fu_1339_p2 = ((row1_reg_608 == 4'd12) ? 1'b1 : 1'b0);

assign exitcond5_fu_1304_p2 = ((i_reg_517 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond6_fu_1268_p2 = ((col_reg_373 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond7_fu_1235_p2 = ((row_reg_318 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond_fu_1563_p2 = ((i5_reg_947 == 3'd4) ? 1'b1 : 1'b0);

assign i_1_fu_1310_p2 = (i_reg_517 + 3'd1);

assign i_2_fu_1569_p2 = (i5_reg_947 + 3'd1);

assign indvarinc_fu_1113_p2 = (invdar_reg_267 + 2'd1);

assign p_shl1_cast_fu_1452_p1 = p_shl1_fu_1444_p3;

assign p_shl1_fu_1444_p3 = {{row3_reg_688}, {4'd0}};

assign p_shl2_cast_fu_1464_p1 = p_shl2_fu_1456_p3;

assign p_shl2_fu_1456_p3 = {{row3_reg_688}, {2'd0}};

assign p_shl3_cast_fu_1392_p1 = p_shl3_fu_1384_p3;

assign p_shl3_fu_1384_p3 = {{tmp_37_fu_1368_p1}, {2'd0}};

assign p_shl_cast_fu_1380_p1 = p_shl_fu_1372_p3;

assign p_shl_fu_1372_p3 = {{tmp_37_fu_1368_p1}, {4'd0}};

assign row1_cast_fu_1335_p1 = row1_reg_608;

assign row_1_fu_1241_p2 = (row_reg_318 + 4'd1);

assign row_2_fu_1345_p2 = (row1_reg_608 + 4'd1);

assign row_3_fu_1433_p2 = (row3_reg_688 + 4'd1);

assign sel_tmp1_fu_1169_p3 = ((sel_tmp4_fu_1133_p2[0:0] === 1'b1) ? accu_2_fu_116 : sel_tmp9_fu_1161_p3);

assign sel_tmp2_fu_1185_p3 = ((sel_tmp4_fu_1133_p2[0:0] === 1'b1) ? 32'd0 : accu_1_fu_112);

assign sel_tmp3_fu_1125_p3 = ((sel_tmp_fu_1119_p2[0:0] === 1'b1) ? accu_3_fu_120 : 32'd0);

assign sel_tmp4_fu_1133_p2 = ((invdar_reg_267 == 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp5_fu_1139_p3 = ((sel_tmp4_fu_1133_p2[0:0] === 1'b1) ? accu_3_fu_120 : sel_tmp3_fu_1125_p3);

assign sel_tmp6_fu_1147_p2 = ((invdar_reg_267 == 2'd0) ? 1'b1 : 1'b0);

assign sel_tmp9_fu_1161_p3 = ((sel_tmp_fu_1119_p2[0:0] === 1'b1) ? 32'd0 : accu_2_fu_116);

assign sel_tmp_fu_1119_p2 = ((invdar_reg_267 == 2'd2) ? 1'b1 : 1'b0);

assign tmp4_cast_fu_1502_p1 = tmp4_fu_1496_p2;

assign tmp4_fu_1496_p2 = (col4_reg_743 + col_s_cast_fu_1480_p1);

assign tmp_10_fu_1468_p2 = (p_shl1_cast_fu_1452_p1 - p_shl2_cast_fu_1464_p1);

assign tmp_11_fu_1413_p2 = ((row1_reg_608 < 4'd3) ? 1'b1 : 1'b0);

assign tmp_12_fu_1396_p2 = (p_shl_cast_fu_1380_p1 - p_shl3_cast_fu_1392_p1);

assign tmp_13_cast_fu_1419_p1 = $signed(tmp_13_reg_1759);

assign tmp_13_fu_1402_p2 = (tmp_12_fu_1396_p2 + row1_cast_reg_1728);

assign tmp_14_fu_1422_p1 = $unsigned(tmp_13_cast_fu_1419_p1);

assign tmp_15_fu_1407_p1 = col2_reg_633;

assign tmp_19_fu_1320_p5 = i_reg_517[1:0];

assign tmp_1_fu_1209_p2 = ((invdar_reg_267 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_20_fu_1474_p2 = ((col4_reg_743 == 4'd12) ? 1'b1 : 1'b0);

assign tmp_27_cast_fu_1511_p1 = $signed(tmp_27_fu_1506_p2);

assign tmp_27_fu_1506_p2 = (tmp4_cast_fu_1502_p1 + tmp_10_reg_1826);

assign tmp_28_fu_1515_p1 = $unsigned(tmp_27_cast_fu_1511_p1);

assign tmp_29_fu_1545_p1 = tmp_29_neg_reg_1862;

assign tmp_29_neg_fu_1539_p2 = (tmp_29_to_int_fu_1535_p1 ^ 32'd2147483648);

assign tmp_29_to_int_fu_1535_p1 = V_Mul_H_Inv_a_q0;

assign tmp_2_fu_1247_p1 = row_reg_318;

assign tmp_30_fu_1252_p1 = row_reg_318[2:0];

assign tmp_31_fu_1520_p1 = tmp4_fu_1496_p2;

assign tmp_33_fu_1579_p5 = i5_reg_947[1:0];

assign tmp_36_fu_1290_p1 = col_reg_373[1:0];

assign tmp_37_fu_1368_p1 = col2_reg_633[2:0];

assign tmp_38_fu_1316_p1 = i_reg_517[1:0];

assign tmp_39_fu_1575_p1 = i5_reg_947[1:0];

assign tmp_3_fu_1256_p3 = {{tmp_30_fu_1252_p1}, {2'd0}};

assign tmp_40_fu_1525_p1 = col_s_reg_803[1:0];

assign tmp_4_fu_1351_p1 = row1_reg_608;

assign tmp_5_fu_1280_p2 = (tmp_3_reg_1679 + col_cast_fu_1264_p1);

assign tmp_6_fu_1285_p1 = tmp_5_fu_1280_p2;

assign tmp_8_fu_1294_p5 = col_reg_373[1:0];

assign tmp_9_fu_1439_p1 = row3_reg_688;

assign unconstrained_r_address0 = unconstrained_addr_reg_1821;

assign unconstrained_r_d0 = accu_value_3_reg_934;

always @ (posedge ap_clk) begin
    tmp_3_reg_1679[1:0] <= 2'b00;
    row1_cast_reg_1728[7:4] <= 4'b0000;
    tmp_4_reg_1741[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_10_reg_1826[1:0] <= 2'b00;
end

endmodule //unconstrained
