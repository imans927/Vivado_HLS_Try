

================================================================
== Vivado HLS Report for 'predictive_controller'
================================================================
* Date:           Thu Jun 20 17:35:49 2019

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        pred_ctrl_sep_array_sep_burst_V02
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  10523|  12370|  10523|  12370|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                        |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name       | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- x_kk_cpy              |    4|    4|         2|          1|          1|     4|    yes   |
        |- y_ref_kk_cpy          |    9|    9|         3|          1|          1|     8|    yes   |
        |- u_kk_cpy              |   13|   13|         3|          1|          1|    12|    yes   |
        |- y_hat_cpy             |   97|   97|         3|          1|          1|    96|    yes   |
        |- r_hat_cpy             |   33|   33|         3|          1|          1|    32|    yes   |
        |- VHinv_cpy             |  145|  145|         3|          1|          1|   144|    yes   |
        |- Vgen_cpy              |  145|  145|         3|          1|          1|   144|    yes   |
        |- Hhat_inv_cpy          |  145|  145|         3|          1|          1|   144|    yes   |
        |- U_Unc_kk_copy         |   24|   24|         2|          -|          -|    12|    no    |
        |- V_gen_copy            |  288|  288|         2|          -|          -|   144|    no    |
        |- memcpy.out.U_opt.gep  |   13|   13|         3|          1|          1|    12|    yes   |
        +------------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 3
  * Pipeline-2: initiation interval (II) = 1, depth = 3
  * Pipeline-3: initiation interval (II) = 1, depth = 3
  * Pipeline-4: initiation interval (II) = 1, depth = 3
  * Pipeline-5: initiation interval (II) = 1, depth = 3
  * Pipeline-6: initiation interval (II) = 1, depth = 3
  * Pipeline-7: initiation interval (II) = 1, depth = 3
  * Pipeline-8: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 97
* Pipeline : 9
  Pipeline-0 : II = 1, D = 2, States = { 9 10 }
  Pipeline-1 : II = 1, D = 3, States = { 18 19 20 }
  Pipeline-2 : II = 1, D = 3, States = { 28 29 30 }
  Pipeline-3 : II = 1, D = 3, States = { 38 39 40 }
  Pipeline-4 : II = 1, D = 3, States = { 48 49 50 }
  Pipeline-5 : II = 1, D = 3, States = { 58 59 60 }
  Pipeline-6 : II = 1, D = 3, States = { 68 69 70 }
  Pipeline-7 : II = 1, D = 3, States = { 78 79 80 }
  Pipeline-8 : II = 1, D = 3, States = { 90 91 92 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	11  / (exitcond9)
	10  / (!exitcond9)
10 --> 
	9  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	21  / (exitcond8)
	19  / (!exitcond8)
19 --> 
	20  / true
20 --> 
	18  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	31  / (exitcond7)
	29  / (!exitcond7)
29 --> 
	30  / true
30 --> 
	28  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	41  / (exitcond6)
	39  / (!exitcond6)
39 --> 
	40  / true
40 --> 
	38  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	51  / (exitcond5)
	49  / (!exitcond5)
49 --> 
	50  / true
50 --> 
	48  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	61  / (exitcond4)
	59  / (!exitcond4)
59 --> 
	60  / true
60 --> 
	58  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	71  / (exitcond3)
	69  / (!exitcond3)
69 --> 
	70  / true
70 --> 
	68  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	81  / (exitcond2)
	79  / (!exitcond2)
79 --> 
	80  / true
80 --> 
	78  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / (!exitcond1)
	85  / (exitcond1)
84 --> 
	83  / true
85 --> 
	86  / (!exitcond)
	87  / (exitcond)
86 --> 
	85  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	93  / (exitcond10)
	91  / (!exitcond10)
91 --> 
	92  / true
92 --> 
	90  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 98 [1/1] (0.00ns)   --->   "%X_KK_a_3 = alloca float"   --->   Operation 98 'alloca' 'X_KK_a_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (0.00ns)   --->   "%X_KK_a_3_1 = alloca float"   --->   Operation 99 'alloca' 'X_KK_a_3_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 100 [1/1] (0.00ns)   --->   "%X_KK_a_3_2 = alloca float"   --->   Operation 100 'alloca' 'X_KK_a_3_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%X_KK_a_3_3 = alloca float"   --->   Operation 101 'alloca' 'X_KK_a_3_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (1.00ns)   --->   "%out_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %out_r)"   --->   Operation 102 'read' 'out_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 103 [1/1] (1.00ns)   --->   "%H_HAT_INV_src_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %H_HAT_INV_src)"   --->   Operation 103 'read' 'H_HAT_INV_src_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 104 [1/1] (1.00ns)   --->   "%V_GEN_src_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %V_GEN_src)"   --->   Operation 104 'read' 'V_GEN_src_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 105 [1/1] (1.00ns)   --->   "%V_MUL_H_INV_src_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %V_MUL_H_INV_src)"   --->   Operation 105 'read' 'V_MUL_H_INV_src_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 106 [1/1] (1.00ns)   --->   "%R_HAT_src_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %R_HAT_src)"   --->   Operation 106 'read' 'R_HAT_src_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 107 [1/1] (1.00ns)   --->   "%Y_HAT_src_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %Y_HAT_src)"   --->   Operation 107 'read' 'Y_HAT_src_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 108 [1/1] (1.00ns)   --->   "%U_KK_src_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %U_KK_src)"   --->   Operation 108 'read' 'U_KK_src_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 109 [1/1] (1.00ns)   --->   "%Y_REF_KK_src_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %Y_REF_KK_src)"   --->   Operation 109 'read' 'Y_REF_KK_src_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 110 [1/1] (1.00ns)   --->   "%X_KK_src_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %X_KK_src)"   --->   Operation 110 'read' 'X_KK_src_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 111 [1/1] (0.00ns)   --->   "%out1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %out_read, i32 2, i32 31)"   --->   Operation 111 'partselect' 'out1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 112 [1/1] (0.00ns)   --->   "%H_HAT_INV_src1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %H_HAT_INV_src_read, i32 2, i32 31)"   --->   Operation 112 'partselect' 'H_HAT_INV_src1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 113 [1/1] (0.00ns)   --->   "%V_GEN_src1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %V_GEN_src_read, i32 2, i32 31)"   --->   Operation 113 'partselect' 'V_GEN_src1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 114 [1/1] (0.00ns)   --->   "%V_MUL_H_INV_src1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %V_MUL_H_INV_src_read, i32 2, i32 31)"   --->   Operation 114 'partselect' 'V_MUL_H_INV_src1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 115 [1/1] (0.00ns)   --->   "%R_HAT_src9 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %R_HAT_src_read, i32 2, i32 31)"   --->   Operation 115 'partselect' 'R_HAT_src9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 116 [1/1] (0.00ns)   --->   "%Y_HAT_src7 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %Y_HAT_src_read, i32 2, i32 31)"   --->   Operation 116 'partselect' 'Y_HAT_src7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 117 [1/1] (0.00ns)   --->   "%U_KK_src5 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %U_KK_src_read, i32 2, i32 31)"   --->   Operation 117 'partselect' 'U_KK_src5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 118 [1/1] (0.00ns)   --->   "%Y_REF_KK_src3 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %Y_REF_KK_src_read, i32 2, i32 31)"   --->   Operation 118 'partselect' 'Y_REF_KK_src3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 119 [1/1] (0.00ns)   --->   "%X_KK_src1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %X_KK_src_read, i32 2, i32 31)"   --->   Operation 119 'partselect' 'X_KK_src1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 120 [1/1] (0.00ns)   --->   "%Y_Ref_KK_a = alloca [8 x float], align 16" [pred_controller.cpp:34]   --->   Operation 120 'alloca' 'Y_Ref_KK_a' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_1 : Operation 121 [1/1] (0.00ns)   --->   "%U_KK_a = alloca [12 x float], align 16" [pred_controller.cpp:35]   --->   Operation 121 'alloca' 'U_KK_a' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_1 : Operation 122 [1/1] (0.00ns)   --->   "%Y_Hat_a = alloca [96 x float], align 16" [pred_controller.cpp:36]   --->   Operation 122 'alloca' 'Y_Hat_a' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_1 : Operation 123 [1/1] (0.00ns)   --->   "%R_Hat_a = alloca [32 x float], align 16" [pred_controller.cpp:37]   --->   Operation 123 'alloca' 'R_Hat_a' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_1 : Operation 124 [1/1] (0.00ns)   --->   "%V_Mul_H_Inv_a = alloca [144 x float], align 16" [pred_controller.cpp:38]   --->   Operation 124 'alloca' 'V_Mul_H_Inv_a' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_1 : Operation 125 [1/1] (0.00ns)   --->   "%V_Gen_a = alloca [144 x float], align 16" [pred_controller.cpp:39]   --->   Operation 125 'alloca' 'V_Gen_a' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_1 : Operation 126 [1/1] (0.00ns)   --->   "%V_Gen_a_cpy = alloca [144 x float], align 16" [pred_controller.cpp:40]   --->   Operation 126 'alloca' 'V_Gen_a_cpy' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_1 : Operation 127 [1/1] (0.00ns)   --->   "%H_Hat_Inv_a = alloca [144 x float], align 16" [pred_controller.cpp:41]   --->   Operation 127 'alloca' 'H_Hat_Inv_a' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_1 : Operation 128 [1/1] (0.00ns)   --->   "%U_unc_kk = alloca [12 x float], align 16" [pred_controller.cpp:45]   --->   Operation 128 'alloca' 'U_unc_kk' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_1 : Operation 129 [1/1] (0.00ns)   --->   "%U_unc_kk_cpy = alloca [12 x float], align 16" [pred_controller.cpp:46]   --->   Operation 129 'alloca' 'U_unc_kk_cpy' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_1 : Operation 130 [1/1] (0.00ns)   --->   "%theta_kk = alloca [12 x float], align 16" [pred_controller.cpp:49]   --->   Operation 130 'alloca' 'theta_kk' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 131 [1/1] (0.00ns)   --->   "%U_opt = alloca [12 x float], align 16"   --->   Operation 131 'alloca' 'U_opt' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 132 [1/1] (0.00ns)   --->   "%tmp_87 = zext i30 %X_KK_src1 to i64"   --->   Operation 132 'zext' 'tmp_87' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 133 [1/1] (0.00ns)   --->   "%data_addr_8 = getelementptr float* %data, i64 %tmp_87"   --->   Operation 133 'getelementptr' 'data_addr_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 134 [7/7] (8.75ns)   --->   "%data_addr_8_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_8, i32 4)" [pred_controller.cpp:72]   --->   Operation 134 'readreq' 'data_addr_8_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 135 [6/7] (8.75ns)   --->   "%data_addr_8_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_8, i32 4)" [pred_controller.cpp:72]   --->   Operation 135 'readreq' 'data_addr_8_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 136 [5/7] (8.75ns)   --->   "%data_addr_8_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_8, i32 4)" [pred_controller.cpp:72]   --->   Operation 136 'readreq' 'data_addr_8_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 137 [4/7] (8.75ns)   --->   "%data_addr_8_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_8, i32 4)" [pred_controller.cpp:72]   --->   Operation 137 'readreq' 'data_addr_8_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 138 [3/7] (8.75ns)   --->   "%data_addr_8_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_8, i32 4)" [pred_controller.cpp:72]   --->   Operation 138 'readreq' 'data_addr_8_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 139 [2/7] (8.75ns)   --->   "%data_addr_8_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_8, i32 4)" [pred_controller.cpp:72]   --->   Operation 139 'readreq' 'data_addr_8_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 140 [1/1] (0.00ns)   --->   "%tmp_79 = zext i30 %out1 to i64"   --->   Operation 140 'zext' 'tmp_79' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 141 [1/1] (0.00ns)   --->   "%data_addr = getelementptr float* %data, i64 %tmp_79"   --->   Operation 141 'getelementptr' 'data_addr' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 142 [1/1] (0.00ns)   --->   "%tmp_80 = zext i30 %H_HAT_INV_src1 to i64"   --->   Operation 142 'zext' 'tmp_80' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 143 [1/1] (0.00ns)   --->   "%data_addr_1 = getelementptr float* %data, i64 %tmp_80"   --->   Operation 143 'getelementptr' 'data_addr_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 144 [1/1] (0.00ns)   --->   "%tmp_81 = zext i30 %V_GEN_src1 to i64"   --->   Operation 144 'zext' 'tmp_81' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 145 [1/1] (0.00ns)   --->   "%data_addr_2 = getelementptr float* %data, i64 %tmp_81"   --->   Operation 145 'getelementptr' 'data_addr_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 146 [1/1] (0.00ns)   --->   "%tmp_82 = zext i30 %V_MUL_H_INV_src1 to i64"   --->   Operation 146 'zext' 'tmp_82' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 147 [1/1] (0.00ns)   --->   "%data_addr_3 = getelementptr float* %data, i64 %tmp_82"   --->   Operation 147 'getelementptr' 'data_addr_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 148 [1/1] (0.00ns)   --->   "%tmp_83 = zext i30 %R_HAT_src9 to i64"   --->   Operation 148 'zext' 'tmp_83' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 149 [1/1] (0.00ns)   --->   "%data_addr_4 = getelementptr float* %data, i64 %tmp_83"   --->   Operation 149 'getelementptr' 'data_addr_4' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 150 [1/1] (0.00ns)   --->   "%tmp_84 = zext i30 %Y_HAT_src7 to i64"   --->   Operation 150 'zext' 'tmp_84' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 151 [1/1] (0.00ns)   --->   "%data_addr_5 = getelementptr float* %data, i64 %tmp_84"   --->   Operation 151 'getelementptr' 'data_addr_5' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 152 [1/1] (0.00ns)   --->   "%tmp_85 = zext i30 %U_KK_src5 to i64"   --->   Operation 152 'zext' 'tmp_85' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 153 [1/1] (0.00ns)   --->   "%data_addr_6 = getelementptr float* %data, i64 %tmp_85"   --->   Operation 153 'getelementptr' 'data_addr_6' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 154 [1/1] (0.00ns)   --->   "%tmp_86 = zext i30 %Y_REF_KK_src3 to i64"   --->   Operation 154 'zext' 'tmp_86' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 155 [1/1] (0.00ns)   --->   "%data_addr_7 = getelementptr float* %data, i64 %tmp_86"   --->   Operation 155 'getelementptr' 'data_addr_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 156 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %data), !map !39"   --->   Operation 156 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 157 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([22 x i8]* @predictive_controlle) nounwind"   --->   Operation 157 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 158 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %out_r, [10 x i8]* @mode15, i32 0, i32 0, [1 x i8]* @p_str116, i32 0, i32 12, [1 x i8]* @bundle16, [6 x i8]* @p_str318, [1 x i8]* @p_str116, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str116, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:18]   --->   Operation 158 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 159 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %H_HAT_INV_src, [10 x i8]* @mode13, i32 0, i32 0, [1 x i8]* @p_str116, i32 0, i32 144, [1 x i8]* @bundle14, [6 x i8]* @p_str318, [1 x i8]* @p_str116, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str116, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:19]   --->   Operation 159 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 160 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %V_GEN_src, [10 x i8]* @mode11, i32 0, i32 0, [1 x i8]* @p_str116, i32 0, i32 144, [1 x i8]* @bundle12, [6 x i8]* @p_str318, [1 x i8]* @p_str116, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str116, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:20]   --->   Operation 160 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 161 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %V_MUL_H_INV_src, [10 x i8]* @mode9, i32 0, i32 0, [1 x i8]* @p_str116, i32 0, i32 144, [1 x i8]* @bundle10, [6 x i8]* @p_str318, [1 x i8]* @p_str116, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str116, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:21]   --->   Operation 161 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 162 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %R_HAT_src, [10 x i8]* @mode7, i32 0, i32 0, [1 x i8]* @p_str116, i32 0, i32 32, [1 x i8]* @bundle8, [6 x i8]* @p_str318, [1 x i8]* @p_str116, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str116, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:22]   --->   Operation 162 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 163 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %Y_HAT_src, [10 x i8]* @mode5, i32 0, i32 0, [1 x i8]* @p_str116, i32 0, i32 96, [1 x i8]* @bundle6, [6 x i8]* @p_str318, [1 x i8]* @p_str116, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str116, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:23]   --->   Operation 163 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 164 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %U_KK_src, [10 x i8]* @mode3, i32 0, i32 0, [1 x i8]* @p_str116, i32 0, i32 12, [1 x i8]* @bundle4, [6 x i8]* @p_str318, [1 x i8]* @p_str116, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str116, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:24]   --->   Operation 164 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 165 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %Y_REF_KK_src, [10 x i8]* @mode1, i32 0, i32 0, [1 x i8]* @p_str116, i32 0, i32 8, [1 x i8]* @bundle2, [6 x i8]* @p_str318, [1 x i8]* @p_str116, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str116, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:25]   --->   Operation 165 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 166 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %data, [6 x i8]* @p_str15, i32 0, i32 0, [1 x i8]* @p_str116, i32 0, i32 144, [5 x i8]* @p_str217, [6 x i8]* @p_str318, [1 x i8]* @p_str116, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str116, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:26]   --->   Operation 166 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 167 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %X_KK_src, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str116, i32 0, i32 4, [1 x i8]* @bundle, [6 x i8]* @p_str318, [1 x i8]* @p_str116, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str116, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:26]   --->   Operation 167 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 168 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str419, i32 0, i32 0, [1 x i8]* @p_str116, i32 0, i32 0, [9 x i8]* @p_str520, [1 x i8]* @p_str116, [1 x i8]* @p_str116, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str116, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:28]   --->   Operation 168 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 169 [1/7] (8.75ns)   --->   "%data_addr_8_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_8, i32 4)" [pred_controller.cpp:72]   --->   Operation 169 'readreq' 'data_addr_8_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 170 [1/1] (0.65ns)   --->   "br label %1" [pred_controller.cpp:70]   --->   Operation 170 'br' <Predicate = true> <Delay = 0.65>

State 9 <SV = 8> <Delay = 0.72>
ST_9 : Operation 171 [1/1] (0.00ns)   --->   "%row = phi i3 [ 0, %0 ], [ %row_4, %branch0 ]"   --->   Operation 171 'phi' 'row' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 172 [1/1] (0.58ns)   --->   "%exitcond9 = icmp eq i3 %row, -4" [pred_controller.cpp:70]   --->   Operation 172 'icmp' 'exitcond9' <Predicate = true> <Delay = 0.58> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 173 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) nounwind"   --->   Operation 173 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 174 [1/1] (0.67ns)   --->   "%row_4 = add i3 %row, 1" [pred_controller.cpp:70]   --->   Operation 174 'add' 'row_4' <Predicate = true> <Delay = 0.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 175 [1/1] (0.00ns)   --->   "br i1 %exitcond9, label %.preheader16.preheader, label %2" [pred_controller.cpp:70]   --->   Operation 175 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 176 [1/1] (0.00ns)   --->   "%tmp_69 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str621) nounwind" [pred_controller.cpp:70]   --->   Operation 176 'specregionbegin' 'tmp_69' <Predicate = (!exitcond9)> <Delay = 0.00>
ST_9 : Operation 177 [1/1] (0.00ns)   --->   "%tmp = trunc i3 %row to i2" [pred_controller.cpp:72]   --->   Operation 177 'trunc' 'tmp' <Predicate = (!exitcond9)> <Delay = 0.00>
ST_9 : Operation 178 [1/1] (0.72ns)   --->   "switch i2 %tmp, label %branch3 [
    i2 0, label %.branch0_crit_edge
    i2 1, label %branch1
    i2 -2, label %branch2
  ]" [pred_controller.cpp:72]   --->   Operation 178 'switch' <Predicate = (!exitcond9)> <Delay = 0.72>
ST_9 : Operation 179 [1/1] (0.00ns)   --->   "%empty_26 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str621, i32 %tmp_69) nounwind" [pred_controller.cpp:73]   --->   Operation 179 'specregionend' 'empty_26' <Predicate = (!exitcond9)> <Delay = 0.00>
ST_9 : Operation 180 [1/1] (0.00ns)   --->   "br label %1" [pred_controller.cpp:70]   --->   Operation 180 'br' <Predicate = (!exitcond9)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 181 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str621) nounwind" [pred_controller.cpp:70]   --->   Operation 181 'specloopname' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 182 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:71]   --->   Operation 182 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 183 [1/1] (8.75ns)   --->   "%X_KK_a_0 = call float @_ssdm_op_Read.m_axi.floatP(float* %data_addr_8)" [pred_controller.cpp:72]   --->   Operation 183 'read' 'X_KK_a_0' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 184 [1/1] (0.00ns)   --->   "store float %X_KK_a_0, float* %X_KK_a_3_2" [pred_controller.cpp:72]   --->   Operation 184 'store' <Predicate = (tmp == 2)> <Delay = 0.00>
ST_10 : Operation 185 [1/1] (0.00ns)   --->   "br label %branch0" [pred_controller.cpp:72]   --->   Operation 185 'br' <Predicate = (tmp == 2)> <Delay = 0.00>
ST_10 : Operation 186 [1/1] (0.00ns)   --->   "store float %X_KK_a_0, float* %X_KK_a_3_1" [pred_controller.cpp:72]   --->   Operation 186 'store' <Predicate = (tmp == 1)> <Delay = 0.00>
ST_10 : Operation 187 [1/1] (0.00ns)   --->   "br label %branch0" [pred_controller.cpp:72]   --->   Operation 187 'br' <Predicate = (tmp == 1)> <Delay = 0.00>
ST_10 : Operation 188 [1/1] (0.00ns)   --->   "store float %X_KK_a_0, float* %X_KK_a_3" [pred_controller.cpp:72]   --->   Operation 188 'store' <Predicate = (tmp == 0)> <Delay = 0.00>
ST_10 : Operation 189 [1/1] (0.00ns)   --->   "br label %branch0" [pred_controller.cpp:72]   --->   Operation 189 'br' <Predicate = (tmp == 0)> <Delay = 0.00>
ST_10 : Operation 190 [1/1] (0.00ns)   --->   "store float %X_KK_a_0, float* %X_KK_a_3_3" [pred_controller.cpp:72]   --->   Operation 190 'store' <Predicate = (tmp == 3)> <Delay = 0.00>
ST_10 : Operation 191 [1/1] (0.00ns)   --->   "br label %branch0" [pred_controller.cpp:72]   --->   Operation 191 'br' <Predicate = (tmp == 3)> <Delay = 0.00>

State 11 <SV = 9> <Delay = 8.75>
ST_11 : Operation 192 [7/7] (8.75ns)   --->   "%data_addr_7_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_7, i32 8)" [pred_controller.cpp:79]   --->   Operation 192 'readreq' 'data_addr_7_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 10> <Delay = 8.75>
ST_12 : Operation 193 [6/7] (8.75ns)   --->   "%data_addr_7_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_7, i32 8)" [pred_controller.cpp:79]   --->   Operation 193 'readreq' 'data_addr_7_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 11> <Delay = 8.75>
ST_13 : Operation 194 [5/7] (8.75ns)   --->   "%data_addr_7_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_7, i32 8)" [pred_controller.cpp:79]   --->   Operation 194 'readreq' 'data_addr_7_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 12> <Delay = 8.75>
ST_14 : Operation 195 [4/7] (8.75ns)   --->   "%data_addr_7_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_7, i32 8)" [pred_controller.cpp:79]   --->   Operation 195 'readreq' 'data_addr_7_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 13> <Delay = 8.75>
ST_15 : Operation 196 [3/7] (8.75ns)   --->   "%data_addr_7_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_7, i32 8)" [pred_controller.cpp:79]   --->   Operation 196 'readreq' 'data_addr_7_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 14> <Delay = 8.75>
ST_16 : Operation 197 [2/7] (8.75ns)   --->   "%data_addr_7_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_7, i32 8)" [pred_controller.cpp:79]   --->   Operation 197 'readreq' 'data_addr_7_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 15> <Delay = 8.75>
ST_17 : Operation 198 [1/7] (8.75ns)   --->   "%data_addr_7_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_7, i32 8)" [pred_controller.cpp:79]   --->   Operation 198 'readreq' 'data_addr_7_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 199 [1/1] (0.65ns)   --->   "br label %.preheader16" [pred_controller.cpp:77]   --->   Operation 199 'br' <Predicate = true> <Delay = 0.65>

State 18 <SV = 16> <Delay = 0.79>
ST_18 : Operation 200 [1/1] (0.00ns)   --->   "%row1 = phi i4 [ %row_5, %3 ], [ 0, %.preheader16.preheader ]"   --->   Operation 200 'phi' 'row1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 201 [1/1] (0.72ns)   --->   "%exitcond8 = icmp eq i4 %row1, -8" [pred_controller.cpp:77]   --->   Operation 201 'icmp' 'exitcond8' <Predicate = true> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 202 [1/1] (0.00ns)   --->   "%empty_27 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind"   --->   Operation 202 'speclooptripcount' 'empty_27' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 203 [1/1] (0.79ns)   --->   "%row_5 = add i4 %row1, 1" [pred_controller.cpp:77]   --->   Operation 203 'add' 'row_5' <Predicate = true> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 204 [1/1] (0.00ns)   --->   "br i1 %exitcond8, label %.preheader15.preheader, label %3" [pred_controller.cpp:77]   --->   Operation 204 'br' <Predicate = true> <Delay = 0.00>

State 19 <SV = 17> <Delay = 8.75>
ST_19 : Operation 205 [1/1] (8.75ns)   --->   "%data_addr_7_read = call float @_ssdm_op_Read.m_axi.floatP(float* %data_addr_7)" [pred_controller.cpp:79]   --->   Operation 205 'read' 'data_addr_7_read' <Predicate = (!exitcond8)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 18> <Delay = 0.67>
ST_20 : Operation 206 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str722) nounwind" [pred_controller.cpp:77]   --->   Operation 206 'specloopname' <Predicate = (!exitcond8)> <Delay = 0.00>
ST_20 : Operation 207 [1/1] (0.00ns)   --->   "%tmp_71 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str722) nounwind" [pred_controller.cpp:77]   --->   Operation 207 'specregionbegin' 'tmp_71' <Predicate = (!exitcond8)> <Delay = 0.00>
ST_20 : Operation 208 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:78]   --->   Operation 208 'specpipeline' <Predicate = (!exitcond8)> <Delay = 0.00>
ST_20 : Operation 209 [1/1] (0.00ns)   --->   "%tmp_s = zext i4 %row1 to i64" [pred_controller.cpp:79]   --->   Operation 209 'zext' 'tmp_s' <Predicate = (!exitcond8)> <Delay = 0.00>
ST_20 : Operation 210 [1/1] (0.00ns)   --->   "%Y_Ref_KK_a_addr = getelementptr inbounds [8 x float]* %Y_Ref_KK_a, i64 0, i64 %tmp_s" [pred_controller.cpp:79]   --->   Operation 210 'getelementptr' 'Y_Ref_KK_a_addr' <Predicate = (!exitcond8)> <Delay = 0.00>
ST_20 : Operation 211 [1/1] (0.67ns)   --->   "store float %data_addr_7_read, float* %Y_Ref_KK_a_addr, align 4" [pred_controller.cpp:79]   --->   Operation 211 'store' <Predicate = (!exitcond8)> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_20 : Operation 212 [1/1] (0.00ns)   --->   "%empty_28 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str722, i32 %tmp_71) nounwind" [pred_controller.cpp:80]   --->   Operation 212 'specregionend' 'empty_28' <Predicate = (!exitcond8)> <Delay = 0.00>
ST_20 : Operation 213 [1/1] (0.00ns)   --->   "br label %.preheader16" [pred_controller.cpp:77]   --->   Operation 213 'br' <Predicate = (!exitcond8)> <Delay = 0.00>

State 21 <SV = 17> <Delay = 8.75>
ST_21 : Operation 214 [7/7] (8.75ns)   --->   "%data_addr_6_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_6, i32 12)" [pred_controller.cpp:84]   --->   Operation 214 'readreq' 'data_addr_6_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 18> <Delay = 8.75>
ST_22 : Operation 215 [6/7] (8.75ns)   --->   "%data_addr_6_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_6, i32 12)" [pred_controller.cpp:84]   --->   Operation 215 'readreq' 'data_addr_6_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 19> <Delay = 8.75>
ST_23 : Operation 216 [5/7] (8.75ns)   --->   "%data_addr_6_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_6, i32 12)" [pred_controller.cpp:84]   --->   Operation 216 'readreq' 'data_addr_6_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 20> <Delay = 8.75>
ST_24 : Operation 217 [4/7] (8.75ns)   --->   "%data_addr_6_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_6, i32 12)" [pred_controller.cpp:84]   --->   Operation 217 'readreq' 'data_addr_6_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 21> <Delay = 8.75>
ST_25 : Operation 218 [3/7] (8.75ns)   --->   "%data_addr_6_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_6, i32 12)" [pred_controller.cpp:84]   --->   Operation 218 'readreq' 'data_addr_6_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 22> <Delay = 8.75>
ST_26 : Operation 219 [2/7] (8.75ns)   --->   "%data_addr_6_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_6, i32 12)" [pred_controller.cpp:84]   --->   Operation 219 'readreq' 'data_addr_6_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 23> <Delay = 8.75>
ST_27 : Operation 220 [1/7] (8.75ns)   --->   "%data_addr_6_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_6, i32 12)" [pred_controller.cpp:84]   --->   Operation 220 'readreq' 'data_addr_6_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 221 [1/1] (0.65ns)   --->   "br label %.preheader15" [pred_controller.cpp:82]   --->   Operation 221 'br' <Predicate = true> <Delay = 0.65>

State 28 <SV = 24> <Delay = 0.79>
ST_28 : Operation 222 [1/1] (0.00ns)   --->   "%row2 = phi i4 [ %row_6, %4 ], [ 0, %.preheader15.preheader ]"   --->   Operation 222 'phi' 'row2' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 223 [1/1] (0.72ns)   --->   "%exitcond7 = icmp eq i4 %row2, -4" [pred_controller.cpp:82]   --->   Operation 223 'icmp' 'exitcond7' <Predicate = true> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 224 [1/1] (0.00ns)   --->   "%empty_29 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 12, i64 12, i64 12) nounwind"   --->   Operation 224 'speclooptripcount' 'empty_29' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 225 [1/1] (0.79ns)   --->   "%row_6 = add i4 %row2, 1" [pred_controller.cpp:82]   --->   Operation 225 'add' 'row_6' <Predicate = true> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 226 [1/1] (0.00ns)   --->   "br i1 %exitcond7, label %.preheader14.preheader, label %4" [pred_controller.cpp:82]   --->   Operation 226 'br' <Predicate = true> <Delay = 0.00>

State 29 <SV = 25> <Delay = 8.75>
ST_29 : Operation 227 [1/1] (8.75ns)   --->   "%data_addr_6_read = call float @_ssdm_op_Read.m_axi.floatP(float* %data_addr_6)" [pred_controller.cpp:84]   --->   Operation 227 'read' 'data_addr_6_read' <Predicate = (!exitcond7)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 26> <Delay = 0.67>
ST_30 : Operation 228 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str823) nounwind" [pred_controller.cpp:82]   --->   Operation 228 'specloopname' <Predicate = (!exitcond7)> <Delay = 0.00>
ST_30 : Operation 229 [1/1] (0.00ns)   --->   "%tmp_72 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str823) nounwind" [pred_controller.cpp:82]   --->   Operation 229 'specregionbegin' 'tmp_72' <Predicate = (!exitcond7)> <Delay = 0.00>
ST_30 : Operation 230 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:83]   --->   Operation 230 'specpipeline' <Predicate = (!exitcond7)> <Delay = 0.00>
ST_30 : Operation 231 [1/1] (0.00ns)   --->   "%tmp_62 = zext i4 %row2 to i64" [pred_controller.cpp:84]   --->   Operation 231 'zext' 'tmp_62' <Predicate = (!exitcond7)> <Delay = 0.00>
ST_30 : Operation 232 [1/1] (0.00ns)   --->   "%U_KK_a_addr = getelementptr inbounds [12 x float]* %U_KK_a, i64 0, i64 %tmp_62" [pred_controller.cpp:84]   --->   Operation 232 'getelementptr' 'U_KK_a_addr' <Predicate = (!exitcond7)> <Delay = 0.00>
ST_30 : Operation 233 [1/1] (0.67ns)   --->   "store float %data_addr_6_read, float* %U_KK_a_addr, align 4" [pred_controller.cpp:84]   --->   Operation 233 'store' <Predicate = (!exitcond7)> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_30 : Operation 234 [1/1] (0.00ns)   --->   "%empty_30 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str823, i32 %tmp_72) nounwind" [pred_controller.cpp:85]   --->   Operation 234 'specregionend' 'empty_30' <Predicate = (!exitcond7)> <Delay = 0.00>
ST_30 : Operation 235 [1/1] (0.00ns)   --->   "br label %.preheader15" [pred_controller.cpp:82]   --->   Operation 235 'br' <Predicate = (!exitcond7)> <Delay = 0.00>

State 31 <SV = 25> <Delay = 8.75>
ST_31 : Operation 236 [7/7] (8.75ns)   --->   "%data_addr_5_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_5, i32 96)" [pred_controller.cpp:91]   --->   Operation 236 'readreq' 'data_addr_5_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 26> <Delay = 8.75>
ST_32 : Operation 237 [6/7] (8.75ns)   --->   "%data_addr_5_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_5, i32 96)" [pred_controller.cpp:91]   --->   Operation 237 'readreq' 'data_addr_5_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 27> <Delay = 8.75>
ST_33 : Operation 238 [5/7] (8.75ns)   --->   "%data_addr_5_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_5, i32 96)" [pred_controller.cpp:91]   --->   Operation 238 'readreq' 'data_addr_5_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 28> <Delay = 8.75>
ST_34 : Operation 239 [4/7] (8.75ns)   --->   "%data_addr_5_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_5, i32 96)" [pred_controller.cpp:91]   --->   Operation 239 'readreq' 'data_addr_5_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 29> <Delay = 8.75>
ST_35 : Operation 240 [3/7] (8.75ns)   --->   "%data_addr_5_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_5, i32 96)" [pred_controller.cpp:91]   --->   Operation 240 'readreq' 'data_addr_5_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 30> <Delay = 8.75>
ST_36 : Operation 241 [2/7] (8.75ns)   --->   "%data_addr_5_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_5, i32 96)" [pred_controller.cpp:91]   --->   Operation 241 'readreq' 'data_addr_5_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 31> <Delay = 8.75>
ST_37 : Operation 242 [1/7] (8.75ns)   --->   "%data_addr_5_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_5, i32 96)" [pred_controller.cpp:91]   --->   Operation 242 'readreq' 'data_addr_5_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 243 [1/1] (0.65ns)   --->   "br label %.preheader14" [pred_controller.cpp:87]   --->   Operation 243 'br' <Predicate = true> <Delay = 0.65>

State 38 <SV = 32> <Delay = 0.81>
ST_38 : Operation 244 [1/1] (0.00ns)   --->   "%row3 = phi i7 [ %row_7, %5 ], [ 0, %.preheader14.preheader ]"   --->   Operation 244 'phi' 'row3' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 245 [1/1] (0.81ns)   --->   "%exitcond6 = icmp eq i7 %row3, -32" [pred_controller.cpp:87]   --->   Operation 245 'icmp' 'exitcond6' <Predicate = true> <Delay = 0.81> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 246 [1/1] (0.00ns)   --->   "%empty_31 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 96, i64 96, i64 96) nounwind"   --->   Operation 246 'speclooptripcount' 'empty_31' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 247 [1/1] (0.77ns)   --->   "%row_7 = add i7 %row3, 1" [pred_controller.cpp:87]   --->   Operation 247 'add' 'row_7' <Predicate = true> <Delay = 0.77> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 248 [1/1] (0.00ns)   --->   "br i1 %exitcond6, label %.preheader13.preheader, label %5" [pred_controller.cpp:87]   --->   Operation 248 'br' <Predicate = true> <Delay = 0.00>

State 39 <SV = 33> <Delay = 8.75>
ST_39 : Operation 249 [1/1] (8.75ns)   --->   "%data_addr_5_read = call float @_ssdm_op_Read.m_axi.floatP(float* %data_addr_5)" [pred_controller.cpp:91]   --->   Operation 249 'read' 'data_addr_5_read' <Predicate = (!exitcond6)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 34> <Delay = 1.23>
ST_40 : Operation 250 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str924) nounwind" [pred_controller.cpp:87]   --->   Operation 250 'specloopname' <Predicate = (!exitcond6)> <Delay = 0.00>
ST_40 : Operation 251 [1/1] (0.00ns)   --->   "%tmp_73 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str924) nounwind" [pred_controller.cpp:87]   --->   Operation 251 'specregionbegin' 'tmp_73' <Predicate = (!exitcond6)> <Delay = 0.00>
ST_40 : Operation 252 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:89]   --->   Operation 252 'specpipeline' <Predicate = (!exitcond6)> <Delay = 0.00>
ST_40 : Operation 253 [1/1] (0.00ns)   --->   "%tmp_63 = zext i7 %row3 to i64" [pred_controller.cpp:91]   --->   Operation 253 'zext' 'tmp_63' <Predicate = (!exitcond6)> <Delay = 0.00>
ST_40 : Operation 254 [1/1] (0.00ns)   --->   "%Y_Hat_a_addr = getelementptr inbounds [96 x float]* %Y_Hat_a, i64 0, i64 %tmp_63" [pred_controller.cpp:91]   --->   Operation 254 'getelementptr' 'Y_Hat_a_addr' <Predicate = (!exitcond6)> <Delay = 0.00>
ST_40 : Operation 255 [1/1] (1.23ns)   --->   "store float %data_addr_5_read, float* %Y_Hat_a_addr, align 4" [pred_controller.cpp:91]   --->   Operation 255 'store' <Predicate = (!exitcond6)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_40 : Operation 256 [1/1] (0.00ns)   --->   "%empty_32 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str924, i32 %tmp_73) nounwind" [pred_controller.cpp:92]   --->   Operation 256 'specregionend' 'empty_32' <Predicate = (!exitcond6)> <Delay = 0.00>
ST_40 : Operation 257 [1/1] (0.00ns)   --->   "br label %.preheader14" [pred_controller.cpp:87]   --->   Operation 257 'br' <Predicate = (!exitcond6)> <Delay = 0.00>

State 41 <SV = 33> <Delay = 8.75>
ST_41 : Operation 258 [7/7] (8.75ns)   --->   "%data_addr_4_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_4, i32 32)" [pred_controller.cpp:97]   --->   Operation 258 'readreq' 'data_addr_4_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 34> <Delay = 8.75>
ST_42 : Operation 259 [6/7] (8.75ns)   --->   "%data_addr_4_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_4, i32 32)" [pred_controller.cpp:97]   --->   Operation 259 'readreq' 'data_addr_4_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 35> <Delay = 8.75>
ST_43 : Operation 260 [5/7] (8.75ns)   --->   "%data_addr_4_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_4, i32 32)" [pred_controller.cpp:97]   --->   Operation 260 'readreq' 'data_addr_4_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 36> <Delay = 8.75>
ST_44 : Operation 261 [4/7] (8.75ns)   --->   "%data_addr_4_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_4, i32 32)" [pred_controller.cpp:97]   --->   Operation 261 'readreq' 'data_addr_4_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 37> <Delay = 8.75>
ST_45 : Operation 262 [3/7] (8.75ns)   --->   "%data_addr_4_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_4, i32 32)" [pred_controller.cpp:97]   --->   Operation 262 'readreq' 'data_addr_4_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 46 <SV = 38> <Delay = 8.75>
ST_46 : Operation 263 [2/7] (8.75ns)   --->   "%data_addr_4_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_4, i32 32)" [pred_controller.cpp:97]   --->   Operation 263 'readreq' 'data_addr_4_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 39> <Delay = 8.75>
ST_47 : Operation 264 [1/7] (8.75ns)   --->   "%data_addr_4_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_4, i32 32)" [pred_controller.cpp:97]   --->   Operation 264 'readreq' 'data_addr_4_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_47 : Operation 265 [1/1] (0.65ns)   --->   "br label %.preheader13" [pred_controller.cpp:94]   --->   Operation 265 'br' <Predicate = true> <Delay = 0.65>

State 48 <SV = 40> <Delay = 0.78>
ST_48 : Operation 266 [1/1] (0.00ns)   --->   "%row4 = phi i6 [ %row_8, %6 ], [ 0, %.preheader13.preheader ]"   --->   Operation 266 'phi' 'row4' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 267 [1/1] (0.78ns)   --->   "%exitcond5 = icmp eq i6 %row4, -32" [pred_controller.cpp:94]   --->   Operation 267 'icmp' 'exitcond5' <Predicate = true> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 268 [1/1] (0.00ns)   --->   "%empty_33 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind"   --->   Operation 268 'speclooptripcount' 'empty_33' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 269 [1/1] (0.78ns)   --->   "%row_8 = add i6 %row4, 1" [pred_controller.cpp:94]   --->   Operation 269 'add' 'row_8' <Predicate = true> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 270 [1/1] (0.00ns)   --->   "br i1 %exitcond5, label %.preheader12.preheader, label %6" [pred_controller.cpp:94]   --->   Operation 270 'br' <Predicate = true> <Delay = 0.00>

State 49 <SV = 41> <Delay = 8.75>
ST_49 : Operation 271 [1/1] (8.75ns)   --->   "%data_addr_4_read = call float @_ssdm_op_Read.m_axi.floatP(float* %data_addr_4)" [pred_controller.cpp:97]   --->   Operation 271 'read' 'data_addr_4_read' <Predicate = (!exitcond5)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 50 <SV = 42> <Delay = 1.23>
ST_50 : Operation 272 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str10) nounwind" [pred_controller.cpp:94]   --->   Operation 272 'specloopname' <Predicate = (!exitcond5)> <Delay = 0.00>
ST_50 : Operation 273 [1/1] (0.00ns)   --->   "%tmp_74 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str10) nounwind" [pred_controller.cpp:94]   --->   Operation 273 'specregionbegin' 'tmp_74' <Predicate = (!exitcond5)> <Delay = 0.00>
ST_50 : Operation 274 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:96]   --->   Operation 274 'specpipeline' <Predicate = (!exitcond5)> <Delay = 0.00>
ST_50 : Operation 275 [1/1] (0.00ns)   --->   "%tmp_64 = zext i6 %row4 to i64" [pred_controller.cpp:97]   --->   Operation 275 'zext' 'tmp_64' <Predicate = (!exitcond5)> <Delay = 0.00>
ST_50 : Operation 276 [1/1] (0.00ns)   --->   "%R_Hat_a_addr = getelementptr inbounds [32 x float]* %R_Hat_a, i64 0, i64 %tmp_64" [pred_controller.cpp:97]   --->   Operation 276 'getelementptr' 'R_Hat_a_addr' <Predicate = (!exitcond5)> <Delay = 0.00>
ST_50 : Operation 277 [1/1] (1.23ns)   --->   "store float %data_addr_4_read, float* %R_Hat_a_addr, align 4" [pred_controller.cpp:97]   --->   Operation 277 'store' <Predicate = (!exitcond5)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_50 : Operation 278 [1/1] (0.00ns)   --->   "%empty_34 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str10, i32 %tmp_74) nounwind" [pred_controller.cpp:98]   --->   Operation 278 'specregionend' 'empty_34' <Predicate = (!exitcond5)> <Delay = 0.00>
ST_50 : Operation 279 [1/1] (0.00ns)   --->   "br label %.preheader13" [pred_controller.cpp:94]   --->   Operation 279 'br' <Predicate = (!exitcond5)> <Delay = 0.00>

State 51 <SV = 41> <Delay = 8.75>
ST_51 : Operation 280 [7/7] (8.75ns)   --->   "%data_addr_3_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_3, i32 144)" [pred_controller.cpp:103]   --->   Operation 280 'readreq' 'data_addr_3_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 52 <SV = 42> <Delay = 8.75>
ST_52 : Operation 281 [6/7] (8.75ns)   --->   "%data_addr_3_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_3, i32 144)" [pred_controller.cpp:103]   --->   Operation 281 'readreq' 'data_addr_3_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 53 <SV = 43> <Delay = 8.75>
ST_53 : Operation 282 [5/7] (8.75ns)   --->   "%data_addr_3_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_3, i32 144)" [pred_controller.cpp:103]   --->   Operation 282 'readreq' 'data_addr_3_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 44> <Delay = 8.75>
ST_54 : Operation 283 [4/7] (8.75ns)   --->   "%data_addr_3_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_3, i32 144)" [pred_controller.cpp:103]   --->   Operation 283 'readreq' 'data_addr_3_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 55 <SV = 45> <Delay = 8.75>
ST_55 : Operation 284 [3/7] (8.75ns)   --->   "%data_addr_3_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_3, i32 144)" [pred_controller.cpp:103]   --->   Operation 284 'readreq' 'data_addr_3_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 56 <SV = 46> <Delay = 8.75>
ST_56 : Operation 285 [2/7] (8.75ns)   --->   "%data_addr_3_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_3, i32 144)" [pred_controller.cpp:103]   --->   Operation 285 'readreq' 'data_addr_3_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 57 <SV = 47> <Delay = 8.75>
ST_57 : Operation 286 [1/7] (8.75ns)   --->   "%data_addr_3_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_3, i32 144)" [pred_controller.cpp:103]   --->   Operation 286 'readreq' 'data_addr_3_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_57 : Operation 287 [1/1] (0.65ns)   --->   "br label %.preheader12" [pred_controller.cpp:100]   --->   Operation 287 'br' <Predicate = true> <Delay = 0.65>

State 58 <SV = 48> <Delay = 0.84>
ST_58 : Operation 288 [1/1] (0.00ns)   --->   "%row5 = phi i8 [ %row_9, %7 ], [ 0, %.preheader12.preheader ]"   --->   Operation 288 'phi' 'row5' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 289 [1/1] (0.84ns)   --->   "%exitcond4 = icmp eq i8 %row5, -112" [pred_controller.cpp:100]   --->   Operation 289 'icmp' 'exitcond4' <Predicate = true> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 290 [1/1] (0.00ns)   --->   "%empty_35 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 144, i64 144, i64 144) nounwind"   --->   Operation 290 'speclooptripcount' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 291 [1/1] (0.76ns)   --->   "%row_9 = add i8 %row5, 1" [pred_controller.cpp:100]   --->   Operation 291 'add' 'row_9' <Predicate = true> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 292 [1/1] (0.00ns)   --->   "br i1 %exitcond4, label %.preheader11.preheader, label %7" [pred_controller.cpp:100]   --->   Operation 292 'br' <Predicate = true> <Delay = 0.00>

State 59 <SV = 49> <Delay = 8.75>
ST_59 : Operation 293 [1/1] (8.75ns)   --->   "%data_addr_3_read = call float @_ssdm_op_Read.m_axi.floatP(float* %data_addr_3)" [pred_controller.cpp:103]   --->   Operation 293 'read' 'data_addr_3_read' <Predicate = (!exitcond4)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 60 <SV = 50> <Delay = 1.23>
ST_60 : Operation 294 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str11) nounwind" [pred_controller.cpp:100]   --->   Operation 294 'specloopname' <Predicate = (!exitcond4)> <Delay = 0.00>
ST_60 : Operation 295 [1/1] (0.00ns)   --->   "%tmp_75 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str11) nounwind" [pred_controller.cpp:100]   --->   Operation 295 'specregionbegin' 'tmp_75' <Predicate = (!exitcond4)> <Delay = 0.00>
ST_60 : Operation 296 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:102]   --->   Operation 296 'specpipeline' <Predicate = (!exitcond4)> <Delay = 0.00>
ST_60 : Operation 297 [1/1] (0.00ns)   --->   "%tmp_65 = zext i8 %row5 to i64" [pred_controller.cpp:103]   --->   Operation 297 'zext' 'tmp_65' <Predicate = (!exitcond4)> <Delay = 0.00>
ST_60 : Operation 298 [1/1] (0.00ns)   --->   "%V_Mul_H_Inv_a_addr = getelementptr inbounds [144 x float]* %V_Mul_H_Inv_a, i64 0, i64 %tmp_65" [pred_controller.cpp:103]   --->   Operation 298 'getelementptr' 'V_Mul_H_Inv_a_addr' <Predicate = (!exitcond4)> <Delay = 0.00>
ST_60 : Operation 299 [1/1] (1.23ns)   --->   "store float %data_addr_3_read, float* %V_Mul_H_Inv_a_addr, align 4" [pred_controller.cpp:103]   --->   Operation 299 'store' <Predicate = (!exitcond4)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_60 : Operation 300 [1/1] (0.00ns)   --->   "%empty_36 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str11, i32 %tmp_75) nounwind" [pred_controller.cpp:104]   --->   Operation 300 'specregionend' 'empty_36' <Predicate = (!exitcond4)> <Delay = 0.00>
ST_60 : Operation 301 [1/1] (0.00ns)   --->   "br label %.preheader12" [pred_controller.cpp:100]   --->   Operation 301 'br' <Predicate = (!exitcond4)> <Delay = 0.00>

State 61 <SV = 49> <Delay = 8.75>
ST_61 : Operation 302 [7/7] (8.75ns)   --->   "%data_addr_2_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_2, i32 144)" [pred_controller.cpp:109]   --->   Operation 302 'readreq' 'data_addr_2_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 62 <SV = 50> <Delay = 8.75>
ST_62 : Operation 303 [6/7] (8.75ns)   --->   "%data_addr_2_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_2, i32 144)" [pred_controller.cpp:109]   --->   Operation 303 'readreq' 'data_addr_2_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 63 <SV = 51> <Delay = 8.75>
ST_63 : Operation 304 [5/7] (8.75ns)   --->   "%data_addr_2_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_2, i32 144)" [pred_controller.cpp:109]   --->   Operation 304 'readreq' 'data_addr_2_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 64 <SV = 52> <Delay = 8.75>
ST_64 : Operation 305 [4/7] (8.75ns)   --->   "%data_addr_2_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_2, i32 144)" [pred_controller.cpp:109]   --->   Operation 305 'readreq' 'data_addr_2_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 65 <SV = 53> <Delay = 8.75>
ST_65 : Operation 306 [3/7] (8.75ns)   --->   "%data_addr_2_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_2, i32 144)" [pred_controller.cpp:109]   --->   Operation 306 'readreq' 'data_addr_2_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 66 <SV = 54> <Delay = 8.75>
ST_66 : Operation 307 [2/7] (8.75ns)   --->   "%data_addr_2_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_2, i32 144)" [pred_controller.cpp:109]   --->   Operation 307 'readreq' 'data_addr_2_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 67 <SV = 55> <Delay = 8.75>
ST_67 : Operation 308 [1/7] (8.75ns)   --->   "%data_addr_2_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_2, i32 144)" [pred_controller.cpp:109]   --->   Operation 308 'readreq' 'data_addr_2_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_67 : Operation 309 [1/1] (0.65ns)   --->   "br label %.preheader11" [pred_controller.cpp:106]   --->   Operation 309 'br' <Predicate = true> <Delay = 0.65>

State 68 <SV = 56> <Delay = 0.84>
ST_68 : Operation 310 [1/1] (0.00ns)   --->   "%row6 = phi i8 [ %row_10, %8 ], [ 0, %.preheader11.preheader ]"   --->   Operation 310 'phi' 'row6' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 311 [1/1] (0.84ns)   --->   "%exitcond3 = icmp eq i8 %row6, -112" [pred_controller.cpp:106]   --->   Operation 311 'icmp' 'exitcond3' <Predicate = true> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 312 [1/1] (0.00ns)   --->   "%empty_37 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 144, i64 144, i64 144) nounwind"   --->   Operation 312 'speclooptripcount' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 313 [1/1] (0.76ns)   --->   "%row_10 = add i8 %row6, 1" [pred_controller.cpp:106]   --->   Operation 313 'add' 'row_10' <Predicate = true> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 314 [1/1] (0.00ns)   --->   "br i1 %exitcond3, label %.preheader10.preheader, label %8" [pred_controller.cpp:106]   --->   Operation 314 'br' <Predicate = true> <Delay = 0.00>

State 69 <SV = 57> <Delay = 8.75>
ST_69 : Operation 315 [1/1] (8.75ns)   --->   "%data_addr_2_read = call float @_ssdm_op_Read.m_axi.floatP(float* %data_addr_2)" [pred_controller.cpp:109]   --->   Operation 315 'read' 'data_addr_2_read' <Predicate = (!exitcond3)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 70 <SV = 58> <Delay = 1.23>
ST_70 : Operation 316 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str12) nounwind" [pred_controller.cpp:106]   --->   Operation 316 'specloopname' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_70 : Operation 317 [1/1] (0.00ns)   --->   "%tmp_76 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str12) nounwind" [pred_controller.cpp:106]   --->   Operation 317 'specregionbegin' 'tmp_76' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_70 : Operation 318 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:108]   --->   Operation 318 'specpipeline' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_70 : Operation 319 [1/1] (0.00ns)   --->   "%tmp_66 = zext i8 %row6 to i64" [pred_controller.cpp:109]   --->   Operation 319 'zext' 'tmp_66' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_70 : Operation 320 [1/1] (0.00ns)   --->   "%V_Gen_a_addr = getelementptr inbounds [144 x float]* %V_Gen_a, i64 0, i64 %tmp_66" [pred_controller.cpp:109]   --->   Operation 320 'getelementptr' 'V_Gen_a_addr' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_70 : Operation 321 [1/1] (1.23ns)   --->   "store float %data_addr_2_read, float* %V_Gen_a_addr, align 4" [pred_controller.cpp:109]   --->   Operation 321 'store' <Predicate = (!exitcond3)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_70 : Operation 322 [1/1] (0.00ns)   --->   "%empty_38 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str12, i32 %tmp_76) nounwind" [pred_controller.cpp:110]   --->   Operation 322 'specregionend' 'empty_38' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_70 : Operation 323 [1/1] (0.00ns)   --->   "br label %.preheader11" [pred_controller.cpp:106]   --->   Operation 323 'br' <Predicate = (!exitcond3)> <Delay = 0.00>

State 71 <SV = 57> <Delay = 8.75>
ST_71 : Operation 324 [7/7] (8.75ns)   --->   "%data_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_1, i32 144)" [pred_controller.cpp:116]   --->   Operation 324 'readreq' 'data_addr_1_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 72 <SV = 58> <Delay = 8.75>
ST_72 : Operation 325 [6/7] (8.75ns)   --->   "%data_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_1, i32 144)" [pred_controller.cpp:116]   --->   Operation 325 'readreq' 'data_addr_1_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 73 <SV = 59> <Delay = 8.75>
ST_73 : Operation 326 [5/7] (8.75ns)   --->   "%data_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_1, i32 144)" [pred_controller.cpp:116]   --->   Operation 326 'readreq' 'data_addr_1_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 74 <SV = 60> <Delay = 8.75>
ST_74 : Operation 327 [4/7] (8.75ns)   --->   "%data_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_1, i32 144)" [pred_controller.cpp:116]   --->   Operation 327 'readreq' 'data_addr_1_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 75 <SV = 61> <Delay = 8.75>
ST_75 : Operation 328 [3/7] (8.75ns)   --->   "%data_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_1, i32 144)" [pred_controller.cpp:116]   --->   Operation 328 'readreq' 'data_addr_1_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 76 <SV = 62> <Delay = 8.75>
ST_76 : Operation 329 [2/7] (8.75ns)   --->   "%data_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_1, i32 144)" [pred_controller.cpp:116]   --->   Operation 329 'readreq' 'data_addr_1_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 77 <SV = 63> <Delay = 8.75>
ST_77 : Operation 330 [1/7] (8.75ns)   --->   "%data_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %data_addr_1, i32 144)" [pred_controller.cpp:116]   --->   Operation 330 'readreq' 'data_addr_1_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_77 : Operation 331 [1/1] (0.65ns)   --->   "br label %.preheader10" [pred_controller.cpp:113]   --->   Operation 331 'br' <Predicate = true> <Delay = 0.65>

State 78 <SV = 64> <Delay = 0.84>
ST_78 : Operation 332 [1/1] (0.00ns)   --->   "%row7 = phi i8 [ %row_11, %9 ], [ 0, %.preheader10.preheader ]"   --->   Operation 332 'phi' 'row7' <Predicate = true> <Delay = 0.00>
ST_78 : Operation 333 [1/1] (0.84ns)   --->   "%exitcond2 = icmp eq i8 %row7, -112" [pred_controller.cpp:113]   --->   Operation 333 'icmp' 'exitcond2' <Predicate = true> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_78 : Operation 334 [1/1] (0.00ns)   --->   "%empty_39 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 144, i64 144, i64 144) nounwind"   --->   Operation 334 'speclooptripcount' 'empty_39' <Predicate = true> <Delay = 0.00>
ST_78 : Operation 335 [1/1] (0.76ns)   --->   "%row_11 = add i8 %row7, 1" [pred_controller.cpp:113]   --->   Operation 335 'add' 'row_11' <Predicate = true> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_78 : Operation 336 [1/1] (0.00ns)   --->   "br i1 %exitcond2, label %10, label %9" [pred_controller.cpp:113]   --->   Operation 336 'br' <Predicate = true> <Delay = 0.00>

State 79 <SV = 65> <Delay = 8.75>
ST_79 : Operation 337 [1/1] (8.75ns)   --->   "%data_addr_1_read = call float @_ssdm_op_Read.m_axi.floatP(float* %data_addr_1)" [pred_controller.cpp:116]   --->   Operation 337 'read' 'data_addr_1_read' <Predicate = (!exitcond2)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 80 <SV = 66> <Delay = 1.23>
ST_80 : Operation 338 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str13) nounwind" [pred_controller.cpp:113]   --->   Operation 338 'specloopname' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_80 : Operation 339 [1/1] (0.00ns)   --->   "%tmp_77 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str13) nounwind" [pred_controller.cpp:113]   --->   Operation 339 'specregionbegin' 'tmp_77' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_80 : Operation 340 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str116) nounwind" [pred_controller.cpp:115]   --->   Operation 340 'specpipeline' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_80 : Operation 341 [1/1] (0.00ns)   --->   "%tmp_67 = zext i8 %row7 to i64" [pred_controller.cpp:116]   --->   Operation 341 'zext' 'tmp_67' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_80 : Operation 342 [1/1] (0.00ns)   --->   "%H_Hat_Inv_a_addr = getelementptr inbounds [144 x float]* %H_Hat_Inv_a, i64 0, i64 %tmp_67" [pred_controller.cpp:116]   --->   Operation 342 'getelementptr' 'H_Hat_Inv_a_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_80 : Operation 343 [1/1] (1.23ns)   --->   "store float %data_addr_1_read, float* %H_Hat_Inv_a_addr, align 4" [pred_controller.cpp:116]   --->   Operation 343 'store' <Predicate = (!exitcond2)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_80 : Operation 344 [1/1] (0.00ns)   --->   "%empty_40 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str13, i32 %tmp_77) nounwind" [pred_controller.cpp:117]   --->   Operation 344 'specregionend' 'empty_40' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_80 : Operation 345 [1/1] (0.00ns)   --->   "br label %.preheader10" [pred_controller.cpp:113]   --->   Operation 345 'br' <Predicate = (!exitcond2)> <Delay = 0.00>

State 81 <SV = 65> <Delay = 0.00>
ST_81 : Operation 346 [1/1] (0.00ns)   --->   "%X_KK_a_3_load = load float* %X_KK_a_3" [pred_controller.cpp:120]   --->   Operation 346 'load' 'X_KK_a_3_load' <Predicate = true> <Delay = 0.00>
ST_81 : Operation 347 [1/1] (0.00ns)   --->   "%X_KK_a_3_1_load = load float* %X_KK_a_3_1" [pred_controller.cpp:120]   --->   Operation 347 'load' 'X_KK_a_3_1_load' <Predicate = true> <Delay = 0.00>
ST_81 : Operation 348 [1/1] (0.00ns)   --->   "%X_KK_a_3_2_load = load float* %X_KK_a_3_2" [pred_controller.cpp:120]   --->   Operation 348 'load' 'X_KK_a_3_2_load' <Predicate = true> <Delay = 0.00>
ST_81 : Operation 349 [1/1] (0.00ns)   --->   "%X_KK_a_3_3_load = load float* %X_KK_a_3_3" [pred_controller.cpp:120]   --->   Operation 349 'load' 'X_KK_a_3_3_load' <Predicate = true> <Delay = 0.00>
ST_81 : Operation 350 [2/2] (0.00ns)   --->   "call fastcc void @unconstrained([32 x float]* %R_Hat_a, float %X_KK_a_3_load, float %X_KK_a_3_1_load, float %X_KK_a_3_2_load, float %X_KK_a_3_3_load, [96 x float]* %Y_Hat_a, [8 x float]* %Y_Ref_KK_a, [12 x float]* %U_KK_a, [144 x float]* %V_Mul_H_Inv_a, [12 x float]* %U_unc_kk, [12 x float]* %theta_kk) nounwind" [pred_controller.cpp:120]   --->   Operation 350 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 82 <SV = 66> <Delay = 0.65>
ST_82 : Operation 351 [1/2] (0.00ns)   --->   "call fastcc void @unconstrained([32 x float]* %R_Hat_a, float %X_KK_a_3_load, float %X_KK_a_3_1_load, float %X_KK_a_3_2_load, float %X_KK_a_3_3_load, [96 x float]* %Y_Hat_a, [8 x float]* %Y_Ref_KK_a, [12 x float]* %U_KK_a, [144 x float]* %V_Mul_H_Inv_a, [12 x float]* %U_unc_kk, [12 x float]* %theta_kk) nounwind" [pred_controller.cpp:120]   --->   Operation 351 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_82 : Operation 352 [1/1] (0.65ns)   --->   "br label %11" [pred_controller.cpp:123]   --->   Operation 352 'br' <Predicate = true> <Delay = 0.65>

State 83 <SV = 67> <Delay = 1.00>
ST_83 : Operation 353 [1/1] (0.00ns)   --->   "%row8 = phi i4 [ 0, %10 ], [ %row_12, %12 ]"   --->   Operation 353 'phi' 'row8' <Predicate = true> <Delay = 0.00>
ST_83 : Operation 354 [1/1] (0.72ns)   --->   "%exitcond1 = icmp eq i4 %row8, -4" [pred_controller.cpp:123]   --->   Operation 354 'icmp' 'exitcond1' <Predicate = true> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 355 [1/1] (0.00ns)   --->   "%empty_41 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 12, i64 12, i64 12) nounwind"   --->   Operation 355 'speclooptripcount' 'empty_41' <Predicate = true> <Delay = 0.00>
ST_83 : Operation 356 [1/1] (0.79ns)   --->   "%row_12 = add i4 %row8, 1" [pred_controller.cpp:123]   --->   Operation 356 'add' 'row_12' <Predicate = true> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 357 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %.preheader.preheader, label %12" [pred_controller.cpp:123]   --->   Operation 357 'br' <Predicate = true> <Delay = 0.00>
ST_83 : Operation 358 [1/1] (0.00ns)   --->   "%tmp_68 = zext i4 %row8 to i64" [pred_controller.cpp:125]   --->   Operation 358 'zext' 'tmp_68' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_83 : Operation 359 [1/1] (0.00ns)   --->   "%U_unc_kk_addr = getelementptr inbounds [12 x float]* %U_unc_kk, i64 0, i64 %tmp_68" [pred_controller.cpp:125]   --->   Operation 359 'getelementptr' 'U_unc_kk_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_83 : Operation 360 [2/2] (0.67ns)   --->   "%U_unc_kk_load = load float* %U_unc_kk_addr, align 4" [pred_controller.cpp:125]   --->   Operation 360 'load' 'U_unc_kk_load' <Predicate = (!exitcond1)> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_83 : Operation 361 [1/1] (0.65ns)   --->   "br label %.preheader" [pred_controller.cpp:128]   --->   Operation 361 'br' <Predicate = (exitcond1)> <Delay = 0.65>

State 84 <SV = 68> <Delay = 1.35>
ST_84 : Operation 362 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str14) nounwind" [pred_controller.cpp:124]   --->   Operation 362 'specloopname' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 363 [1/2] (0.67ns)   --->   "%U_unc_kk_load = load float* %U_unc_kk_addr, align 4" [pred_controller.cpp:125]   --->   Operation 363 'load' 'U_unc_kk_load' <Predicate = true> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_84 : Operation 364 [1/1] (0.00ns)   --->   "%U_unc_kk_cpy_addr = getelementptr inbounds [12 x float]* %U_unc_kk_cpy, i64 0, i64 %tmp_68" [pred_controller.cpp:125]   --->   Operation 364 'getelementptr' 'U_unc_kk_cpy_addr' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 365 [1/1] (0.67ns)   --->   "store float %U_unc_kk_load, float* %U_unc_kk_cpy_addr, align 4" [pred_controller.cpp:125]   --->   Operation 365 'store' <Predicate = true> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_84 : Operation 366 [1/1] (0.00ns)   --->   "br label %11" [pred_controller.cpp:123]   --->   Operation 366 'br' <Predicate = true> <Delay = 0.00>

State 85 <SV = 68> <Delay = 1.23>
ST_85 : Operation 367 [1/1] (0.00ns)   --->   "%row9 = phi i8 [ %row_13, %13 ], [ 0, %.preheader.preheader ]"   --->   Operation 367 'phi' 'row9' <Predicate = true> <Delay = 0.00>
ST_85 : Operation 368 [1/1] (0.84ns)   --->   "%exitcond = icmp eq i8 %row9, -112" [pred_controller.cpp:128]   --->   Operation 368 'icmp' 'exitcond' <Predicate = true> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 369 [1/1] (0.00ns)   --->   "%empty_42 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 144, i64 144, i64 144) nounwind"   --->   Operation 369 'speclooptripcount' 'empty_42' <Predicate = true> <Delay = 0.00>
ST_85 : Operation 370 [1/1] (0.76ns)   --->   "%row_13 = add i8 %row9, 1" [pred_controller.cpp:128]   --->   Operation 370 'add' 'row_13' <Predicate = true> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 371 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %14, label %13" [pred_controller.cpp:128]   --->   Operation 371 'br' <Predicate = true> <Delay = 0.00>
ST_85 : Operation 372 [1/1] (0.00ns)   --->   "%tmp_70 = zext i8 %row9 to i64" [pred_controller.cpp:130]   --->   Operation 372 'zext' 'tmp_70' <Predicate = (!exitcond)> <Delay = 0.00>
ST_85 : Operation 373 [1/1] (0.00ns)   --->   "%V_Gen_a_addr_1 = getelementptr inbounds [144 x float]* %V_Gen_a, i64 0, i64 %tmp_70" [pred_controller.cpp:130]   --->   Operation 373 'getelementptr' 'V_Gen_a_addr_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_85 : Operation 374 [2/2] (1.23ns)   --->   "%V_Gen_a_load = load float* %V_Gen_a_addr_1, align 4" [pred_controller.cpp:130]   --->   Operation 374 'load' 'V_Gen_a_load' <Predicate = (!exitcond)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_85 : Operation 375 [2/2] (0.00ns)   --->   "%roh_2 = call fastcc float @guess_edu([12 x float]* %U_KK_a, [144 x float]* %V_Gen_a_cpy, [12 x float]* %U_unc_kk_cpy) nounwind" [pred_controller.cpp:141]   --->   Operation 375 'call' 'roh_2' <Predicate = (exitcond)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_85 : Operation 376 [2/2] (0.00ns)   --->   "%roh_babay = call fastcc float @guess_babay([144 x float]* %V_Gen_a, [144 x float]* %H_Hat_Inv_a, [12 x float]* %U_unc_kk, [12 x float]* %theta_kk) nounwind" [pred_controller.cpp:142]   --->   Operation 376 'call' 'roh_babay' <Predicate = (exitcond)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 86 <SV = 69> <Delay = 2.47>
ST_86 : Operation 377 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str1525) nounwind" [pred_controller.cpp:129]   --->   Operation 377 'specloopname' <Predicate = true> <Delay = 0.00>
ST_86 : Operation 378 [1/2] (1.23ns)   --->   "%V_Gen_a_load = load float* %V_Gen_a_addr_1, align 4" [pred_controller.cpp:130]   --->   Operation 378 'load' 'V_Gen_a_load' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_86 : Operation 379 [1/1] (0.00ns)   --->   "%V_Gen_a_cpy_addr = getelementptr inbounds [144 x float]* %V_Gen_a_cpy, i64 0, i64 %tmp_70" [pred_controller.cpp:130]   --->   Operation 379 'getelementptr' 'V_Gen_a_cpy_addr' <Predicate = true> <Delay = 0.00>
ST_86 : Operation 380 [1/1] (1.23ns)   --->   "store float %V_Gen_a_load, float* %V_Gen_a_cpy_addr, align 4" [pred_controller.cpp:130]   --->   Operation 380 'store' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_86 : Operation 381 [1/1] (0.00ns)   --->   "br label %.preheader" [pred_controller.cpp:128]   --->   Operation 381 'br' <Predicate = true> <Delay = 0.00>

State 87 <SV = 69> <Delay = 4.21>
ST_87 : Operation 382 [1/2] (0.00ns)   --->   "%roh_2 = call fastcc float @guess_edu([12 x float]* %U_KK_a, [144 x float]* %V_Gen_a_cpy, [12 x float]* %U_unc_kk_cpy) nounwind" [pred_controller.cpp:141]   --->   Operation 382 'call' 'roh_2' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_87 : Operation 383 [1/2] (0.00ns)   --->   "%roh_babay = call fastcc float @guess_babay([144 x float]* %V_Gen_a, [144 x float]* %H_Hat_Inv_a, [12 x float]* %U_unc_kk, [12 x float]* %theta_kk) nounwind" [pred_controller.cpp:142]   --->   Operation 383 'call' 'roh_babay' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_87 : Operation 384 [1/1] (0.00ns)   --->   "%roh_2_to_int = bitcast float %roh_2 to i32" [pred_controller.cpp:148]   --->   Operation 384 'bitcast' 'roh_2_to_int' <Predicate = true> <Delay = 0.00>
ST_87 : Operation 385 [1/1] (0.00ns)   --->   "%tmp_78 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %roh_2_to_int, i32 23, i32 30)" [pred_controller.cpp:148]   --->   Operation 385 'partselect' 'tmp_78' <Predicate = true> <Delay = 0.00>
ST_87 : Operation 386 [1/1] (0.00ns)   --->   "%tmp_88 = trunc i32 %roh_2_to_int to i23" [pred_controller.cpp:148]   --->   Operation 386 'trunc' 'tmp_88' <Predicate = true> <Delay = 0.00>
ST_87 : Operation 387 [1/1] (0.00ns)   --->   "%roh_babay_to_int = bitcast float %roh_babay to i32" [pred_controller.cpp:148]   --->   Operation 387 'bitcast' 'roh_babay_to_int' <Predicate = true> <Delay = 0.00>
ST_87 : Operation 388 [1/1] (0.00ns)   --->   "%tmp_89 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %roh_babay_to_int, i32 23, i32 30)" [pred_controller.cpp:148]   --->   Operation 388 'partselect' 'tmp_89' <Predicate = true> <Delay = 0.00>
ST_87 : Operation 389 [1/1] (0.00ns)   --->   "%tmp_90 = trunc i32 %roh_babay_to_int to i23" [pred_controller.cpp:148]   --->   Operation 389 'trunc' 'tmp_90' <Predicate = true> <Delay = 0.00>
ST_87 : Operation 390 [1/1] (0.84ns)   --->   "%notlhs = icmp ne i8 %tmp_78, -1" [pred_controller.cpp:148]   --->   Operation 390 'icmp' 'notlhs' <Predicate = true> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 391 [1/1] (1.05ns)   --->   "%notrhs = icmp eq i23 %tmp_88, 0" [pred_controller.cpp:148]   --->   Operation 391 'icmp' 'notrhs' <Predicate = true> <Delay = 1.05> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 392 [1/1] (0.00ns) (grouped into LUT with out node tmp_95)   --->   "%tmp_91 = or i1 %notrhs, %notlhs" [pred_controller.cpp:148]   --->   Operation 392 'or' 'tmp_91' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 393 [1/1] (0.84ns)   --->   "%notlhs2 = icmp ne i8 %tmp_89, -1" [pred_controller.cpp:148]   --->   Operation 393 'icmp' 'notlhs2' <Predicate = true> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 394 [1/1] (1.05ns)   --->   "%notrhs2 = icmp eq i23 %tmp_90, 0" [pred_controller.cpp:148]   --->   Operation 394 'icmp' 'notrhs2' <Predicate = true> <Delay = 1.05> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 395 [1/1] (0.00ns) (grouped into LUT with out node tmp_95)   --->   "%tmp_92 = or i1 %notrhs2, %notlhs2" [pred_controller.cpp:148]   --->   Operation 395 'or' 'tmp_92' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 396 [1/1] (0.00ns) (grouped into LUT with out node tmp_95)   --->   "%tmp_93 = and i1 %tmp_91, %tmp_92" [pred_controller.cpp:148]   --->   Operation 396 'and' 'tmp_93' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 397 [1/1] (3.47ns)   --->   "%tmp_94 = fcmp olt float %roh_2, %roh_babay" [pred_controller.cpp:148]   --->   Operation 397 'fcmp' 'tmp_94' <Predicate = true> <Delay = 3.47> <Core = "FCmp">   --->   Core 110 'FCmp' <Latency = 0> <II = 1> <Delay = 3.47> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 398 [1/1] (0.28ns) (out node of the LUT)   --->   "%tmp_95 = and i1 %tmp_93, %tmp_94" [pred_controller.cpp:148]   --->   Operation 398 'and' 'tmp_95' <Predicate = true> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 399 [1/1] (0.44ns) (out node of the LUT)   --->   "%roh_1 = select i1 %tmp_95, float %roh_2, float %roh_babay" [pred_controller.cpp:148]   --->   Operation 399 'select' 'roh_1' <Predicate = true> <Delay = 0.44> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 88 <SV = 70> <Delay = 0.00>
ST_88 : Operation 400 [2/2] (0.00ns)   --->   "call fastcc void @sph_dec([144 x float]* %V_Gen_a, float %roh_1, [12 x float]* %U_unc_kk, [12 x float]* %U_opt) nounwind" [pred_controller.cpp:155]   --->   Operation 400 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 89 <SV = 71> <Delay = 8.75>
ST_89 : Operation 401 [1/2] (0.00ns)   --->   "call fastcc void @sph_dec([144 x float]* %V_Gen_a, float %roh_1, [12 x float]* %U_unc_kk, [12 x float]* %U_opt) nounwind" [pred_controller.cpp:155]   --->   Operation 401 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_89 : Operation 402 [1/1] (8.75ns)   --->   "%data_addr_wr_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %data_addr, i32 12)" [pred_controller.cpp:168]   --->   Operation 402 'writereq' 'data_addr_wr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_89 : Operation 403 [1/1] (0.65ns)   --->   "br label %burst.wr.header" [pred_controller.cpp:168]   --->   Operation 403 'br' <Predicate = true> <Delay = 0.65>

State 90 <SV = 72> <Delay = 1.00>
ST_90 : Operation 404 [1/1] (0.00ns)   --->   "%indvar = phi i4 [ 0, %14 ], [ %indvar_next, %burst.wr.body ]" [pred_controller.cpp:168]   --->   Operation 404 'phi' 'indvar' <Predicate = true> <Delay = 0.00>
ST_90 : Operation 405 [1/1] (0.72ns)   --->   "%exitcond10 = icmp eq i4 %indvar, -4" [pred_controller.cpp:168]   --->   Operation 405 'icmp' 'exitcond10' <Predicate = true> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_90 : Operation 406 [1/1] (0.00ns)   --->   "%empty_43 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 12, i64 12, i64 12) nounwind"   --->   Operation 406 'speclooptripcount' 'empty_43' <Predicate = true> <Delay = 0.00>
ST_90 : Operation 407 [1/1] (0.79ns)   --->   "%indvar_next = add i4 %indvar, 1" [pred_controller.cpp:168]   --->   Operation 407 'add' 'indvar_next' <Predicate = true> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_90 : Operation 408 [1/1] (0.00ns)   --->   "br i1 %exitcond10, label %memcpy.tail, label %burst.wr.body" [pred_controller.cpp:168]   --->   Operation 408 'br' <Predicate = true> <Delay = 0.00>
ST_90 : Operation 409 [1/1] (0.00ns)   --->   "%indvar1 = zext i4 %indvar to i64" [pred_controller.cpp:168]   --->   Operation 409 'zext' 'indvar1' <Predicate = (!exitcond10)> <Delay = 0.00>
ST_90 : Operation 410 [1/1] (0.00ns)   --->   "%U_opt_addr = getelementptr [12 x float]* %U_opt, i64 0, i64 %indvar1" [pred_controller.cpp:168]   --->   Operation 410 'getelementptr' 'U_opt_addr' <Predicate = (!exitcond10)> <Delay = 0.00>
ST_90 : Operation 411 [2/2] (0.67ns)   --->   "%U_opt_load = load float* %U_opt_addr, align 4" [pred_controller.cpp:168]   --->   Operation 411 'load' 'U_opt_load' <Predicate = (!exitcond10)> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>

State 91 <SV = 73> <Delay = 0.67>
ST_91 : Operation 412 [1/2] (0.67ns)   --->   "%U_opt_load = load float* %U_opt_addr, align 4" [pred_controller.cpp:168]   --->   Operation 412 'load' 'U_opt_load' <Predicate = (!exitcond10)> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>

State 92 <SV = 74> <Delay = 8.75>
ST_92 : Operation 413 [1/1] (0.00ns)   --->   "%burstwrite_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @burstwrite_OC_region) nounwind" [pred_controller.cpp:168]   --->   Operation 413 'specregionbegin' 'burstwrite_rbegin' <Predicate = (!exitcond10)> <Delay = 0.00>
ST_92 : Operation 414 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str18)" [pred_controller.cpp:168]   --->   Operation 414 'specpipeline' <Predicate = (!exitcond10)> <Delay = 0.00>
ST_92 : Operation 415 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([21 x i8]* @memcpy_OC_out_OC_U_o)" [pred_controller.cpp:168]   --->   Operation 415 'specloopname' <Predicate = (!exitcond10)> <Delay = 0.00>
ST_92 : Operation 416 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %data_addr, float %U_opt_load, i4 -1)" [pred_controller.cpp:168]   --->   Operation 416 'write' <Predicate = (!exitcond10)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_92 : Operation 417 [1/1] (0.00ns)   --->   "%burstwrite_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @burstwrite_OC_region, i32 %burstwrite_rbegin) nounwind" [pred_controller.cpp:168]   --->   Operation 417 'specregionend' 'burstwrite_rend' <Predicate = (!exitcond10)> <Delay = 0.00>
ST_92 : Operation 418 [1/1] (0.00ns)   --->   "br label %burst.wr.header" [pred_controller.cpp:168]   --->   Operation 418 'br' <Predicate = (!exitcond10)> <Delay = 0.00>

State 93 <SV = 73> <Delay = 8.75>
ST_93 : Operation 419 [5/5] (8.75ns)   --->   "%data_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %data_addr)" [pred_controller.cpp:168]   --->   Operation 419 'writeresp' 'data_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 94 <SV = 74> <Delay = 8.75>
ST_94 : Operation 420 [4/5] (8.75ns)   --->   "%data_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %data_addr)" [pred_controller.cpp:168]   --->   Operation 420 'writeresp' 'data_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 95 <SV = 75> <Delay = 8.75>
ST_95 : Operation 421 [3/5] (8.75ns)   --->   "%data_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %data_addr)" [pred_controller.cpp:168]   --->   Operation 421 'writeresp' 'data_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 96 <SV = 76> <Delay = 8.75>
ST_96 : Operation 422 [2/5] (8.75ns)   --->   "%data_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %data_addr)" [pred_controller.cpp:168]   --->   Operation 422 'writeresp' 'data_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 97 <SV = 77> <Delay = 8.75>
ST_97 : Operation 423 [1/5] (8.75ns)   --->   "%data_addr_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %data_addr)" [pred_controller.cpp:168]   --->   Operation 423 'writeresp' 'data_addr_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_97 : Operation 424 [1/1] (0.00ns)   --->   "ret void" [pred_controller.cpp:172]   --->   Operation 424 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'out_r' [15]  (1 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('data_addr_8') [50]  (0 ns)
	bus request on port 'data' (pred_controller.cpp:72) [76]  (8.75 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:72) [76]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:72) [76]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:72) [76]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:72) [76]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:72) [76]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:72) [76]  (8.75 ns)

 <State 9>: 0.721ns
The critical path consists of the following:
	'phi' operation ('row') with incoming values : ('row', pred_controller.cpp:70) [79]  (0 ns)
	blocking operation 0.721 ns on control path)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus read on port 'data' (pred_controller.cpp:72) [88]  (8.75 ns)
	'store' operation (pred_controller.cpp:72) of variable 'X_KK_a[0]', pred_controller.cpp:72 on local variable 'X_KK_a[3]' [101]  (0 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:79) [107]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:79) [107]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:79) [107]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:79) [107]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:79) [107]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:79) [107]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:79) [107]  (8.75 ns)

 <State 18>: 0.797ns
The critical path consists of the following:
	'phi' operation ('row') with incoming values : ('row', pred_controller.cpp:77) [110]  (0 ns)
	'add' operation ('row', pred_controller.cpp:77) [113]  (0.797 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus read on port 'data' (pred_controller.cpp:79) [120]  (8.75 ns)

 <State 20>: 0.677ns
The critical path consists of the following:
	'getelementptr' operation ('Y_Ref_KK_a_addr', pred_controller.cpp:79) [121]  (0 ns)
	'store' operation (pred_controller.cpp:79) of variable 'data_addr_7_read', pred_controller.cpp:79 on array 'Y_Ref_KK_a', pred_controller.cpp:34 [122]  (0.677 ns)

 <State 21>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:84) [126]  (8.75 ns)

 <State 22>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:84) [126]  (8.75 ns)

 <State 23>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:84) [126]  (8.75 ns)

 <State 24>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:84) [126]  (8.75 ns)

 <State 25>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:84) [126]  (8.75 ns)

 <State 26>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:84) [126]  (8.75 ns)

 <State 27>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:84) [126]  (8.75 ns)

 <State 28>: 0.797ns
The critical path consists of the following:
	'phi' operation ('row') with incoming values : ('row', pred_controller.cpp:82) [129]  (0 ns)
	'add' operation ('row', pred_controller.cpp:82) [132]  (0.797 ns)

 <State 29>: 8.75ns
The critical path consists of the following:
	bus read on port 'data' (pred_controller.cpp:84) [139]  (8.75 ns)

 <State 30>: 0.677ns
The critical path consists of the following:
	'getelementptr' operation ('U_KK_a_addr', pred_controller.cpp:84) [140]  (0 ns)
	'store' operation (pred_controller.cpp:84) of variable 'data_addr_6_read', pred_controller.cpp:84 on array 'U_KK_a', pred_controller.cpp:35 [141]  (0.677 ns)

 <State 31>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:91) [145]  (8.75 ns)

 <State 32>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:91) [145]  (8.75 ns)

 <State 33>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:91) [145]  (8.75 ns)

 <State 34>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:91) [145]  (8.75 ns)

 <State 35>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:91) [145]  (8.75 ns)

 <State 36>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:91) [145]  (8.75 ns)

 <State 37>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:91) [145]  (8.75 ns)

 <State 38>: 0.817ns
The critical path consists of the following:
	'phi' operation ('row') with incoming values : ('row', pred_controller.cpp:87) [148]  (0 ns)
	'icmp' operation ('exitcond6', pred_controller.cpp:87) [149]  (0.817 ns)

 <State 39>: 8.75ns
The critical path consists of the following:
	bus read on port 'data' (pred_controller.cpp:91) [158]  (8.75 ns)

 <State 40>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('Y_Hat_a_addr', pred_controller.cpp:91) [159]  (0 ns)
	'store' operation (pred_controller.cpp:91) of variable 'data_addr_5_read', pred_controller.cpp:91 on array 'Y_Hat_a', pred_controller.cpp:36 [160]  (1.24 ns)

 <State 41>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:97) [164]  (8.75 ns)

 <State 42>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:97) [164]  (8.75 ns)

 <State 43>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:97) [164]  (8.75 ns)

 <State 44>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:97) [164]  (8.75 ns)

 <State 45>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:97) [164]  (8.75 ns)

 <State 46>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:97) [164]  (8.75 ns)

 <State 47>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:97) [164]  (8.75 ns)

 <State 48>: 0.785ns
The critical path consists of the following:
	'phi' operation ('row') with incoming values : ('row', pred_controller.cpp:94) [167]  (0 ns)
	'icmp' operation ('exitcond5', pred_controller.cpp:94) [168]  (0.785 ns)

 <State 49>: 8.75ns
The critical path consists of the following:
	bus read on port 'data' (pred_controller.cpp:97) [177]  (8.75 ns)

 <State 50>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('R_Hat_a_addr', pred_controller.cpp:97) [178]  (0 ns)
	'store' operation (pred_controller.cpp:97) of variable 'data_addr_4_read', pred_controller.cpp:97 on array 'R_Hat_a', pred_controller.cpp:37 [179]  (1.24 ns)

 <State 51>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:103) [183]  (8.75 ns)

 <State 52>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:103) [183]  (8.75 ns)

 <State 53>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:103) [183]  (8.75 ns)

 <State 54>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:103) [183]  (8.75 ns)

 <State 55>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:103) [183]  (8.75 ns)

 <State 56>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:103) [183]  (8.75 ns)

 <State 57>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:103) [183]  (8.75 ns)

 <State 58>: 0.849ns
The critical path consists of the following:
	'phi' operation ('row') with incoming values : ('row', pred_controller.cpp:100) [186]  (0 ns)
	'icmp' operation ('exitcond4', pred_controller.cpp:100) [187]  (0.849 ns)

 <State 59>: 8.75ns
The critical path consists of the following:
	bus read on port 'data' (pred_controller.cpp:103) [196]  (8.75 ns)

 <State 60>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('V_Mul_H_Inv_a_addr', pred_controller.cpp:103) [197]  (0 ns)
	'store' operation (pred_controller.cpp:103) of variable 'data_addr_3_read', pred_controller.cpp:103 on array 'V_Mul_H_Inv_a', pred_controller.cpp:38 [198]  (1.24 ns)

 <State 61>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:109) [202]  (8.75 ns)

 <State 62>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:109) [202]  (8.75 ns)

 <State 63>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:109) [202]  (8.75 ns)

 <State 64>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:109) [202]  (8.75 ns)

 <State 65>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:109) [202]  (8.75 ns)

 <State 66>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:109) [202]  (8.75 ns)

 <State 67>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:109) [202]  (8.75 ns)

 <State 68>: 0.849ns
The critical path consists of the following:
	'phi' operation ('row') with incoming values : ('row', pred_controller.cpp:106) [205]  (0 ns)
	'icmp' operation ('exitcond3', pred_controller.cpp:106) [206]  (0.849 ns)

 <State 69>: 8.75ns
The critical path consists of the following:
	bus read on port 'data' (pred_controller.cpp:109) [215]  (8.75 ns)

 <State 70>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('V_Gen_a_addr', pred_controller.cpp:109) [216]  (0 ns)
	'store' operation (pred_controller.cpp:109) of variable 'data_addr_2_read', pred_controller.cpp:109 on array 'V_Gen_a', pred_controller.cpp:39 [217]  (1.24 ns)

 <State 71>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:116) [221]  (8.75 ns)

 <State 72>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:116) [221]  (8.75 ns)

 <State 73>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:116) [221]  (8.75 ns)

 <State 74>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:116) [221]  (8.75 ns)

 <State 75>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:116) [221]  (8.75 ns)

 <State 76>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:116) [221]  (8.75 ns)

 <State 77>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:116) [221]  (8.75 ns)

 <State 78>: 0.849ns
The critical path consists of the following:
	'phi' operation ('row') with incoming values : ('row', pred_controller.cpp:113) [224]  (0 ns)
	'icmp' operation ('exitcond2', pred_controller.cpp:113) [225]  (0.849 ns)

 <State 79>: 8.75ns
The critical path consists of the following:
	bus read on port 'data' (pred_controller.cpp:116) [234]  (8.75 ns)

 <State 80>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('H_Hat_Inv_a_addr', pred_controller.cpp:116) [235]  (0 ns)
	'store' operation (pred_controller.cpp:116) of variable 'data_addr_1_read', pred_controller.cpp:116 on array 'H_Hat_Inv_a', pred_controller.cpp:41 [236]  (1.24 ns)

 <State 81>: 0ns
The critical path consists of the following:

 <State 82>: 0.656ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('row') with incoming values : ('row', pred_controller.cpp:123) [247]  (0.656 ns)

 <State 83>: 1.01ns
The critical path consists of the following:
	'icmp' operation ('exitcond1', pred_controller.cpp:123) [248]  (0.721 ns)
	blocking operation 0.287 ns on control path)

 <State 84>: 1.35ns
The critical path consists of the following:
	'load' operation ('U_unc_kk_load', pred_controller.cpp:125) on array 'U_unc_kk', pred_controller.cpp:45 [256]  (0.677 ns)
	'store' operation (pred_controller.cpp:125) of variable 'U_unc_kk_load', pred_controller.cpp:125 on array 'U_unc_kk_cpy', pred_controller.cpp:46 [258]  (0.677 ns)

 <State 85>: 1.24ns
The critical path consists of the following:
	'phi' operation ('row') with incoming values : ('row', pred_controller.cpp:128) [263]  (0 ns)
	'getelementptr' operation ('V_Gen_a_addr_1', pred_controller.cpp:130) [271]  (0 ns)
	'load' operation ('V_Gen_a_load', pred_controller.cpp:130) on array 'V_Gen_a', pred_controller.cpp:39 [272]  (1.24 ns)

 <State 86>: 2.47ns
The critical path consists of the following:
	'load' operation ('V_Gen_a_load', pred_controller.cpp:130) on array 'V_Gen_a', pred_controller.cpp:39 [272]  (1.24 ns)
	'store' operation (pred_controller.cpp:130) of variable 'V_Gen_a_load', pred_controller.cpp:130 on array 'V_Gen_a_cpy', pred_controller.cpp:40 [274]  (1.24 ns)

 <State 87>: 4.21ns
The critical path consists of the following:
	'call' operation ('roh', pred_controller.cpp:141) to 'guess_edu' [277]  (0 ns)
	'fcmp' operation ('tmp_94', pred_controller.cpp:148) [292]  (3.48 ns)
	'and' operation ('tmp_95', pred_controller.cpp:148) [293]  (0.287 ns)
	'select' operation ('roh', pred_controller.cpp:148) [294]  (0.449 ns)

 <State 88>: 0ns
The critical path consists of the following:

 <State 89>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (pred_controller.cpp:168) [296]  (8.75 ns)

 <State 90>: 1.01ns
The critical path consists of the following:
	'icmp' operation ('exitcond10', pred_controller.cpp:168) [300]  (0.721 ns)
	blocking operation 0.287 ns on control path)

 <State 91>: 0.677ns
The critical path consists of the following:
	'load' operation ('U_opt_load', pred_controller.cpp:168) on array 'U_opt' [310]  (0.677 ns)

 <State 92>: 8.75ns
The critical path consists of the following:
	bus write on port 'data' (pred_controller.cpp:168) [311]  (8.75 ns)

 <State 93>: 8.75ns
The critical path consists of the following:
	bus access on port 'data' (pred_controller.cpp:168) [315]  (8.75 ns)

 <State 94>: 8.75ns
The critical path consists of the following:
	bus access on port 'data' (pred_controller.cpp:168) [315]  (8.75 ns)

 <State 95>: 8.75ns
The critical path consists of the following:
	bus access on port 'data' (pred_controller.cpp:168) [315]  (8.75 ns)

 <State 96>: 8.75ns
The critical path consists of the following:
	bus access on port 'data' (pred_controller.cpp:168) [315]  (8.75 ns)

 <State 97>: 8.75ns
The critical path consists of the following:
	bus access on port 'data' (pred_controller.cpp:168) [315]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
